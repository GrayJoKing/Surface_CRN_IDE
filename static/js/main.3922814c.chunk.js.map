{"version":3,"sources":["../../surface_crn/build_dir/Species_Matcher.js","../../surface_crn/build_dir/Colour.js","../../surface_crn/build_dir/Custom_Regex_Decomposer.js","../../surface_crn/build_dir/Transition_Rule.js","../../surface_crn/build_dir/Colour_Map.js","../../surface_crn/build_dir/Transition_State.js","../../surface_crn/build_dir/Parser.js","components/HeaderComponent.tsx","components/PointClass.tsx","components/GridDisplayComponent.tsx","components/TransitionRulesComponent.tsx","components/ColourMappingComponent.tsx","components/ImportExportComponent.tsx","SurfaceCRNapp.tsx","index.tsx","../../surface_crn/build_dir/Surface_CRN.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Custom_Regex_Decomposer_1","require","default","constructor","init","original_string","matched","update_matched","includes","s","is_pure","match","toString","decompose","Species_Matcher_1","Colour","red","green","blue","species","Set","name","hexString","hex2rgb","update_colour","rgb","hex","c","assign","map","a","slice","join","add_matcher","add","delete_matcher","m","delete","r","replace","parseInt","xregexp_1","brackets","push","pop","length","parse","matches","curly_group","NaN","x","flat","rest","t","matchRecursive","valueNames","isNaN","i","b","split","posts","result","concat","branches","z","RegExp","Transition_Rule","is_mono","reactants","products","decomposed","rate","update","p","filter","every","y","undefined","Colour_1","colours","cache","Map","example_colours","temp_colours","equals","has","find_colour","get","values","some","s1","new_colour","add_temp","set","export","clear","find","clear_temp","update_time","execution_time","old_cells","new_cells","new_transitions","add_old_cell","old_val","add_new_cell","new_val","add_future_transitions","parse_import_files","parse_code","Transition_Rule_1","Surface_CRN_1","parse_line","line","program","rule","_","start","end","trim","parse_rule","rules","name_colour","vars","sp","parse_colour","colour_map","option","parse_option","key","val","set_option","parse_init_state","data","init_state_section","initial_state","async","input_files","Manifest_File","imported","manifest_maps","file","text","lines","HeaderComponent","React","Component","stopButton","fastBackward","stepBackward","playButton","stepForward","fastForward","render","Grid","item","container","xs","sm","Typography","variant","className","IconButton","onClick","props","stopPressed","sx","fontSize","fastBackwardPressed","stepBackPressed","playPressed","simPlaying","stepForwardPressed","fastForwardPressed","Point","subtract","multiply","scale","magnitude","Math","sqrt","origin","GridDisplayComponent","super","canvas","mouseDown","mousePosition","mouseMoved","state","createData","current_state","offset","selected_cells","sim_time","simulation","ref","elem","componentDidMount","addEventListener","scrollZoom","bind","passive","mouseEvents","draw","hexCoord","xcoord","ycoord","column","gridHeight","size","gridWidth","sin","PI","row","floor","rowIsOdd","relY","relX","type","rect","getBoundingClientRect","geometry","setState","preventDefault","componentDidUpdate","prevProps","prevState","model","selectedCells","canvasRender","getContext","CanvasRenderingContext2D","ctx","count","entries","d","drawCell","addExtraDetail","e","zoomRatio","deltaY","zoom","parentNode","width","window","devicePixelRatio","height","style","clearRect","translate","fillStyle","fillRect","textAlign","textBaseline","font","fillText","toFixed","lineWidth","strokeStyle","beginPath","lineTo","cos","closePath","fill","colour","updateData","coord","stroke","g","TransitionRulesComponent","Card","CardHeader","title","id","Table","TransitionGroup","Collapse","deleteRule","CardActions","Button","addRule","RuleRowComponent","reactant0","reactant1","product0","product1","TableRow","hover","TableCell","TextField","onChange","updateRule","inputProps","inputMode","step","pattern","min","padding","align","newVal","currentTarget","target","classList","contains","ColourMappingComponent","v","refreshColour","deleteColour","addColour","ColourRowComponent","pickerRef","mouseDownInElement","isOpen","showList","handleClickOutside","event","handleDownClick","document","componentWillUnmount","removeEventListener","backgroundColor","fullWidth","margin","label","color","updateColour","updateSpecies","deleteMatcher","addMatcher","ImportExportComponent","example_selected","FormControl","InputLabel","Select","autoWidth","MenuItem","disabled","import_example","component","multiple","hidden","import_code","export_code","theme","createTheme","palette","mode","primary","main","secondary","SurfaceCRNapp","initial_state_component","transition_state_component","simulator_component","header_component","model_tabs","toolbarInput","Surface_CRN","Array","from","shown_tab","sim_size","pixels_per_node","playing_simulation","editValue","rngSeed","rng_seed","fps","speedup_factor","ThemeProvider","CssBaseline","spacing","stepBackwardPressed","Tabs","onTabSelect","Tab","Box","display","updateSelectedCells","inputRef","changeGeometry","setRNGseed","updateSpeedUp","InputProps","updateFPS","random","seed","endAdornment","InputAdornment","position","copyRNGseed","sim_started","files","getElementById","new_model","parser","update_page","blob","Blob","anchor","createElement","download","href","webkitURL","URL","createObjectURL","dataset","downloadurl","click","fetch","headers","then","response","setPlaying","sim_playing","refreshSimState","refreshInitState","sim","startSimulation","start_sim","showSimulation","playSimulation","started","next_frame","setTimeout","step_forward","step_backward","prev_frame","stop_sim","remove_rule","add_rule","out","oldZoom","increase_size","decrease_size","selected","focus","set_cells","n","parseFloat","ReactDOM","StrictMode","Colour_Map","Species_Matcher","Colour_Map_1","Transition_State_1","Parser_1","ts_priority_queue_1","random_seedable_1","options","last_updated","sim_queue","sim_history","rule_check_cache","splice","indexOf","blankRule","coords","xS","sort","minX","maxX","unshift","yS","minY","maxY","output","k","MersenneTwister","int","comparator","initial_changes","forEach","find_next_transitions","initialValues","get_next_transition","peek","dequeue","run_upto","time","run_backto","ignore","newT","tr","queue","current_cell","possible_transitions","rs","log","float","neighbour_offsets","xd","yd","other_cell"],"mappings":"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","file":"static/js/main.3922814c.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Custom_Regex_Decomposer_1 = __importDefault(require(\"./Custom_Regex_Decomposer\"));\nclass Species_Matcher {\n    constructor(init) {\n        this.original_string = \"\";\n        this.matched = [];\n        this.update_matched(init);\n    }\n    includes(s) {\n        return this.matched.includes(s);\n    }\n    is_pure() {\n        return this.original_string.match(/^\\w+$/) === null;\n    }\n    toString() {\n        return this.original_string;\n    }\n    update_matched(s) {\n        this.original_string = s;\n        this.matched = Custom_Regex_Decomposer_1.default.decompose(s);\n    }\n}\nexports.default = Species_Matcher;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nclass Colour {\n    constructor(init) {\n        this.red = 0;\n        this.green = 0;\n        this.blue = 0;\n        this.species = new Set();\n        this.name = \"\";\n        this.hexString = \"\";\n        if (typeof (init) === 'string') {\n            init = Colour.hex2rgb(init);\n        }\n        this.update_colour(init);\n    }\n    static white() { return new Colour({ red: 256, green: 256, blue: 256 }); }\n    rgb() {\n        return [this.red, this.green, this.blue];\n    }\n    hex() {\n        return this.hexString;\n    }\n    update_colour(c) {\n        Object.assign(this, c);\n        this.hexString = '#' + this.rgb().map(a => (\"0\" + a.toString(16)).slice(-2)).join('');\n    }\n    add_matcher(s) { this.species.add(new Species_Matcher_1.default(s)); }\n    delete_matcher(m) { this.species.delete(m); }\n    static hex2rgb(s) {\n        s = s.replace(/^#/, '');\n        let r = s.match(/^([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})$/);\n        if (r) {\n            return { red: parseInt(r[1], 16), green: parseInt(r[2], 16), blue: parseInt(r[3], 16) };\n        }\n        else {\n            // TODO: setup fail state\n            return { red: 256, green: 256, blue: 256 };\n        }\n    }\n}\nexports.default = Colour;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xregexp_1 = __importDefault(require(\"xregexp\"));\nclass Custom_Regex_Decomposer {\n    static decompose(init) {\n        // Validate brackets are all balanced\n        var brackets = [];\n        for (var c of init) {\n            if (\"([{\".includes(c)) {\n                brackets.push(c);\n            }\n            else if (\")]}\".includes(c)) {\n                if (!\"() {} []\".includes(brackets.pop() + c)) {\n                    throw \"Unbalanced brackets\";\n                }\n            }\n        }\n        if (brackets.length !== 0)\n            throw \"Unbalanced brackets\";\n        return this.parse(init);\n    }\n    static parse(s, matches = 1, curly_group = NaN) {\n        var r;\n        if (s === \"\") {\n            return [\"\"];\n        }\n        else if (r = s.match(/^((?:\\w|\\\\\\d+|\\\\<\\d+>))\\?(.*)$/)) {\n            return this.parse(r[2], matches, curly_group).map(x => [r[1] + x, x]).flat();\n        }\n        else if (r = s.match(/^((?:\\w|\\\\\\d+|\\\\<\\d+>| \\+ | \\-> )+)(?!\\?)(.*)$/)) {\n            return this.parse(r[2], matches, curly_group).map(x => r[1] + x);\n        }\n        else if (s[0] === \"{\") {\n            var t = xregexp_1.default.matchRecursive(s, \"\\\\{\", \"\\\\}\\\\??\", 'g', { valueNames: ['between', 'left', 'match', 'right'] });\n            var rest = t.slice(3).map(x => x.value).join('');\n            if (isNaN(curly_group)) {\n                var i = 0;\n                var b = t[1].value.match(/^\\w+$/) ? t[1].value.split('').map(r => [r]) : t[1].value.split('|').map(x => this.parse(x, matches, i++));\n                i = 0;\n                return b.map(c => {\n                    var posts = this.parse(rest, matches, i++);\n                    var result = posts.map(x => c.map(r => r + x)).flat();\n                    if (t[2]['value'] === \"}?\")\n                        result = result.concat(posts);\n                    return result;\n                }).flat();\n            }\n            else {\n                var branches = t[1].value.match(/^\\w+$/) ? t[1].value.split('') : t[1].value.split('|').map(x => this.parse(x, matches, curly_group)).flat();\n                if (curly_group > branches.length)\n                    throw \"Uneven_Curly_Groups\";\n                var posts = this.parse(rest, matches, curly_group);\n                var result = posts.map(x => this.parse(branches[curly_group], matches, curly_group) + x);\n                if (t[2]['value'] === \"}?\")\n                    result = result.concat(posts);\n                return result;\n            }\n        }\n        else if (s[0] === \"[\") {\n            var t = xregexp_1.default.matchRecursive(s, \"\\\\[\", \"\\\\]\\\\??\", 'g', { valueNames: ['between', 'left', 'match', 'right'] });\n            var branches = t[1].value.match(/^\\w+$/) ? t[1].value.split('') : t[1].value.split('|').map(x => this.parse(x, matches, curly_group)).flat();\n            if (t[2]['value'] === \"]?\")\n                branches.push(\"\");\n            return this.parse(t.slice(3).map(x => x.value).join(''), matches, curly_group).map(x => branches.map(z => z + x)).flat();\n        }\n        else if (s[0] === \"(\") {\n            // TODO: Handle nested brackets properly\n            var t = xregexp_1.default.matchRecursive(s, \"\\\\(\", \"\\\\)\\\\??\", 'g', { valueNames: ['between', 'left', 'match', 'right'] });\n            var branches = t[1].value.match(/^\\w+$/) ? t[1].value.split('') : t[1].value.split('|').map(x => this.parse(x, matches, curly_group)).flat();\n            if (t[2]['value'] === \")?\")\n                branches.push(\"\");\n            return this.parse(t.slice(3).map(x => x.value).join(''), matches + 1, curly_group).map(x => branches.map(z => z + x.replace(new RegExp(\"\\\\\\\\\" + matches + \"|\\\\\\\\<\" + matches + \">\", 'g'), z))).flat();\n        }\n        else {\n            throw \"Unknown Character \" + s[0];\n        }\n    }\n}\nexports.default = Custom_Regex_Decomposer;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Custom_Regex_Decomposer_1 = __importDefault(require(\"./Custom_Regex_Decomposer\"));\nclass Transition_Rule {\n    constructor(init) {\n        this.is_mono = true;\n        this.reactants = [];\n        this.products = [];\n        this.decomposed = [];\n        this.rate = 1;\n        this.update(init);\n    }\n    toString() {\n        return '(' + this.rate.toString() + ') ' + [this.reactants, this.products].map(x => x.map(a => a.toString()).join(' + ')).join(' -> ');\n    }\n    update(p) {\n        // TODO: add error checking\n        Object.assign(this, p);\n        if (this.reactants.length !== this.products.length)\n            throw \"Reactants and products are not equal length\";\n        this.is_mono = this.reactants.length < 2 && this.products.length < 2;\n        this.decomposed = Custom_Regex_Decomposer_1.default.decompose(this.reactants.join(' + ') + \" -> \" + this.products.join(' + ')).map(a => a.split(/ \\+ | \\-> /)).filter(a => a.every(x => x !== \"\"));\n    }\n    static blankRule() {\n        return new Transition_Rule({ is_mono: true, reactants: [''], products: [''] });\n    }\n    matches(x, y) {\n        if (this.is_mono === (y !== undefined))\n            return [];\n        if (this.is_mono) {\n            return this.decomposed.filter(a => a[0] === x).map(a => [a[1]]);\n        }\n        else {\n            return this.decomposed.filter(a => a[0] === x && a[1] === y).map(a => [a[2], a[3]]);\n        }\n    }\n}\nexports.default = Transition_Rule;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nclass Colour_Map {\n    constructor(init) {\n        this.colours = new Set();\n        this.cache = new Map();\n        this.example_colours = ['#ffffff', '#000000', '#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#a9a9a9'].map(c => new Colour_1.default(c));\n        this.temp_colours = new Map();\n        if (init)\n            this.colours = init;\n    }\n    equals(c) {\n        return !!([...c.colours].filter(a => !this.colours.has(a)) || [...this.colours].filter(a => !c.colours.has(a)));\n    }\n    find_colour(s) {\n        let r = this.cache.get(s);\n        if (r === undefined) {\n            for (let c of this.colours) {\n                if ([...c.species.values()].some((s1) => s1.includes(s))) {\n                    r = c;\n                    break;\n                }\n            }\n            if (r === undefined) {\n                r = this.temp_colours.get(s);\n                if (r === undefined) {\n                    r = this.new_colour();\n                    if (r === undefined)\n                        r = new Colour_1.default(\"#FFFFFF\");\n                    this.add_temp(s, r);\n                    this.cache.set(s, r);\n                }\n            }\n        }\n        return r;\n    }\n    export() {\n        return [...this.colours.values()].map(c => '{' + c.name + '} ' + [...c.species.values()].map(s => s.toString()).join(' ') + ' : (' + c.rgb().join(',') + ')');\n    }\n    new_colour() {\n        this.cache.clear();\n        let c = this.example_colours.find((a) => {\n            if ([...this.temp_colours.values(), ...this.colours.values()].find((c) => c.hex() === a.hex()) !== undefined)\n                return false;\n            return true;\n        });\n        if (c === undefined) {\n            return new Colour_1.default(\"#000000\");\n        }\n        else {\n            return c;\n        }\n    }\n    add(c) {\n        this.cache.clear();\n        this.colours.add(c);\n    }\n    delete(c) {\n        this.cache.clear();\n        this.colours.delete(c);\n    }\n    add_temp(s, c) {\n        this.cache.clear();\n        this.temp_colours.set(s, c);\n    }\n    clear_temp() {\n        this.cache.clear();\n        this.temp_colours.clear();\n    }\n}\nexports.default = Colour_Map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Transition_State {\n    constructor(update_time, execution_time) {\n        this.old_cells = [];\n        this.new_cells = [];\n        this.new_transitions = null;\n        this.update_time = update_time;\n        this.execution_time = execution_time;\n    }\n    add_old_cell(x, y, old_val) {\n        this.old_cells.push([x, y, old_val]);\n    }\n    add_new_cell(x, y, new_val) {\n        this.new_cells.push([x, y, new_val]);\n    }\n    add_future_transitions(t) {\n        this.new_transitions = t;\n    }\n}\nexports.default = Transition_State;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse_import_files = exports.parse_code = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nconst Surface_CRN_1 = __importDefault(require(\"./Surface_CRN\"));\nfunction parse_rule(line) {\n    if ((line.match(/->/g) || []).length != 1)\n        return false;\n    let rate = 1;\n    line = line.replace(/\\((\\d*(?:\\.\\d+)?)\\)/, (_, x) => { rate = +x; return ''; });\n    let [start, end] = line.split('->').map(a => a.split('+').map(b => b.trim())); // Note change how transition rules are formed\n    //TODO: add more conditions (and error messages?)\n    if (start.length != end.length || start.length > 2 || start.length == 0)\n        return false;\n    return new Transition_Rule_1.default({ reactants: start, products: end, rate: rate, is_mono: start.length == 1 });\n}\nfunction parse_option(line) {\n    if ((line.match(/=/g) || []).length != 1)\n        return false;\n    return line.split('=').map(a => a.trim());\n}\nfunction parse_colour(line) {\n    let vars = line.match(/^(?:\\{([^}]+)\\})? *((?: *[^,: ]+,? *?)+) *: *\\((\\d+) *, *(\\d+) *, *(\\d+)\\)$/);\n    if (vars == null)\n        return false;\n    var sp = vars[2].split(/,\\s*|\\s+/).map(a => new Species_Matcher_1.default(a.trim()));\n    return new Colour_1.default({ name: vars[1] || vars[2], species: new Set(sp), red: +vars[3], green: +vars[4], blue: +vars[5] });\n}\nfunction parse_line(line, program) {\n    var rule = parse_rule(line);\n    if (rule !== false) {\n        program.rules.push(rule);\n        return true;\n    }\n    var name_colour = parse_colour(line);\n    if (name_colour !== false) {\n        program.colour_map.add(name_colour);\n        return true;\n    }\n    var option = parse_option(line);\n    if (option !== false) {\n        let [key, val] = option;\n        program.set_option(key, val);\n        return true;\n    }\n    return false;\n}\nfunction parse_init_state(line) {\n    // TODO: add more error checking\n    return line.split(/\\s+|,/);\n}\nfunction parse_code(data) {\n    let init_state_section = false;\n    let program = new Surface_CRN_1.default();\n    for (let line of data) {\n        line = line.trim().replace(/#.*/, \"\");\n        if (line == \"\")\n            continue;\n        if (!init_state_section) {\n            if (line == \"!START_INIT_STATE\") {\n                init_state_section = true;\n                continue;\n            }\n            parse_line(line, program);\n        }\n        else {\n            if (line == \"!END_INIT_STATE\") {\n                init_state_section = false;\n                continue;\n            }\n            let val = parse_init_state(line);\n            program.initial_state.push(val);\n        }\n    }\n    return program;\n}\nexports.parse_code = parse_code;\n// Import project as a list of files\n// TODO: change false to list of warnings\nasync function parse_import_files(input_files) {\n    if (!input_files) {\n        //TODO: show error\n        return false;\n    }\n    class Manifest_File {\n        constructor() {\n            this.data = [];\n            this.imported = false;\n        }\n    }\n    let manifest_maps = new Map();\n    ;\n    for (let file of input_files) {\n        var m = new Manifest_File();\n        m.data = (await file.text()).split(\"\\n\").map(a => a.trim().replace(/#.*/, ''));\n        manifest_maps.set(file.name, m);\n    }\n    for (let [key, m] of manifest_maps) {\n        for (let s of m.data) {\n            if (s.match(/^!INCLUDE /)) {\n                //TODO: replace includes\n            }\n        }\n    }\n    let lines = [];\n    for (let [_, m] of manifest_maps) {\n        if (!m.imported)\n            lines.push(...m.data);\n    }\n    return parse_code(lines);\n}\nexports.parse_import_files = parse_import_files;\n","import React from 'react';\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport FastForwardIcon from \"@mui/icons-material/FastForward\";\r\nimport FastRewindIcon from \"@mui/icons-material/FastRewind\";\r\nimport ForwardIcon from \"@mui/icons-material/Forward10\";\r\nimport ReplayIcon from \"@mui/icons-material/Replay10\";\r\nimport StopIcon from \"@mui/icons-material/Stop\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\ninterface HeaderProps {\r\n\tplayPressed : (_ : any) => void\r\n\tstepBackPressed : (_ : any) => void\r\n\tstepForwardPressed : (_ : any) => void\r\n\tfastBackwardPressed : (_ : any) => void\r\n\tfastForwardPressed : (_ : any) => void\r\n\tstopPressed : (_ : any) => void\r\n\tsimPlaying : boolean\r\n}\r\n\r\nexport default class HeaderComponent extends React.Component<HeaderProps, {}> {\r\n\tstopButton : Element | null = null;\r\n\tfastBackward : Element | null = null;\r\n\tstepBackward : Element | null = null;\r\n\tplayButton : Element | null = null;\r\n\tstepForward : Element | null = null;\r\n\tfastForward : Element | null = null;\r\n\r\n\trender() {\r\n\t\treturn <Grid item container xs={12}>\r\n\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t<Typography variant=\"h3\" className=\"grid title\">\r\n\t\t\t\t\tSurface CRN Simulator\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t<IconButton onClick={this.props.stopPressed}> <StopIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.fastBackwardPressed}> <ReplayIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.stepBackPressed}> <FastRewindIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.playPressed}>\r\n\t\t\t\t\t{this.props.simPlaying\r\n\t\t\t\t\t\t? <PauseIcon sx={{fontSize : 40}} />\r\n\t\t\t\t\t\t: <PlayArrowIcon sx={{fontSize : 40}} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.stepForwardPressed}> <FastForwardIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.fastForwardPressed}> <ForwardIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t</Grid>\r\n\t\t</Grid>;\r\n\t}\r\n}\r\n","\r\nclass Point {\r\n\tx: number;\r\n\ty: number;\r\n\r\n\tstatic origin : Point = new Point(0,0);\r\n\r\n\tconstructor(x : number = 0, y : number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tadd(p : Point) { return new Point(this.x + p.x, this.y + p.y) };\r\n\tsubtract(p : Point) { return new Point(this.x - p.x, this.y - p.y) };\r\n\tmultiply(p : Point) { return new Point(this.x * p.x, this.y * p.y) };\r\n\tscale(s : number) { return new Point(this.x * s, this.y * s) };\r\n\tequals(p : Point) { return this.x === p.x && this.y === p.y };\r\n\r\n\tmagnitude() { return Math.sqrt(this.x**2 + this.y**2)}\r\n};\r\n\r\nexport default Point;\r\n","import React from 'react';\r\nimport Surface_CRN, {Colour} from 'surface_crn';\r\nimport Point from './PointClass';\r\n\r\ninterface GridDisplayProps {\r\n\tcurrent_state : string[][]\r\n\tmodel : Surface_CRN\r\n\tgeometry : 'square'|'hex'\r\n\tsize : number\r\n\tzoom : (b : boolean) => number\r\n\tselectedCells : (s : Point[], val : string) => void\r\n\tsimulation? : boolean\r\n}\r\n\r\ninterface GridDisplayState extends React.ComponentState {\r\n\tdata: [string, Colour][][]\r\n\toffset : Point\r\n\tselected_cells : Point[]\r\n\tsim_time : number | null\r\n}\r\n\r\nclass GridDisplayComponent extends React.Component<GridDisplayProps, GridDisplayState> {\r\n\r\n\tcanvas : HTMLCanvasElement | null = null;\r\n\tmouseDown : boolean = false;\r\n\tmousePosition : Point | null = null;\r\n\tmouseMoved : boolean = false;\r\n\r\n\tconstructor(props : GridDisplayProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata : this.createData(props.current_state),\r\n\t\t\toffset : Point.origin,\r\n\t\t\tselected_cells : [],\r\n\t\t\tsim_time : props.simulation ? 0 : null\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <canvas ref={elem => this.canvas = elem} />\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// render all elements\r\n\t\tthis.canvas!.addEventListener('wheel', this.scrollZoom.bind(this), {passive : false});\r\n\t\tthis.canvas!.addEventListener('mousedown', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mouseup', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mousemove', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('dblclick', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mouseenter', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mouseleave', this.mouseEvents.bind(this));\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\thexCoord(xcoord : number, ycoord : number) {\r\n\t\tlet gridHeight = (0.75+0.375)*this.props.size;\r\n\t\tlet gridWidth = this.props.size * Math.sin(2 * Math.PI/6)*2*0.75;\r\n\t\tlet c = (0.75-0.375)*this.props.size;\r\n\t\tlet m = c/(gridWidth/2);\r\n\r\n\t\t// Find the row and column of the box that the point falls in.\r\n\t\tlet row = Math.floor((ycoord+c/2) / gridHeight);\r\n\t\tlet column;\r\n\r\n\t\tlet rowIsOdd = (row & 1) === 1;\r\n\t\tcolumn = Math.floor(xcoord / gridWidth - (rowIsOdd ? 0.5 : 0));\r\n\r\n\t\t// Work out the position of the point relative to the box it is in\r\n\t\tlet relY = (ycoord + c/2) - (row * gridHeight);\r\n\t\tlet relX = xcoord - (column * gridWidth) - (rowIsOdd ? gridWidth/2 : 0);\r\n\r\n\t\t// Work out if the point is above either of the hexagon's top edges\r\n\t\tif (relY < (-m * relX) + c) {\r\n\t\t\trow--;\r\n\t\t\tif (!rowIsOdd) column--;\r\n\t\t} else if (relY < (m * relX) - c) {\r\n\t\t\trow--;\r\n\t\t\tif (rowIsOdd) column++;\r\n\t\t}\r\n\t\treturn [column, row];\r\n\t}\r\n\r\n\tmouseEvents(m : MouseEvent) {\r\n\t\tswitch (m.type) {\r\n\t\t\tcase \"mousedown\":\r\n\t\t\t\tthis.mouseDown = true;\r\n\t\t\t\tthis.mousePosition = new Point(m.x, m.y);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mouseenter\":\r\n\t\t\tcase \"mouseleave\":\r\n\t\t\tcase \"mouseup\":\r\n\t\t\t\tif (this.mouseDown && !this.mouseMoved) {\r\n\t\t\t\t\tconst rect = this.canvas!.getBoundingClientRect();\r\n\t\t\t\t\tconst xcoord = m.x - this.state.offset.x - rect.x;\r\n\t\t\t\t\tconst ycoord = m.y - this.state.offset.y - rect.y;\r\n\t\t\t\t\tif (this.props.geometry === \"square\") {\r\n\t\t\t\t\t\tthis.setState({selected_cells : [new Point(Math.floor(xcoord/this.props.size), Math.floor(ycoord/this.props.size))]});\r\n\t\t\t\t\t} else if (this.props.geometry === \"hex\") {\r\n\t\t\t\t\t\tlet [column, row] = this.hexCoord(xcoord, ycoord);\r\n\t\t\t\t\t\tthis.setState({selected_cells : [new Point(Math.floor(column), Math.floor(row))]});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.mouseDown = false;\r\n\t\t\t\tthis.mouseMoved = false;\r\n\t\t\t\tthis.mousePosition = null;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mousemove\":\r\n\t\t\t\tif (this.mouseDown) {\r\n\t\t\t\t\tlet offset = this.mousePosition!.subtract(new Point(m.x, m.y));\r\n\t\t\t\t\t// Add a bit of give before registering a pan\r\n\t\t\t\t\tif (this.mouseMoved || offset.magnitude() > 5) {\r\n\t\t\t\t\t\tthis.mousePosition = new Point(m.x, m.y);\r\n\t\t\t\t\t\tthis.mouseMoved = true;\r\n\t\t\t\t\t\tthis.setState({offset : this.state.offset.subtract(offset)});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"dblclick\":\r\n\t\t\t\t/*\r\n\t\t\t\tconst rect = this.canvas!.getBoundingClientRect();\r\n\t\t\t\tconst xcoord = m.x - this.state.offset.x - rect.x;\r\n\t\t\t\tconst ycoord = m.y - this.state.offset.y - rect.y;\r\n\t\t\t\tif (this.props.geometry === \"square\") {\r\n\t\t\t\t\tthis.setState({selected_cells : [new Point(Math.floor(xcoord/this.props.size), Math.floor(ycoord/this.props.size))]});\r\n\t\t\t\t} else if (this.props.geometry === \"hex\") {\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Edit current cell\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tm.preventDefault();\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps : GridDisplayProps, prevState : GridDisplayState) {\r\n\t\tif (prevProps.model !== this.props.model\r\n\t\t|| prevProps.geometry !== this.props.geometry\r\n\t\t|| !prevState.offset.equals(this.state.offset)\r\n\t\t|| prevProps.size !== this.props.size\r\n\t\t|| (prevState.sim_time !== null && prevState.sim_time > 0 && this.state.sim_time === 0)) {\r\n\t\t\tthis.draw();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (prevProps.current_state !== this.props.current_state) {\r\n\t\t\tthis.setState({data : this.createData(this.props.current_state)});\r\n\t\t}\r\n\r\n\t\tif (prevState !== this.state) {\r\n\t\t\tif (prevState.selected_cells !== this.state.selected_cells) {\r\n\t\t\t\tlet val : string | null = this.state.selected_cells.length < 1 ? \"\" : null;\r\n\t\t\t\tfor (let i of this.state.selected_cells) {\r\n\t\t\t\t\tlet r = (this.state.data?.[i.y]?.[i.x] || [\"\"])[0];\r\n\t\t\t\t\tif (val === null) val = r;\r\n\t\t\t\t\tif (val !== r) val = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.selectedCells(this.state.selected_cells, val!);\r\n\t\t\t}\r\n\r\n\t\t\tlet canvasRender = this.canvas!.getContext(\"2d\");\r\n\t\t\tif (canvasRender === null || !(canvasRender instanceof CanvasRenderingContext2D)) return;\r\n\t\t\tconst ctx : CanvasRenderingContext2D = canvasRender;\r\n\t\t\tif (prevState.data !== this.state.data) {\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tfor (let [y, row] of this.state.data.entries()) {\r\n\t\t\t\t\tfor (let [x, val] of row.entries()) {\r\n\t\t\t\t\t\tlet d = prevState.data?.[y]?.[x];\r\n\t\t\t\t\t\tif (d === undefined || d[0] !== val[0] || d[1].hex() !== val[1].hex()) {\r\n\t\t\t\t\t\t\tthis.drawCell(ctx, x, y, val) && count++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.addExtraDetail(ctx, prevState);\r\n\t\t}\r\n\t}\r\n\r\n\tscrollZoom(e : WheelEvent) {\r\n\t\t//TODO: zoom in on mouse location\r\n\t\tlet zoomRatio = 1;\r\n\t\tif (e.deltaY < 0) {\r\n\t\t\tzoomRatio = this.props.zoom(true);\r\n\t\t} else if (e.deltaY > 0) {\r\n\t\t\tzoomRatio = this.props.zoom(false);\r\n\t\t}\r\n\t\te.preventDefault();\r\n\t\tconst rect = this.canvas!.getBoundingClientRect();\r\n\t\tconst x = (this.state.offset.x - e.x + rect.x) / zoomRatio + e.x - rect.x;\r\n\t\tconst y = (this.state.offset.y - e.y + rect.y) / zoomRatio + e.y - rect.y;\r\n\t\tthis.setState({offset : new Point(x, y)});\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tif (this.canvas === null) return;\r\n\t\tconst rect = (this.canvas.parentNode! as Element).getBoundingClientRect();\r\n\t\tthis.canvas.width = Math.floor(rect.width * window.devicePixelRatio);\r\n\t\tthis.canvas.height = Math.floor(rect.height * window.devicePixelRatio);\r\n\t\tthis.canvas.style.width = Math.floor(rect.width) + 'px';\r\n\t\tthis.canvas.style.height = Math.floor(rect.height) + 'px';\r\n\t\tconst canvasRender = this.canvas.getContext(\"2d\");\r\n\t\tif (canvasRender === null || !(canvasRender instanceof CanvasRenderingContext2D)) return;\r\n\t\tconst ctx : CanvasRenderingContext2D = canvasRender;\r\n\t\tctx.clearRect(0,0, ctx.canvas.width, ctx.canvas.height);\r\n\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\r\n\t\tctx.translate(this.state.offset.x, this.state.offset.y);\r\n\r\n\t\tlet data = this.createData(this.props.current_state);\r\n\t\tfor (let [y, row] of data.entries()) {\r\n\t\t\tfor (let [x, val] of row.entries()) {\r\n\t\t\t\tthis.drawCell(ctx, x, y, val);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.addExtraDetail(ctx);\r\n\t}\r\n\r\n\taddExtraDetail(ctx : CanvasRenderingContext2D, prevState? : GridDisplayState) {\r\n\r\n\t\tif (this.state.sim_time !== null) {\r\n\t\t\tctx.fillStyle = \"#FFFFFF\";\r\n\t\t\tlet xcoord = ctx.canvas.width/window.devicePixelRatio - 80 - this.state.offset.x;\r\n\t\t\tlet ycoord = ctx.canvas.height/window.devicePixelRatio - 30 - this.state.offset.y;\r\n\t\t\tctx.fillRect(xcoord, ycoord, 80, 30);\r\n\r\n\t\t\tctx.fillStyle = \"#000000\";\r\n\t\t\tctx.textAlign = 'left';\r\n\t\t\tctx.textBaseline = 'middle';\r\n\t\t\tctx.font = \"15px Arial\";\r\n\t\t\tctx.fillText(\"T: \"+this.state.sim_time.toFixed(2), xcoord + 4, ycoord + 15, 80);\r\n\t\t}\r\n\t\tfor (let z of [prevState, this.state]) {\r\n\t\t\tif (z !== undefined) {\r\n\t\t\t\tfor (let p of z.selected_cells) {\r\n\t\t\t\t\tctx.lineWidth = 1;\r\n\t\t\t\t\tctx.strokeStyle = \"rgba(0,204,256,0.3)\";\r\n\t\t\t\t\tctx.fillStyle = ctx.strokeStyle;\r\n\t\t\t\t\tif (this.props.geometry === \"square\") {\r\n\t\t\t\t\t\tif (z === prevState) {\r\n\t\t\t\t\t\t\tthis.drawCell(ctx, p.x, p.y, this.state.data?.[p.y]?.[p.x]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.fillRect(p.x*this.props.size, p.y*this.props.size, this.props.size, this.props.size);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (this.props.geometry === \"hex\") {\r\n\t\t\t\t\t\tif (z === prevState) {\r\n\t\t\t\t\t\t\tthis.drawCell(ctx, p.x, p.y, this.state.data?.[p.y]?.[p.x]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet xcoord = (p.x + (p.y&1)/2 + 0.5)*this.props.size*Math.sin(2 * Math.PI/6)*2*0.75;\r\n\t\t\t\t\t\t\tlet ycoord = (p.y + 0.5)*this.props.size*0.75*2*0.75;\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tfor (var i = 0; i < 6; i++) {\r\n\t\t\t\t\t\t\t\tctx.lineTo(xcoord + this.props.size * Math.sin(2 * Math.PI / 6 * i)*0.75, ycoord + this.props.size * Math.cos(2 * Math.PI / 6 * i)*0.75);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateData(current_state : string[][]) {\r\n\t\tthis.props.model.colour_map.clear_temp();\r\n\t\tvar data : [string, Colour][][] = [];\r\n\t\tfor (var [y, row] of current_state.entries()) {\r\n\t\t\tdata[y] = [];\r\n\t\t\tfor (var [x, elem] of row.entries()) {\r\n\t\t\t\tlet colour = this.props.model.colour_map.find_colour(elem);\r\n\t\t\t\tif (colour == null) {\r\n\t\t\t\t\tcolour = this.props.model.colour_map.new_colour();\r\n\t\t\t\t\tthis.props.model.colour_map.add_temp(elem, colour);\r\n\t\t\t\t}\r\n\t\t\t\tdata[y][x] = [elem, colour];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\tupdateData(current_state : string[][]) {\r\n\t\tvar data = this.createData(current_state);\r\n\t\tthis.setState({data : data});\r\n\t}\r\n\r\n\tdrawCell(ctx : CanvasRenderingContext2D, x : number, y : number, val : [string, Colour] | undefined) {\r\n\t\tlet coord : Point;\r\n\t\tif (this.props.geometry === \"square\") {\r\n\t\t\tcoord = new Point((x+0.5)*this.props.size, (y+0.5)*this.props.size);\r\n\t\t} else {\r\n\t\t\tcoord = new Point(\r\n\t\t\t\t(x + (y&1)/2 + 0.5)*this.props.size*Math.sin(2 * Math.PI/6)*2*0.75,\r\n\t\t\t\t(y + 0.5)*this.props.size*0.75*2*0.75\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (coord.x - this.props.size + this.state.offset.x > this.canvas!.width/window.devicePixelRatio || coord.y - this.props.size + this.state.offset.y > this.canvas!.height/window.devicePixelRatio) return false;\r\n\t\tif (coord.x + this.props.size + this.state.offset.x < 0 || coord.y + this.props.size + this.state.offset.y < 0) return false;\r\n\t\t// if (this.props.size < 1 && (this.props.size*coord.x % 1 < this.props.size || this.props.size*coord.y % 1 < this.props.size)) return false\r\n\r\n\t\tif (val === undefined) {\r\n\t\t\tctx.fillStyle = 'rgba(0,0,0,0)';\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(' + val[1].rgb().join(',') + ')';\r\n\t\t\tctx.strokeStyle = ctx.fillStyle;\r\n\t\t}\r\n\r\n\t\tif (this.props.geometry === \"square\") {\r\n\t\t\tif (val === undefined) {\r\n\t\t\t\tctx.clearRect(coord.x - this.props.size/2, coord.y - this.props.size/2, this.props.size, this.props.size);\r\n\t\t\t} else {\r\n\t\t\t\tctx.fillRect(coord.x - this.props.size/2, coord.y - this.props.size/2, this.props.size, this.props.size);\r\n\t\t\t}\r\n\t\t} else if (this.props.geometry === \"hex\") {\r\n\t\t\tctx.beginPath();\r\n\t\t\tfor (var i = 0; i < 6; i++) {\r\n\t\t\t\tctx.lineTo(coord.x + this.props.size * [0,0.645,0.645,0,-0.645,-0.645][i], coord.y + this.props.size * [0.75,0.375,-0.375,-0.75,-0.375,0.375][i]);\r\n\t\t\t}\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.strokeStyle = ctx.fillStyle;\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\r\n\t\tif (this.props.size >= 12) {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\tlet [r,g,b] = val[1].rgb();\r\n\t\t\t\tctx.fillStyle = (r * 0.299 + g * 0.587 + b * 0.114) > 186 ? 'black' : 'white';\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.font = \"11px Arial\";\r\n\t\t\t\tctx.fillText(val[0], coord.x, coord.y, this.props.size);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport default GridDisplayComponent\r\n","import React from 'react';\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport SurfaceCRN, {Transition_Rule} from 'surface_crn';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\ninterface TransitionRulesProps {\r\n\tmodel : SurfaceCRN\r\n\trules : Transition_Rule[]\r\n\taddRule : () => void\r\n\tdeleteRule : (r : Transition_Rule) => void\r\n}\r\n\r\nexport default class TransitionRulesComponent extends React.Component<TransitionRulesProps, {}> {\r\n\r\n\trender() {\r\n\t\t// TODO: figure out better way of unique indexing\r\n\r\n\t\treturn <Grid item xs={12} sm={8}>\r\n\t\t\t<Card sx={{height : \"100%\"}}>\r\n\t\t\t\t<CardHeader title=\"Transition Rules\" />\r\n\r\n\t\t\t\t<Grid container item id=\"colour_container\" sx={{\"overflowY\" : \"auto\", \"maxHeight\" : \"20rem\"}}>\r\n\t\t\t\t\t<Table size=\"small\">\r\n\t\t\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t\t\t{this.props.rules.map((r : Transition_Rule, i : number) =>\r\n\t\t\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t\t\t<RuleRowComponent key={r.toString() + i.toString()} rule={r} deleteRule={() => this.props.deleteRule(r)} />\r\n\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button variant=\"outlined\" onClick={this.props.addRule}> Add Rule </Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\r\n\t\t</Grid>;\r\n\t}\r\n}\r\n\r\ninterface RuleRowState {\r\n\treactant0 : string,\r\n\treactant1 : string,\r\n\tproduct0 : string,\r\n\tproduct1 : string,\r\n\trate : number,\r\n}\r\n// TODO: Handle mono transitions properly\r\nclass RuleRowComponent extends React.Component<{rule: Transition_Rule, deleteRule : React.MouseEventHandler<Element>}, RuleRowState> {\r\n\trule : Transition_Rule;\r\n\tdeleteRule : React.MouseEventHandler<Element>;\r\n\r\n\tconstructor(props : {rule : Transition_Rule, deleteRule : React.MouseEventHandler<Element>}) {\r\n\t\tsuper(props);\r\n\t\tthis.rule = props.rule;\r\n\t\tthis.state = {\r\n\t\t\treactant0 : props.rule.reactants[0],\r\n\t\t\treactant1 : !props.rule.is_mono && props.rule.reactants.length > 1 ? props.rule.reactants[1] : '',\r\n\t\t\tproduct0 : props.rule.products[0],\r\n\t\t\tproduct1 : !props.rule.is_mono && props.rule.products.length > 1 ? props.rule.products[1] : '',\r\n\t\t\trate : props.rule.rate,\r\n\t\t}\r\n\t\tthis.deleteRule = props.deleteRule;\r\n\t}\r\n\r\n\trender() {\r\n\t\t// TODO: gray out mono'd rules\r\n\t\t// TODO: make invalid rules red\r\n\r\n\t\treturn <TableRow hover>\r\n\t\t\t<TableCell> <TextField variant=\"filled\" type=\"number\" value={this.state.rate} onChange={this.updateRule.bind(this)} style={{width : \"5rem\"}}inputProps={{ inputMode: 'numeric', step : 0.1, pattern: '[0-9]+(\\\\.[0-9]+)?', className : \"rulesRate\", min : 0, style: {\"padding\" : \"5px\"}}} /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\"> <TextField variant=\"filled\" value={this.state.reactant0} onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesReactant0\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <AddIcon /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <TextField variant=\"filled\" value={this.state.reactant1} className=\"rulesReactant1\" onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesReactant1\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <ArrowForwardIcon /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <TextField variant=\"filled\" value={this.state.product0} className=\"rulesProduct0\" onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesProduct0\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <AddIcon /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <TextField variant=\"filled\" value={this.state.product1} className=\"rulesProduct1\" onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesProduct1\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell> <IconButton onClick={this.deleteRule}> <DeleteIcon/> </ IconButton> </TableCell>\r\n\t\t</TableRow>;\r\n\t}\r\n\r\n\tupdateRule(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet reactants = [this.state.reactant0, this.state.reactant1];\r\n\t\tlet products = [this.state.product0, this.state.product1];\r\n\t\tlet newVal : string = e.currentTarget.value;\r\n\t\tif (e.target.classList.contains(\"rulesReactant0\")) {\r\n\t\t\treactants[0] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({reactants : reactants.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({reactant0 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesReactant1\")) {\r\n\t\t\treactants[1] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({reactants : reactants.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({reactant1 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesProduct0\")) {\r\n\t\t\tproducts[0] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({products : products.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({product0 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesProduct1\")) {\r\n\t\t\tproducts[1] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({products : products.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({product1 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesRate\")) {\r\n\t\t\tproducts[1] = newVal;\r\n\t\t\tthis.rule.update({rate : +newVal});\r\n\t\t\tthis.setState({rate : +newVal});\r\n\t\t}\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport SurfaceCRN, {Colour, Species_Matcher, Colour_Map} from 'surface_crn';\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport ArrowDropDownCircleTwoToneIcon from '@mui/icons-material/ArrowDropDownCircleTwoTone';\r\nimport ArrowDropDownCircleOutlinedIcon from '@mui/icons-material/ArrowDropDownCircleOutlined';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport TextField from '@mui/material/TextField';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\ninterface ColourMappingProps {\r\n\tmodel : SurfaceCRN\r\n\tcolour_map : Colour_Map\r\n\trefreshColour : () => void\r\n\taddColour : () => void\r\n\tdeleteColour : (c : Colour) => void\r\n}\r\n\r\nexport default class ColourMappingComponent extends React.Component<ColourMappingProps, {}> {\r\n\r\n\trender() {\r\n\t\treturn <Grid item xs={12} sm={4}>\r\n\t\t\t<Card sx={{height : \"100%\"}}>\r\n\t\t\t\t<CardHeader title=\"Colour Mapping\" />\r\n\t\t\t\t<Grid container item sx={{\"overflowY\" : \"auto\", \"maxHeight\" : \"28rem\", height : \"100%\"}}>\r\n\t\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t\t{[...this.props.colour_map.colours.values()].map((v, i) =>\r\n\t\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t\t<ColourRowComponent colour={v} onChange={this.props.refreshColour} deleteColour={this.props.deleteColour}/>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button variant=\"outlined\" onClick={this.props.addColour.bind(this)}> Add Colour </Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>;\r\n\t}\r\n}\r\n\r\ninterface ColourRowState {\r\n\tcolour : string\r\n\tisOpen : boolean\r\n\tspecies : Set<Species_Matcher>\r\n\tname : string\r\n\tshowList : boolean\r\n}\r\n\r\ninterface ColourRowProps {\r\n\tcolour : Colour\r\n\tonChange : () => void\r\n\tdeleteColour : (c : Colour) => void\r\n}\r\n\r\nclass ColourRowComponent extends React.Component<ColourRowProps,ColourRowState> {\r\n\tpickerRef : HTMLDivElement | null = null;\r\n\tmouseDownInElement : boolean = false;\r\n\r\n\tconstructor(p : ColourRowProps) {\r\n\t\tsuper(p);\r\n\t\tthis.state = {colour : p.colour.hex(), isOpen : false, species : p.colour.species, name: p.colour.name, showList : false};\r\n\r\n\t\tthis.handleClickOutside = this.handleClickOutside.bind(this);\r\n\t}\r\n\r\n\thandleClickOutside(event : MouseEvent) {\r\n\t\t// TODO:  fix click on swatch to close picker\r\n\t\tif (!this.mouseDownInElement && this.pickerRef && !this.pickerRef.contains(event.target as Node)) {\r\n\t\t\tthis.setState({isOpen : false});\r\n\t\t}\r\n\t}\r\n\r\n\thandleDownClick(event : MouseEvent) {\r\n\t\tthis.mouseDownInElement = (!this.pickerRef || this.pickerRef.contains(event.target as Node));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('mousedown', this.handleDownClick.bind(this));\r\n\t\tdocument.addEventListener('mouseup', this.handleClickOutside.bind(this));\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('mousedown', this.handleDownClick);\r\n\t\tdocument.removeEventListener('mouseup', this.handleClickOutside);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// TODO: disallow invalid chars in name\r\n\t\t// TODO: make swatch more integrated (background colour of text? left tab thing)\r\n\t\treturn <Grid item xs={12}>\r\n\t\t\t<div className=\"picker\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"swatch\"\r\n\t\t\t\t\tstyle={{ backgroundColor: this.props.colour.hex() }}\r\n\t\t\t\t\tonClick={() => !this.state.isOpen && this.setState({isOpen : !this.state.isOpen})}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField variant=\"filled\" fullWidth margin=\"none\" label=\"Name\" value={this.state.name} onChange={(e) => {let s = e.currentTarget.value; this.setState({name : s}); this.props.colour.name = s}} />\r\n\t\t\t\t<IconButton onClick={_ => this.setState({showList : !this.state.showList})}>\r\n\t\t\t\t\t{this.state.showList ? <ArrowDropDownCircleTwoToneIcon /> : <ArrowDropDownCircleOutlinedIcon />}\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton onClick={_ => this.props.deleteColour(this.props.colour)}>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t{this.state.isOpen && (\r\n\t\t\t\t<div className=\"popover\" ref={(elem) => this.pickerRef = elem} >\r\n\t\t\t\t\t<HexColorPicker color={this.props.colour.hex()} onChange={(s) => {this.setState({colour : s}); this.updateColour(s)}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<TransitionGroup>\r\n\t\t\t\t{this.state.showList &&\r\n\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t\t\t{[...this.state.species.values()].map((a : Species_Matcher) =>\r\n\t\t\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t\t\t<TextField value={a.original_string} onChange={this.updateSpecies(a).bind(this)} inputProps={{style: {\"padding\" : \"5px\"}}}/>\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={() => this.deleteMatcher(a)}> <DeleteIcon /> </IconButton>\r\n\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick = {this.addMatcher.bind(this)}> Add Species </Button>\r\n\t\t\t\t\t</Collapse>\r\n\t\t\t\t}\r\n\t\t\t</TransitionGroup>\r\n\t\t</Grid>;\r\n\t}\r\n\r\n\tupdateColour(s : string) {\r\n\t\tthis.props.colour.update_colour(Colour.hex2rgb(s));\r\n\t\tthis.props.onChange();\r\n\t}\r\n\r\n\tupdateSpecies(a : Species_Matcher) {\r\n\t\treturn (e : React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\ta.update_matched(e.target.value);\r\n\t\t\tthis.setState({species : this.props.colour.species});\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\taddMatcher() {\r\n\t\tthis.props.colour.add_matcher(\"\");\r\n\t\tthis.setState({species : this.props.colour.species});\r\n\t}\r\n\tdeleteMatcher(m : Species_Matcher) {\r\n\t\tthis.props.colour.delete_matcher(m);\r\n\t\tthis.setState({species : this.props.colour.species});\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from '@mui/material/Button';\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select, {SelectChangeEvent} from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n\r\ninterface ImportProps {\r\n\timport_code : () => Promise<void>\r\n\texport_code : () => void\r\n\timport_example : (s : string) => void\r\n}\r\n\r\ninterface ImportState {\r\n\texample_selected : string\r\n}\r\n\r\nexport class ImportExportComponent extends React.Component<ImportProps, ImportState> {\r\n\r\n\tpublic constructor(props: ImportProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {example_selected : \"\"}\r\n\t}\r\n\r\n\r\n\trender () {\r\n\t\tconst example_files = [\r\n\t\t\t{ value: './examples/two-bit-adder.txt', label: 'Two Bit Adder' },\r\n\t\t\t{ value: './examples/two-bit-adder_new.txt', label: 'Two Bit Adder New' },\r\n\t\t\t{ value: './examples/alternate_line_builder.txt', label: 'Line Builder' },\r\n\t\t\t{ value: './examples/Brusselator.txt', label: 'Brusselator' },\r\n\t\t\t{ value: './examples/busy_beaver.txt', label: 'Busy Beaver' },\r\n\t\t\t{ value: './examples/ertl.txt', label: 'Ertl Oscillator' },\r\n\t\t\t{ value: './examples/game_of_life_5x5_circuit.txt', label: 'GoL Five by Five' },\r\n\t\t\t{ value: './examples/game_of_life_one_to_one.txt', label: 'GoL One to One' },\r\n\t\t\t{ value: './examples/GH_big_spiral.txt', label: 'Greenberg-Hastings Big spiral' },\r\n\t\t\t{ value: './examples/majority_asynchronous.txt', label: 'Majority Asynchronous' },\r\n\t\t\t{ value: './examples/molecular_walker.txt', label: 'Molecular Walker' },\r\n\t\t\t{ value: './examples/parens_matcher.txt', label: 'Parens Matcher' },\r\n\t\t\t{ value: './examples/sierpinski_1D_synch.txt', label: '1D Sierpinski' },\r\n\t\t\t{ value: './examples/smarter_scout_ant.txt', label: 'Smarter Scout Ant' }\r\n\t\t]\r\n\r\n\t\treturn <Grid item xs={12} sm={4}>\r\n\t\t\t\t<Card sx={{height : \"100%\"}}>\r\n\t\t\t\t\t<CardHeader title=\"Import/Export\" />\r\n\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t<InputLabel id=\"example-label\">Example</InputLabel>\r\n\t\t\t\t\t\t\t\t<Select label=\"example-label\" value={this.state.example_selected} onChange={ (e : SelectChangeEvent<string>) => this.setState({example_selected : e.target.value})} autoWidth>\r\n\t\t\t\t\t\t\t\t\t{example_files.map(a => <MenuItem value={a.value}> {a.label} </MenuItem>)}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" disabled={this.state.example_selected === \"\"} type=\"submit\" id=\"import_example\" onClick={() => this.props.import_example(this.state.example_selected)}> Import </Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button variant=\"contained\" component=\"label\">\r\n\t\t\t\t\t\t\tImport File(s)\r\n\t\t\t\t\t\t\t<input type=\"file\" id=\"import_input\" multiple hidden onChange={this.props.import_code}/>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" id=\"export\" onClick={this.props.export_code}> Export File </Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>;\r\n\t}\r\n}\r\n\r\nexport default ImportExportComponent;\r\n","import React from 'react';\r\nimport Surface_CRN, {Transition_Rule, Colour, Colour_Map} from 'surface_crn';\r\nimport './index.css';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport GridDisplayComponent from './components/GridDisplayComponent';\r\nimport TransitionRulesComponent from './components/TransitionRulesComponent';\r\nimport ColourMappingComponent from './components/ColourMappingComponent';\r\nimport ImportExportComponent from './components/ImportExportComponent';\r\nimport Point from './components/PointClass';\r\n\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Card from \"@mui/material/Card\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport HexagonIcon from '@mui/icons-material/Hexagon';\r\nimport SquareIcon from '@mui/icons-material/Square';\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nconst theme = createTheme({\r\n\tpalette: {\r\n\t\tmode: 'dark',\r\n\t\tprimary: {\r\n\t\t\tmain: '#2e7d32',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#f50057',\r\n\t\t},\r\n\t},\r\n});\r\n\r\n\r\ninterface SurfaceCRNappState {\r\n\tshown_tab : number\r\n\r\n\tmodel : Surface_CRN\r\n\tsim_size : number\r\n\tgeometry : \"hex\" | \"square\"\r\n\tcolour_map : Colour_Map\r\n\trules : Transition_Rule[]\r\n\r\n\tplaying_simulation : boolean\r\n\r\n\teditValue : string\r\n\tselectedCells : Point[]\r\n\trngSeed : string\r\n\tfps : number\r\n\tspeedup_factor : number\r\n}\r\n\r\nexport default class SurfaceCRNapp extends React.Component<{}, SurfaceCRNappState> {\r\n\r\n\tinitial_state_component : GridDisplayComponent | null = null;\r\n\ttransition_state_component : TransitionRulesComponent | null = null;\r\n\tsimulator_component : GridDisplayComponent | null = null;\r\n\theader_component : HeaderComponent | null = null;\r\n\r\n\tmodel_tabs : HTMLButtonElement | null = null;\r\n\ttoolbarInput : HTMLInputElement | null = null;\r\n\r\n\tconstructor(_ : {}) {\r\n\t\tsuper(_);\r\n\t\tlet model = new Surface_CRN({geometry : \"square\", initial_state : Array.from({length:20}, () => (Array.from({length:20}, () => 'I')))});\r\n\t\tthis.state = {\r\n\t\t\tshown_tab : 0,\r\n\r\n\t\t\tmodel : model,\r\n\t\t\tsim_size : model.pixels_per_node,\r\n\t\t\tgeometry : model.geometry,\r\n\t\t\tcolour_map : model.colour_map,\r\n\t\t\trules : model.rules,\r\n\r\n\t\t\tplaying_simulation : false,\r\n\r\n\t\t\teditValue : \"\",\r\n\t\t\tselectedCells : [],\r\n\t\t\trngSeed : (model.rng_seed || \"\").toString(),\r\n\t\t\tfps : model.fps,\r\n\t\t\tspeedup_factor : model.speedup_factor\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <ThemeProvider theme={theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid container spacing={1} sx={{\"margin\" : \"auto\", \"width\":\"98%\", \"height\": \"98%\"}}>\r\n\t\t\t\t\t<HeaderComponent playPressed={this.playPressed.bind(this)} stepBackPressed={this.stepBackwardPressed.bind(this)} stepForwardPressed={this.stepForwardPressed.bind(this)} fastBackwardPressed={this.fastBackwardPressed.bind(this)} fastForwardPressed={this.fastForwardPressed.bind(this)} stopPressed={this.stopPressed.bind(this)} simPlaying={this.state.playing_simulation} ref={elem => this.header_component = elem}/>\r\n\t\t\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t\t\t<Card sx={{\"height\" : \"35rem\"}}>\r\n\t\t\t\t\t\t\t<Grid container sx={{height : \"100%\"}}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sx={{height : \"20%\"}}>\r\n\t\t\t\t\t\t\t\t\t<Tabs value={this.state.shown_tab} onChange={this.onTabSelect.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"Initial State\"></Tab>\r\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"Simulator\"></Tab>\r\n\t\t\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t\t\t\t<Box style={{display:\"inline\"}}>\r\n\t\t\t\t\t\t\t\t\t{ this.state.shown_tab === 0 &&\r\n\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" sx={{\"fontSize\": 20, \"margin\" : \"5px\"}}> Editing Options </Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"\" size=\"small\" variant=\"filled\" value={this.state.editValue} onChange={this.updateSelectedCells.bind(this)} inputRef={e => this.toolbarInput = e}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"Type\" onClick={this.changeGeometry.bind(this)}>{this.state.model.geometry === \"hex\" ?  <HexagonIcon /> : <SquareIcon /> }</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"Random Seed\" value={this.state.rngSeed} onChange={this.setRNGseed.bind(this)} size=\"small\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t{ this.state.shown_tab === 1 &&\r\n\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" sx={{\"fontSize\": 20, \"margin\" : \"5px\"}}> Playback Options </Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"Speed\" size=\"small\" variant=\"filled\" value={this.state.speedup_factor} onChange={this.updateSpeedUp.bind(this)} InputProps={{type : \"number\"}} style={{width : \"10%\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"FPS\" size=\"small\" variant=\"filled\" value={this.state.fps} onChange={this.updateFPS.bind(this)} InputProps={{type : \"number\"}} style={{width : \"10%\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"Random Seed\" value={this.state.shown_tab === 1 ? this.state.model.random?.seed.toString() : this.state.rngSeed} onChange={this.setRNGseed.bind(this)} disabled={this.state.shown_tab === 1} InputProps={{endAdornment:this.state.shown_tab === 1 ? <InputAdornment position=\"end\"><Button onClick={this.copyRNGseed.bind(this)} >Set</Button></InputAdornment> : null}} size=\"small\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sx={{height : \"80%\"}}>\r\n\t\t\t\t\t\t\t\t\t{this.state.shown_tab === 0 &&\r\n\t\t\t\t\t\t\t\t\t\t<GridDisplayComponent current_state={this.state.model.initial_state} model={this.state.model} geometry={this.state.geometry} ref={elem => this.initial_state_component = elem} size={this.state.sim_size} zoom={this.zoom.bind(this)} selectedCells={this.selectedCells.bind(this)}/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{this.state.shown_tab === 1 &&\r\n\t\t\t\t\t\t\t\t\t\t<GridDisplayComponent current_state={this.state.model.sim_started() ? this.state.model.current_state : this.state.model.initial_state} model={this.state.model} geometry={this.state.geometry} ref={elem => this.simulator_component = elem} size={this.state.sim_size} zoom={this.zoom.bind(this)} selectedCells={this.selectedCells.bind(this)} simulation/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<ColourMappingComponent model={this.state.model} refreshColour={this.refreshColour.bind(this)} addColour={this.addColour.bind(this)} deleteColour={this.deleteColour.bind(this)} colour_map={this.state.colour_map}/>\r\n\t\t\t\t\t<TransitionRulesComponent ref={elem => this.transition_state_component = elem} model={this.state.model} addRule={this.addRule.bind(this)} deleteRule={this.deleteRule.bind(this)} rules={this.state.rules}/>\r\n\t\t\t\t\t<ImportExportComponent export_code={this.export_code.bind(this)} import_code={this.import_code.bind(this)} import_example={this.import_example.bind(this)}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</ThemeProvider>\r\n\t}\r\n\r\n\tasync import_code() {\r\n\t\tconst files = (document.getElementById(\"import_input\") as HTMLInputElement).files;\r\n\t\tif (files === null) return;\r\n\r\n\t\tlet new_model : Surface_CRN|false = await Surface_CRN.parser.parse_import_files([...files]);\r\n\r\n\t\tif (new_model === false) {\r\n\t\t\t//show errors\r\n\t\t} else {\r\n\t\t\tthis.update_page(new_model);\r\n\t\t}\r\n\t}\r\n\r\n\texport_code() {\r\n\t\tlet r = this.state.model.export(),\r\n\t\t\tblob = new Blob([r], { type: 'text/plain' }),\r\n\t\t\tanchor = document.createElement('a');\r\n\t\tanchor.download = \"surface_crn_export.txt\";\r\n\t\tanchor.href = (window.webkitURL || window.URL).createObjectURL(blob);\r\n\t\tanchor.dataset.downloadurl = ['text/plain', anchor.download, anchor.href].join(':');\r\n\t\tanchor.click();\r\n\t}\r\n\r\n\timport_example(file : string) {\r\n\t\tif (file === \"\") return;\r\n\r\n\t\tlet r = this;\r\n\t\tfetch(file,\r\n\t\t\t{headers : {\r\n\t\t\t\t'Content-Type': 'application/text',\r\n\t\t\t\t'Accept': 'application/text'\r\n\t\t\t}}\r\n\t\t).then(function(response : Response){\r\n\t\t\treturn response.text();\r\n\t\t}).then(function(s : string) {\r\n\t\t\tlet new_model = Surface_CRN.parser.parse_code(s.split(\"\\n\"));\r\n\r\n\t\t\tr.update_page(new_model);\r\n\t\t});\r\n\t}\r\n\r\n\tsetPlaying(sim_playing : boolean) {\r\n\t\tthis.setState({playing_simulation : sim_playing});\r\n\t}\r\n\r\n\tupdate_page(new_model : Surface_CRN) {\r\n\t\tthis.setState({shown_tab : 0, playing_simulation : false, model : new_model, geometry : new_model.geometry, sim_size : new_model.pixels_per_node, colour_map : new_model.colour_map, rules : [...new_model.rules], editValue : \"\", selectedCells : [], rngSeed : (new_model.rng_seed || \"\").toString(), fps : new_model.fps, speedup_factor : new_model.speedup_factor});\r\n\t}\r\n\r\n\tchangeGeometry() {\r\n\t\tif (this.state.model.geometry === \"hex\") {\r\n\t\t\tthis.state.model.geometry = \"square\";\r\n\t\t} else if (this.state.model.geometry === \"square\") {\r\n\t\t\tthis.state.model.geometry = \"hex\";\r\n\t\t}\r\n\t\tthis.setState({geometry : this.state.model.geometry});\r\n\t\tthis.refreshSimState();\r\n\t\tthis.refreshInitState();\r\n\t}\r\n\r\n\trefreshInitState() {\r\n\t\tif (this.initial_state_component !== null) {\r\n\t\t\t//this.state.model.colour_map.clear_temp();\r\n\t\t\tthis.initial_state_component!.setState({\r\n\t\t\t\tcolour_map: this.state.model.colour_map,\r\n\t\t\t\tgeometry: this.state.model.geometry,\r\n\t\t\t\tsize: this.state.model.pixels_per_node,\r\n\t\t\t\tdata : this.initial_state_component.createData(this.state.model.initial_state)\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSimState() {\r\n\t\tconst sim = this.simulator_component;\r\n\t\tconst model = this.state.model;\r\n\t\tif (sim !== null) {\r\n\t\t\tsim.setState({colour_map: model.colour_map, size: model.pixels_per_node, data : sim.createData(model.sim_started() ? model.current_state : model.initial_state), sim_time : model.sim_time});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshColour() {\r\n\t\tthis.refreshInitState();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tstartSimulation() {\r\n\t\tthis.state.model.start_sim();\r\n\t\tthis.refreshSimState();\r\n\t\tthis.setState({rngSeed : this.state.model.random!.seed.toString()});\r\n\t}\r\n\r\n\tshowSimulation() {\r\n\t\tif (this.state.shown_tab !== 1) this.setState({shown_tab : 1})\r\n\t\tif (!this.state.model.sim_started()) {\r\n\t\t\tthis.startSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\tonTabSelect(e : React.SyntheticEvent, value : number) {\r\n\t\tthis.setState({shown_tab : value});\r\n\t\tif (value === 1) {\r\n\t\t\tthis.startSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\tplayPressed(e : MouseEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tif (this.state.playing_simulation) {\r\n\t\t\tthis.setPlaying(false);\r\n\t\t} else {\r\n\t\t\tthis.setPlaying(true);\r\n\t\t\tthis.playSimulation(true);\r\n\t\t}\r\n\t}\r\n\r\n\tplaySimulation(started? : boolean) {\r\n\t\tif (!started && !this.state.playing_simulation) return;\r\n\t\tlet b = this.state.model.next_frame();\r\n\t\tthis.refreshSimState();\r\n\t\tif (!b) {\r\n\t\t\tthis.setPlaying(false);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(this.playSimulation.bind(this), 1/this.state.model.fps)\r\n\t\t}\r\n\t}\r\n\r\n\tstepForwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.step_forward()\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tstepBackwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.step_backward();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tfastForwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.next_frame();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tfastBackwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.prev_frame();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tstopPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.setPlaying(false);\r\n\t\tthis.state.model.stop_sim();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\taddColour() {\r\n\t\tlet c : Colour = this.state.model.colour_map.new_colour();\r\n\t\tthis.state.model.colour_map.add(Object.assign(c, {\"name\" : \"New\"}));\r\n\r\n\t\tthis.setState({colour_map : this.state.model.colour_map});\r\n\t}\r\n\r\n\tdeleteColour(c : Colour) {\r\n\t\tthis.state.model.colour_map.delete(c);\r\n\t\tthis.setState({colour_map : this.state.model.colour_map});\r\n\t}\r\n\r\n\tdeleteRule(r : Transition_Rule) {\r\n\t\tthis.state.model.remove_rule(r);\r\n\t\tthis.setState({rules : [...this.state.model.rules]});\r\n\t}\r\n\r\n\taddRule() {\r\n\t\tthis.state.model.add_rule();\r\n\t\tthis.setState({rules : [...this.state.model.rules]});\r\n\t}\r\n\r\n\tzoom(out : boolean) {\r\n\t\tconst oldZoom = this.state.model.pixels_per_node;\r\n\t\tif (out) this.state.model.increase_size();\r\n\t\telse this.state.model.decrease_size();\r\n\t\tthis.setState({sim_size : this.state.model.pixels_per_node});\r\n\t\treturn oldZoom/this.state.model.pixels_per_node;\r\n\t}\r\n\r\n\tselectedCells(selected : Point[], value : string) {\r\n\t\tthis.setState({selectedCells : selected, editValue : value});\r\n\t\tthis.toolbarInput && this.toolbarInput.focus();\r\n\t}\r\n\r\n\tupdateSelectedCells(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tif (e.target.value.match(/^\\w*$/)) {\r\n\t\t\tthis.setState({editValue : e.target.value});\r\n\t\t\tthis.state.model.set_cells(this.state.selectedCells.map(p => [p.x, p.y]), e.target.value);\r\n\t\t\tthis.refreshInitState();\r\n\t\t}\r\n\t}\r\n\r\n\tsetRNGseed(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet n = e.target.value;\r\n\t\tif (n === '') {\r\n\t\t\tthis.setState({rngSeed : n});\r\n\t\t\tthis.state.model.rng_seed = null;\r\n\t\t} else {\r\n\t\t\tlet x = parseInt(n);\r\n\t\t\tthis.setState({rngSeed : n});\r\n\t\t\tthis.state.model.rng_seed = x;\r\n\t\t}\r\n\t}\r\n\r\n\tcopyRNGseed() {\r\n\t\tthis.state.model.rng_seed = this.state.model.random!.seed;\r\n\t\tthis.setState({rngSeed : this.state.model.rng_seed.toString()});\r\n\t}\r\n\r\n\tupdateFPS(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet n = e.target.value;\r\n\t\tlet x = parseFloat(n);\r\n\t\tthis.setState({fps : x});\r\n\t\tthis.state.model.fps = x;\r\n\t}\r\n\r\n\tupdateSpeedUp(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet n = e.target.value;\r\n\t\tlet x = parseFloat(n);\r\n\t\tthis.setState({speedup_factor : x});\r\n\t\tthis.state.model.speedup_factor = x;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SurfaceCRNapp from './SurfaceCRNapp';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<title> Surface CRN Simulator </title>\r\n\t\t<SurfaceCRNapp />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Colour = exports.Colour_Map = exports.Transition_Rule = exports.Species_Matcher = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nexports.Species_Matcher = Species_Matcher_1.default;\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nexports.Transition_Rule = Transition_Rule_1.default;\nconst Colour_Map_1 = __importDefault(require(\"./Colour_Map\"));\nexports.Colour_Map = Colour_Map_1.default;\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nexports.Colour = Colour_1.default;\nconst Transition_State_1 = __importDefault(require(\"./Transition_State\"));\nconst Parser_1 = require(\"./Parser\");\nconst ts_priority_queue_1 = __importDefault(require(\"ts-priority-queue\"));\nconst random_seedable_1 = require(\"random-seedable\");\nclass Surface_CRN {\n    constructor(p = {}) {\n        this.initial_state = [];\n        this.rules = [];\n        this.colour_map = new Colour_Map_1.default();\n        this.options = new Map();\n        this.geometry = 'square';\n        this.rng_seed = null;\n        this.pixels_per_node = 20;\n        this.speedup_factor = 1;\n        this.fps = 30;\n        this.random = null;\n        this.current_state = [];\n        this.last_updated = [];\n        this.sim_time = 0;\n        this.sim_queue = null;\n        this.sim_history = [];\n        this.rule_check_cache = {};\n        Object.assign(this, p);\n    }\n    remove_rule(r) {\n        this.rules.splice(this.rules.indexOf(r), 1);\n    }\n    add_rule() {\n        this.rules.push(Transition_Rule_1.default.blankRule());\n    }\n    set_cells(coords, val) {\n        if (coords.length === 0)\n            return;\n        let xS = coords.map(x => x[0]).sort();\n        let minX = xS[0];\n        let maxX = xS[xS.length - 1];\n        if (minX < 0) {\n            for (let i of this.initial_state) {\n                i.unshift(...Array(-minX).fill(''));\n            }\n            maxX -= minX;\n        }\n        let width = this.initial_state[0].length;\n        if (maxX >= width) {\n            for (let i of this.initial_state) {\n                i.push(...Array(maxX - width + 1).fill(''));\n            }\n        }\n        let yS = coords.map(x => x[1]).sort();\n        let minY = yS[0];\n        let maxY = yS[yS.length - 1];\n        if (minY < 0) {\n            this.initial_state.unshift(...Array(-minY).map(_ => Array(this.initial_state[0].length).fill('')));\n            maxY -= minY;\n        }\n        if (maxY >= this.initial_state.length) {\n            this.initial_state.push(...Array(maxY - this.initial_state.length + 1).fill('').map(_ => Array(this.initial_state[0].length).fill('')));\n        }\n        for (let [x, y] of coords) {\n            this.initial_state[y][x] = val;\n        }\n    }\n    set_option(key, value) {\n        switch (key) {\n            case \"geometry\":\n                if (value === \"square\" || value === \"hex\") {\n                    this.geometry = value;\n                }\n                else {\n                    throw \"Invalid option: Geometry\";\n                }\n                break;\n            case \"rng_seed\":\n                var i = parseInt(value);\n                this.rng_seed = i;\n                break;\n            case \"pixels_per_node\":\n                var i = parseFloat(value);\n                this.pixels_per_node = i;\n                break;\n            case \"speedup_factor\":\n                var i = parseFloat(value);\n                this.speedup_factor = i;\n                break;\n            case \"fps\":\n                var i = parseFloat(value);\n                this.fps = i;\n                break;\n        }\n        this.options.set(key, value);\n    }\n    export() {\n        let output = [];\n        // Options here\n        for (let [k, v] of this.options) {\n            output.push(k + \" = \" + v);\n        }\n        // Transition rules here\n        output.push(\"!START_TRANSITION_RULES\");\n        output.push(...this.rules.map(a => a.toString()));\n        output.push(\"!END_TRANSITION_RULES\\n\");\n        // Colour mapping\n        output.push([\"!START_COLORMAP\"]);\n        output.push(...this.colour_map.export());\n        output.push([\"!END_COLORMAP\\n\"]);\n        // Initial State\n        output.push([\"!START_INIT_STATE\"]);\n        output.push(...this.initial_state.map(a => a.join(' ')));\n        output.push([\"!END_INIT_STATE\\n\"]);\n        return output.join(\"\\n\");\n    }\n    stop_sim() {\n        this.current_state = [];\n        this.last_updated = [];\n        this.sim_time = 0;\n        this.sim_queue = null;\n        this.sim_history = [];\n        this.rule_check_cache = {};\n        this.colour_map.clear_temp();\n    }\n    start_sim() {\n        if (this.sim_started()) {\n            //this.stop_sim();\n            return;\n        }\n        if (this.rng_seed !== null) {\n            this.random = new random_seedable_1.MersenneTwister(this.rng_seed);\n        }\n        else {\n            this.random = new random_seedable_1.MersenneTwister();\n            this.random = new random_seedable_1.MersenneTwister(this.random.int());\n        }\n        this.sim_queue = new ts_priority_queue_1.default({ comparator: (a, b) => a.execution_time - b.execution_time });\n        let initial_changes = [];\n        this.initial_state.forEach((s, y) => {\n            this.last_updated.push(Array(s.length).fill(0));\n            this.current_state.push([]);\n            s.forEach((_, x) => {\n                this.current_state[this.current_state.length - 1].push(this.initial_state[y][x]);\n                let r = this.find_next_transitions(x, y);\n                for (let t of r) {\n                    initial_changes.push(t);\n                }\n            });\n        });\n        this.sim_queue = new ts_priority_queue_1.default({ comparator: (a, b) => a.execution_time - b.execution_time, initialValues: initial_changes });\n    }\n    get_next_transition() {\n        if (this.sim_started()) {\n            while (this.sim_queue.length != 0) {\n                let t = this.sim_queue.peek();\n                let b = t.new_cells.every(([x, y, _]) => {\n                    return this.last_updated[y][x] <= t.update_time;\n                });\n                if (b)\n                    break;\n                this.sim_queue.dequeue();\n            }\n            if (this.sim_queue.length == 0)\n                return false;\n            return this.sim_queue.peek();\n        }\n        return false;\n    }\n    run_upto(time) {\n        while (this.sim_time < time) {\n            let t = this.get_next_transition();\n            if (t === false)\n                return false;\n            if (t.execution_time > time)\n                break;\n            this.step_forward();\n        }\n        this.sim_time = time;\n        return true;\n    }\n    run_backto(time) {\n        while (this.sim_time > time) {\n            let t = this.step_backward();\n            if (t === false)\n                return false;\n        }\n        this.sim_time = time;\n        return true;\n    }\n    next_frame() {\n        return this.run_upto(this.sim_time + this.speedup_factor * 1 / this.fps);\n    }\n    prev_frame() {\n        return this.run_backto(this.sim_time - this.speedup_factor * 1 / this.fps);\n    }\n    step_forward() {\n        if (this.sim_started()) {\n            let t = this.get_next_transition();\n            if (t === false)\n                return false;\n            this.sim_queue.dequeue();\n            this.sim_time = t.execution_time;\n            t.new_cells.forEach(([x, y, s]) => {\n                this.current_state[y][x] = s;\n                this.last_updated[y][x] = this.sim_time;\n            });\n            if (t.new_transitions === null) {\n                t.new_transitions = [];\n                let ignore = new Set();\n                t.new_cells.forEach(([x, y, _]) => {\n                    let newT = this.find_next_transitions(x, y, ignore);\n                    for (var tr of newT) {\n                        this.sim_queue.queue(tr);\n                        t && t.new_transitions.push(tr);\n                    }\n                    ignore.add([x, y]);\n                });\n            }\n            else {\n                t.new_transitions.forEach((newT) => {\n                    this.sim_queue.queue(newT);\n                });\n            }\n            this.sim_history.push(t);\n            return this.sim_queue.length != 0;\n        }\n        else {\n            return false;\n        }\n    }\n    step_backward() {\n        if (this.sim_started()) {\n            let t = this.sim_history.pop();\n            if (t === undefined)\n                return false;\n            this.sim_time = t.execution_time;\n            t.old_cells.forEach(([x, y, s]) => {\n                this.current_state[y][x] = s;\n                this.last_updated[y][x] = 0;\n            });\n            this.sim_queue.queue(t);\n            return true;\n        }\n        return false;\n    }\n    find_next_transitions(x, y, ignore = new Set()) {\n        let current_cell = this.current_state[y][x];\n        let possible_transitions = [];\n        let rs = [];\n        let z = this.rule_check_cache[current_cell];\n        if (z === undefined) {\n            /*\n            for (let rule of this.rules) {\n                if (rule.is_mono && rule.matches(current_cell)) {\n                    rs.push(rule);\n                } else if (!rule.is_mono && rule.m) {\n\n                }\n            }\n            this.rule_check_cache[current_cell] = rs;\n            */\n            rs = this.rules;\n        }\n        else {\n            rs = z;\n        }\n        for (let rule of rs) {\n            if (rule.is_mono) {\n                let m = rule.matches(current_cell);\n                for (const r of m) {\n                    let t = this.sim_time + Math.log(1 / this.random.float()) / rule.rate;\n                    // if (best_mono_transition !== null && best_mono_transition.execution_time > t) continue;\n                    let tr = new Transition_State_1.default(this.sim_time, t);\n                    tr.add_old_cell(x, y, current_cell);\n                    tr.add_new_cell(x, y, r[0]);\n                    possible_transitions.push(tr);\n                }\n            }\n            else {\n                let neighbour_offsets = [];\n                if (this.geometry == 'square') {\n                    neighbour_offsets = [[-1, 0], [0, -1], [1, 0], [0, 1]];\n                }\n                else {\n                    neighbour_offsets = [[1, 0], [-1, 0], [0, 1], [y % 2 ? 1 : -1, 1], [0, -1], [y % 2 ? 1 : -1, -1]];\n                }\n                for (let [xd, yd] of neighbour_offsets) {\n                    if (y + yd >= 0 && y + yd < this.current_state.length && x + xd >= 0 && x + xd < this.current_state[y + yd].length) {\n                        if (ignore.has([x + xd, y + yd]))\n                            continue;\n                        let other_cell = this.current_state[y + yd][x + xd];\n                        let m = rule.matches(current_cell, other_cell);\n                        for (const r of m) {\n                            let t = this.sim_time + Math.log(1 / this.random.float()) / rule.rate;\n                            //if (best_transition && best_transition.execution_time > t) continue;\n                            let tr = new Transition_State_1.default(this.sim_time, t);\n                            tr.add_old_cell(x, y, current_cell);\n                            tr.add_old_cell(x + xd, y + yd, other_cell);\n                            tr.add_new_cell(x, y, r[0]);\n                            tr.add_new_cell(x + xd, y + yd, r[1]);\n                            possible_transitions.push(tr);\n                        }\n                        m = rule.matches(other_cell, current_cell);\n                        for (const r of m) {\n                            let t = this.sim_time + Math.log(1 / this.random.float()) / rule.rate;\n                            //if (best_transition && best_transition.execution_time > t) continue;\n                            let tr = new Transition_State_1.default(this.sim_time, t);\n                            tr.add_old_cell(x, y, current_cell);\n                            tr.add_old_cell(x + xd, y + yd, other_cell);\n                            tr.add_new_cell(x, y, r[1]);\n                            tr.add_new_cell(x + xd, y + yd, r[0]);\n                            possible_transitions.push(tr);\n                        }\n                    }\n                }\n            }\n        }\n        return possible_transitions;\n    }\n    sim_started() {\n        return this.sim_queue !== null;\n    }\n    increase_size() {\n        if (this.pixels_per_node < 1) {\n            this.pixels_per_node = 1 / (1 / this.pixels_per_node - 1);\n        }\n        else {\n            this.pixels_per_node += 1;\n        }\n    }\n    decrease_size() {\n        if (this.pixels_per_node <= 1) {\n            this.pixels_per_node = 1 / (1 / this.pixels_per_node + 1);\n        }\n        else {\n            this.pixels_per_node -= 1;\n        }\n    }\n}\nexports.default = Surface_CRN;\nSurface_CRN.parser = { parse_import_files: Parser_1.parse_import_files, parse_code: Parser_1.parse_code };\n"],"sourceRoot":""}