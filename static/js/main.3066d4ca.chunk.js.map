{"version":3,"sources":["components/HeaderComponent.tsx","components/PointClass.tsx","components/Grid_StateComponent.tsx","components/TransitionRulesComponent.tsx","components/ColourMappingComponent.tsx","components/ImportExportComponent.tsx","SurfaceCRNapp.tsx","index.tsx","../../surface_crn/Species_Matcher.js","../../surface_crn/Transition_Rule.js","../../surface_crn/Colour.js","../../surface_crn/Surface_CRN.js","../../surface_crn/Colour_Map.js","../../surface_crn/Transition_State.js","../../surface_crn/Parser.js"],"names":["HeaderComponent","p","className","onClick","this","props","stepBackPressed","playPressed","stepForwardPressed","React","Component","Point","x","y","s","origin","CRN_GridComponent","onCellDataChanged","event","update_state","rowIndex","colIndex","newData","current_state","colour_map","grid_type","state","columns","createCols","data","createData","offset","console","log","rowHeight","setState","colNum","length","push","fieldName","width","i","toString","row","j","getText","renderBackground","context","cellBounds","cell","metadata","colour","find_colour","new_colour","Colour","add_temp","fillStyle","rgb","join","fillRect","left","top","height","renderText","text","cellHasTextFunction","r","g","b","fillText","editor","serialise","deserialise","prev","trim","match","TransitionRulesComponent","rules_list","model","rules","id","map","rule","deleteRule","addRule","RuleRowComponent","reactant0","reactants","original_string","reactant1","is_mono","product0","products","product1","rate","value","type","onChange","updateRule","bind","min","step","e","newVal","currentTarget","target","Species_Matcher","update","ColourMappingComponent","colours","values","v","refreshColour","name","addColour","style","cursor","ColourRowComponent","pickerRef","mouseDownInElement","hex","isOpen","species","showList","handleClickOutside","contains","document","addEventListener","handleDownClick","removeEventListener","backgroundColor","size","_","ref","elem","color","updateColour","a","updateSpecies","deleteMatcher","addMatcher","update_colour","hex2rgb","update_matcher","add_matcher","m","delete_matcher","ImportExportComponent","example_selected","options","label","isSearchable","isClearable","newValue","actionMeta","styles","option","provided","disabled","import_example","multiple","import_code","export_code","SurfaceCRNapp","initial_state_component","transition_state_component","colour_map_component","simulator_component","simulation_running","model_tabs","playing_simulation","step_time","Surface_CRN","initial_state","Array","from","forceRenderTabPanel","updateInitState","updateSimState","deleteColour","files","getElementById","parser","parse_import_files","new_model","update_page","export","blob","Blob","anchor","createElement","download","href","window","webkitURL","URL","createObjectURL","dataset","downloadurl","click","file","fetch","headers","then","response","parse_code","split","selectedIndex","update_init_state","init_state","updateColsAndData","refreshInitState","refreshSimState","start_sim","sim_started","startSimulation","index","lastIndex","showSimulation","playSimulation","started","run_upto","sim_time","setTimeout","step_forward","step_backward","c","add","Object","assign","delete","remove_rule","add_rule","ReactDOM","render","StrictMode","defineProperty","exports","init","matcher","RegExp","exec","Error","replace","default","__importDefault","mod","__esModule","Species_Matcher_1","require","Transition_Rule","undefined","includes","red","green","blue","Set","slice","parseInt","Colour_Map","Transition_Rule_1","Colour_Map_1","Colour_1","Transition_State_1","Parser_1","ts_priority_queue_1","random_1","Map","random_seed","last_updated","sim_queue","sim_history","splice","indexOf","blankRule","output","clone","initial_changes","ignore","forEach","fill","find_next_transition","comparator","execution_time","initialValues","t","peek","new_cells","every","update_time","dequeue","time","get_next_transition","new_transitions","newT","queue","pop","old_cells","current_cell","best_transition","matches","Math","float","add_old_cell","add_new_cell","neighbour_offsets","xd","yd","some","xi","yi","other_cell","example_colours","temp_colours","s1","get","find","set","clear","Transition_State","old_val","new_val","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","next","rejected","result","done","apply","Surface_CRN_1","parse_line","line","program","start","end","parse_rule","name_colour","vars","sp","parse_colour","parse_option","val","key","parse_init_state","init_state_section","input_files","Manifest_File","imported","manifest_maps","f","lines"],"mappings":"mRASqBA,E,kDAEpB,WAAYC,GAAkB,uCACvBA,G,0CAGP,WACC,OAAO,wBAAQC,UAAU,OAAlB,SACN,sBAAKA,UAAU,OAAf,UACC,oBAAIA,UAAU,aAAd,mCAGA,oBAAIA,UAAU,yBAAd,2BAGA,qBAAIA,UAAU,qBAAd,UACC,cAAC,IAAD,CAAgBC,QAASC,KAAKC,MAAMC,kBACpC,cAAC,IAAD,CAAQH,QAASC,KAAKC,MAAME,cAC5B,cAAC,IAAD,CAAeJ,QAASC,KAAKC,MAAMG,iC,GAlBKC,IAAMC,W,QCR7CC,E,WAML,WAAYC,EAAWC,GAAa,yBALpCD,OAKmC,OAJnCC,OAImC,EAClCT,KAAKQ,EAAIA,EACTR,KAAKS,EAAIA,E,uCAGV,SAAIZ,GAAa,OAAO,IAAIU,EAAMP,KAAKQ,EAAIX,EAAEW,EAAGR,KAAKS,EAAIZ,EAAEY,K,sBAC3D,SAASZ,GAAa,OAAO,IAAIU,EAAMP,KAAKQ,EAAIX,EAAEW,EAAGR,KAAKS,EAAIZ,EAAEY,K,mBAChE,SAAMC,GAAc,OAAO,IAAIH,EAAMP,KAAKQ,EAAIE,EAAGV,KAAKS,EAAIC,O,KAbrDH,EAIEI,OAAiB,IAAIJ,EAAM,EAAE,GAYtBA,Q,QCsHAK,E,kDAhHd,WAAYX,GAAwB,IAAD,uBAClC,cAAMA,IA0GCY,kBAAoB,SAACC,GAC5B,EAAKb,MAAMc,aAAaD,EAAME,SAAS,EAAGF,EAAMG,SAAS,EAAGH,EAAMI,UA1GlE,IAAKC,EAAwClB,EAAxCkB,cAAeC,EAAyBnB,EAAzBmB,WAAYC,EAAapB,EAAboB,UAFE,OAGlC,EAAKC,MAAQ,CACZC,QAAU,EAAKC,WAAWL,GAC1BM,KAAO,EAAKC,WAAWP,GACvBC,WAAaA,EACbC,UAAYA,EACZM,OAASpB,EAAMI,QARkB,E,0CAYnC,WAKC,OAJAiB,QAAQC,IAAI,WAIL,cAAC,kBAAD,CACJN,QAASvB,KAAKsB,MAAMC,QACpBE,KAAMzB,KAAKsB,MAAMG,KACjBK,UAAW,GACXjB,kBAAmBb,KAAKa,sB,+BAI5B,SAAyBM,GACxBnB,KAAK+B,SAAS,CAACR,QAASvB,KAAKwB,WAAWL,GAAgBM,KAAMzB,KAAK0B,WAAWP,O,wBAG/E,SAAmBA,GAClB,IAAII,EAAU,GACVS,EAAS,EACgB,IAAzBb,EAAcc,SACjBD,EAASb,EAAc,GAAGc,QAE3BV,EAAQW,KAAK,CAACC,UAAY,aAAcC,MAAO,KAC/C,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,IAAKd,EAAQW,KAAK,CAACC,UAAYE,EAAEC,WAAYF,MAAO,KAGhF,OAFAb,EAAQW,KAAK,CAACC,UAAY,cAAeC,MAAO,KAEzCb,I,wBAGR,SAAmBJ,GAElB,IAF+C,IAAD,OAC1CM,EAAuC,GAClCY,GAAK,EAAGA,GAAKlB,EAAcc,OAAQI,IAAK,CAChD,IAAIE,EAA+B,GACnC,IAAW,IAAPF,GAAYA,IAAMlB,EAAcc,OACnC,IAAK,IAAIO,EAAI,EAAGA,EAAIrB,EAAc,GAAGc,OAAQO,IAC5CD,EAAIC,EAAEF,YAAc,CACnBb,KAAMN,EAAckB,GAAGG,GACvBC,QAAS,SAACjC,GAAD,OAAqBA,GAAQ,IACtCkC,iBAAkB,SAACC,EAAoCC,EAAyBC,EAA+BC,GAC9G,GAAkB,OAAdD,EAAKpB,KAAe,CACvB,IAAIsB,EAAS,EAAKzB,MAAMF,WAAW4B,YAAYH,EAAKpB,MACpD,GAAc,MAAVsB,EAAgB,CACnB,IAAIrC,EAAa,EAAKY,MAAMF,WAAW6B,aACvCF,EAAS,IAAIG,SAAOxC,GACpB,EAAKY,MAAMF,WAAW+B,SAASN,EAAKpB,KAAOsB,GAC3CnB,QAAQC,IAAIgB,EAAKpB,KAAMsB,GAExBJ,EAAQS,UAAY,OAASL,EAAOM,MAAMC,KAAK,KAAO,IACtDX,EAAQY,SAASX,EAAWY,KAAMZ,EAAWa,IAAKb,EAAWR,MAAOQ,EAAWc,UAGjFC,WAAa,SAAChB,EAAmCC,EAAwBC,GACxE,IAAMe,EAAOC,8BAAoBhB,GAAQA,EAAKJ,QAAQI,EAAKpB,MAAQoB,EAAKe,KAExE,GAAIA,EAAM,CACT,IAAIb,EAAyB,EAAKzB,MAAMF,WAAW4B,YAAYH,EAAKpB,MACpE,GAAc,MAAVsB,EAAgB,CACnB,IAAIrC,EAAa,EAAKY,MAAMF,WAAW6B,aACvCF,EAAS,IAAIG,SAAOxC,GACpB,EAAKY,MAAMF,WAAW+B,SAASN,EAAKpB,KAAOsB,GAC3CnB,QAAQC,IAAIgB,EAAKpB,KAAMsB,GAExB,MAAcA,EAAOM,MAArB,mBAAKS,EAAL,KAAOC,EAAP,KAASC,EAAT,KACArB,EAAQS,UAAiB,KAAJU,EAAgB,KAAJC,EAAgB,KAAJC,EAAa,IAAM,QAAU,QAC1ErB,EAAQsB,SAASL,EAAKhB,EAAWY,KAAO,EAAEZ,EAAWa,IAAM,GAAIb,EAAWR,MAAQ,KAGpF8B,OAAQ,CACPC,UAAW,SAAC3D,GAAD,OAAqBA,GAAQ,IACxC4D,YAAa,SAACR,EAAcS,GAE3B,OADAT,EAAOA,EAAKU,QACHC,MAAM,SACPX,EAEAS,UAOZ,GAA4B,GAAxBlD,EAAcc,OACjB,IAAK,IAAIO,EAAI,EAAGA,EAAIrB,EAAc,GAAGc,OAAQO,IAC5CD,EAAIC,EAAEF,YAAc,CAACb,KAAM,KAAMmC,KAAO,GAAIlB,iBAAmB,kBAAM,IAIxEH,EAAG,WAAiB,CAACd,KAAM,KAAMmC,KAAO,GAAIlB,iBAAmB,kBAAM,IACrEH,EAAG,YAAkB,CAACd,KAAM,KAAMmC,KAAO,GAAIlB,iBAAmB,kBAAM,IACtEjB,EAAKS,KAAKK,GAEX,OAAOd,M,GA1GuBpB,IAAMC,WCVjBkE,E,kDAEpB,WAAYvE,GAA+B,IAAD,8BACzC,cAAMA,IACDqB,MAAQ,CAACmD,WAAaxE,EAAMyE,MAAMC,OAFE,E,0CAK1C,WAAU,IAAD,OAGR,OAAO,sBAAK7E,UAAU,yBAAf,UACN,oBAAIA,UAAU,eAAd,gCAEA,sBAAK8E,GAAG,iBAAR,UACE5E,KAAKsB,MAAMmD,WAAWI,KAAI,SAACf,EAAqBzB,GAAtB,OAAqC,cAAC,EAAD,CAAoDyC,KAAMhB,EAAGiB,WAAY,kBAAM,EAAK9E,MAAM8E,WAAWjB,KAA9EA,EAAExB,WAAaD,EAAEC,eACxG,qBAAKvC,QAASC,KAAKC,MAAM+E,QAAzB,kC,GAfkD3E,IAAMC,WA6BtD2E,E,kDAIL,WAAYhF,GAAkF,IAAD,8BAC5F,cAAMA,IAJP6E,UAG6F,IAF7FC,gBAE6F,EAE5F,EAAKD,KAAO7E,EAAM6E,KAClB,EAAKxD,MAAQ,CACZ4D,UAAYjF,EAAM6E,KAAKK,UAAU,GAAGC,gBACpCC,UAAapF,EAAM6E,KAAKQ,QAAoD,GAA1CrF,EAAM6E,KAAKK,UAAU,GAAGC,gBAC1DG,SAAWtF,EAAM6E,KAAKU,SAAS,GAAGJ,gBAClCK,SAAYxF,EAAM6E,KAAKQ,QAAmD,GAAzCrF,EAAM6E,KAAKU,SAAS,GAAGJ,gBACxDM,KAAOzF,EAAM6E,KAAKY,MAEnB,EAAKX,WAAa9E,EAAM8E,WAVoE,E,0CAa7F,WAGC,OAAO,sBAAKjF,UAAU,gBAAf,UACN,oCAAM,uBAAO6F,MAAO3F,KAAKsB,MAAMoE,KAAME,KAAK,SAAS9F,UAAU,YAAY+F,SAAU7F,KAAK8F,WAAWC,KAAK/F,MAAOgG,IAAI,IAAIC,KAAK,QAA5H,OACA,oCAAM,uBAAON,MAAO3F,KAAKsB,MAAM4D,UAAWpF,UAAU,iBAAiB+F,SAAU7F,KAAK8F,WAAWC,KAAK/F,QAApG,OACA,oCAAM,cAAC,IAAD,IAAN,OACA,oCAAM,uBAAO2F,MAAO3F,KAAKsB,MAAM+D,UAAWvF,UAAU,iBAAiB+F,SAAU7F,KAAK8F,WAAWC,KAAK/F,QAApG,OACA,oCAAM,cAAC,IAAD,IAAN,OACA,oCAAM,uBAAO2F,MAAO3F,KAAKsB,MAAMiE,SAAUzF,UAAU,gBAAgB+F,SAAU7F,KAAK8F,WAAWC,KAAK/F,QAAlG,OACA,oCAAM,cAAC,IAAD,IAAN,OACA,oCAAM,uBAAO2F,MAAO3F,KAAKsB,MAAMmE,SAAU3F,UAAU,gBAAgB+F,SAAU7F,KAAK8F,WAAWC,KAAK/F,QAAlG,OACA,cAAC,IAAD,CAASD,QAASC,KAAK+E,kB,wBAIzB,SAAWmB,GACV,IAAIf,EAAYnF,KAAK8E,KAAKK,UACtBK,EAAWxF,KAAK8E,KAAKU,SACrBW,EAAkBD,EAAEE,cAAcT,MACtC,OAAQO,EAAEG,OAAOvG,WAChB,IAAK,iBACJqF,EAAU,GAAK,IAAImB,kBAAgBH,GACnCnG,KAAK8E,KAAKyB,OAAO,CAACpB,UAAYA,IAC9BnF,KAAK+B,SAAS,CAACmD,UAAYiB,IAC3B,MACD,IAAK,iBACJhB,EAAU,GAAK,IAAImB,kBAAgBH,GACnCnG,KAAK8E,KAAKyB,OAAO,CAACpB,UAAYA,IAC9BnF,KAAK+B,SAAS,CAACsD,UAAYc,IAC3B,MACD,IAAK,gBACJX,EAAS,GAAK,IAAIc,kBAAgBH,GAClCnG,KAAK8E,KAAKyB,OAAO,CAACf,SAAWA,IAC7BxF,KAAK+B,SAAS,CAACwD,SAAWY,IAC1B,MACD,IAAK,gBACJX,EAAS,GAAK,IAAIc,kBAAgBH,GAClCnG,KAAK8E,KAAKyB,OAAO,CAACf,SAAWA,IAC7BxF,KAAK+B,SAAS,CAAC0D,SAAWU,IAC1B,MACD,IAAK,YACJX,EAAS,GAAK,IAAIc,kBAAgBH,GAClCnG,KAAK8E,KAAKyB,OAAO,CAACb,MAAQS,IAC1BnG,KAAK+B,SAAS,CAAC2D,MAAQS,S,GA7DI9F,IAAMC,W,gBC5BhBkG,E,kDAEpB,WAAYvG,GAA6B,IAAD,8BACvC,cAAMA,IACDqB,MAAQ,CAACmF,QAAU,EAAKxG,MAAMyE,MAAMtD,WAAWqF,SAFb,E,0CAKxC,WAAU,IAAD,OACR,OAAO,sBAAK3G,UAAU,0BAAf,UACN,kDAEA,sBAAK8E,GAAG,mBAAR,UACE,YAAI5E,KAAKsB,MAAMmF,QAAQC,UAAU7B,KAAI,SAAA8B,GAAC,OACtC,cAAC,EAAD,CAAoB5D,OAAQ4D,EAAgBd,SAAU,EAAK5F,MAAM2G,eAA7BD,EAAEE,SAEvC,qBAAK9G,QAASC,KAAKC,MAAM6G,UAAUf,KAAK/F,MAAO+G,MAAO,CAACC,OAAQ,WAA/D,oC,GAfgD3G,IAAMC,WAkCpD2G,E,kDAIL,WAAYpH,GAAqB,IAAD,8BAC/B,cAAMA,IAJPqH,UAAoC,KAGJ,EAFhCC,oBAA+B,EAI9B,EAAK7F,MAAQ,CAACyB,OAASlD,EAAEkD,OAAOqE,MAAOC,QAAS,EAAOC,QAAUzH,EAAEkD,OAAOuE,QAAST,KAAMhH,EAAEkD,OAAO8D,KAAMU,UAAW,GAEnH,EAAKC,mBAAqB,EAAKA,mBAAmBzB,KAAxB,gBAJK,E,sDAOhC,SAAmBjF,GAEbd,KAAKmH,qBAAsBnH,KAAKkH,WAAclH,KAAKkH,UAAUO,SAAS3G,EAAMuF,SAChFrG,KAAK+B,SAAS,CAACsF,QAAS,M,6BAI1B,SAAgBvG,GACfd,KAAKmH,oBAAuBnH,KAAKkH,WAAalH,KAAKkH,UAAUO,SAAS3G,EAAMuF,U,+BAG7E,WACCqB,SAASC,iBAAiB,YAAa3H,KAAK4H,gBAAgB7B,KAAK/F,OACjE0H,SAASC,iBAAiB,UAAW3H,KAAKwH,mBAAmBzB,KAAK/F,S,kCAGnE,WACC0H,SAASG,oBAAoB,YAAa7H,KAAK4H,iBAC/CF,SAASG,oBAAoB,UAAW7H,KAAKwH,sB,oBAG9C,WAAU,IAAD,OAGR,OAAO,gCACN,sBAAK1H,UAAU,SAAf,UACC,qBACCA,UAAU,SACViH,MAAO,CAAEe,gBAAiB9H,KAAKC,MAAM8C,OAAOqE,OAC5CrH,QAAS,kBAAO,EAAKuB,MAAM+F,QAAU,EAAKtF,SAAS,CAACsF,QAAU,EAAK/F,MAAM+F,YAE1E,uBAAO1B,MAAO3F,KAAKsB,MAAMuF,KAAMhB,SAAU,SAACK,GAAO,IAAIxF,EAAIwF,EAAEE,cAAcT,MAAO,EAAK5D,SAAS,CAAC8E,KAAOnG,IAAK,EAAKT,MAAM8C,OAAO8D,KAAOnG,KACpI,cAAC,IAAD,CAAcqH,KAAM,GAAIhB,MAAO,CAACC,OAAS,WAAYjH,QAAS,SAACiI,GAAO,EAAKjG,SAAS,CAACwF,UAAY,EAAKjG,MAAMiG,iBAE5GvH,KAAKsB,MAAM+F,QACX,qBAAKvH,UAAU,UAAUmI,IAAK,SAACC,GAAD,OAAU,EAAKhB,UAAYgB,GAAzD,SACA,cAAC,IAAD,CAAgBC,MAAOnI,KAAKC,MAAM8C,OAAOqE,MAAOvB,SAAU,SAACnF,GAAO,EAAKqB,SAAS,CAACgB,OAASrC,IAAK,EAAK0H,aAAa1H,QAGjHV,KAAKsB,MAAMiG,UACX,sBAAKzH,UAAU,UAAf,UACE,YAAIE,KAAKsB,MAAMgG,QAAQZ,UAAU7B,KAAI,SAACwD,GAAD,OAAyB,oCAAM,uBAAO1C,MAAO0C,EAAEjD,gBAAiBtF,UAAU,GAAG+F,SAAU,EAAKyC,cAAcD,GAAGtC,KAAK,KAAzF,IAAkG,cAAC,IAAD,CAAShG,QAAS,kBAAM,EAAKwI,cAAcF,YAC5M,qBAAKtB,MAAS,CAACC,OAAS,WAAYjH,QAAWC,KAAKwI,WAAWzC,KAAK/F,MAApE,2BACA,+B,0BAMJ,SAAaU,GACZV,KAAKC,MAAM8C,OAAO0F,cAAcvF,SAAOwF,QAAQhI,IAC/CV,KAAKC,MAAM4F,a,2BAGZ,SAAcwC,GAAsB,IAAD,OAClC,OAAO,SAACnC,GACPmC,EAAEM,eAAezC,EAAEG,OAAOV,OAC1B,EAAK5D,SAAS,CAACuF,QAAU,EAAKrH,MAAM8C,OAAOuE,UAC3C,EAAKrH,MAAM4F,c,wBAIb,WACC7F,KAAKC,MAAM8C,OAAO6F,YAAY,IAC9B5I,KAAK+B,SAAS,CAACuF,QAAUtH,KAAKC,MAAM8C,OAAOuE,Y,2BAE5C,SAAcuB,GACb7I,KAAKC,MAAM8C,OAAO+F,eAAeD,GACjC7I,KAAK+B,SAAS,CAACuF,QAAUtH,KAAKC,MAAM8C,OAAOuE,c,GA/EZjH,IAAMC,W,gBCSxByI,EA1Cf,kDAEC,WAAmB9I,GAAqB,IAAD,8BACtC,cAAMA,IACDqB,MAAQ,CAAC0H,iBAAmB,IAFK,EAFxC,0CAQC,WAAW,IAAD,OAiBT,OAAO,sBAAKlJ,UAAU,iCAAf,UACL,iDACA,gCACC,cAAC,IAAD,CAAQmJ,QAnBW,CACrB,CAAEtD,MAAO,+BAAgCuD,MAAO,iBAChD,CAAEvD,MAAO,wCAAyCuD,MAAO,gBACzD,CAAEvD,MAAO,6BAA8BuD,MAAO,eAC9C,CAAEvD,MAAO,6BAA8BuD,MAAO,eAC9C,CAAEvD,MAAO,sBAAuBuD,MAAO,mBACvC,CAAEvD,MAAO,0CAA2CuD,MAAO,oBAC3D,CAAEvD,MAAO,yCAA0CuD,MAAO,kBAC1D,CAAEvD,MAAO,+BAAgCuD,MAAO,iCAChD,CAAEvD,MAAO,uCAAwCuD,MAAO,yBACxD,CAAEvD,MAAO,kCAAmCuD,MAAO,oBACnD,CAAEvD,MAAO,gCAAiCuD,MAAO,kBACjD,CAAEvD,MAAO,qCAAsCuD,MAAO,iBACtD,CAAEvD,MAAO,mCAAoCuD,MAAO,sBAMlBC,cAAc,EAAMC,aAAa,EAAMvD,SAAU,SAACwD,EAA0DC,GAA3D,OAAyH,EAAKvH,SAAS,CAACiH,iBAAmBK,GAAYA,EAAS1D,SAAS4D,OAAQ,CAACC,OAAS,SAACC,EAAUnI,GAAX,mBAAC,eAAyBmI,GAA1B,IAAoCtB,MAAO,cACvU,wBAAQuB,SAA0C,KAAhC1J,KAAKsB,MAAM0H,iBAAyBpD,KAAK,SAAShB,GAAG,iBAAiB7E,QAAS,kBAAM,EAAKE,MAAM0J,eAAe,EAAKrI,MAAM0H,mBAA5I,iCAED,gCACC,uBAAOpD,KAAK,OAAOhB,GAAG,eAAegF,UAAQ,IAC7C,wBAAQhE,KAAK,SAAShB,GAAG,gBAAgB7E,QAASC,KAAKC,MAAM4J,YAA7D,yBAED,8BACC,wBAAQjF,GAAG,SAAS7E,QAASC,KAAKC,MAAM6J,YAAxC,+BApCL,GAA2CzJ,IAAMC,WCE5ByJ,E,kDAYpB,WAAY/B,GAAS,IAAD,8BACnB,cAAMA,IAXPgC,wBAAqD,KAUjC,EATpBC,2BAA+D,KAS3C,EARpBC,qBAAuD,KAQnC,EAPpBC,oBAAiD,KAO7B,EANpBC,oBAA+B,EAMX,EAJpBC,WAA2B,KAIP,EAHpBC,oBAA+B,EAGX,EAFpBC,UAAqB,GAIpB,EAAKjJ,MAAQ,CAACoD,MAAQ,IAAI8F,IAAY,CAACC,cAAgBC,MAAMC,KAAK,CAAC1I,OAAO,IAAI,kBAAOyI,MAAMC,KAAK,CAAC1I,OAAO,IAAI,iBAAM,aAF/F,E,0CAKpB,WAAU,IAAD,OACR,OAAO,sBAAKnC,UAAU,iBAAf,UACL,cAAC,EAAD,CAAiBK,YAAaH,KAAKG,YAAY4F,KAAK/F,MAAOE,gBAAiBF,KAAKE,gBAAgB6F,KAAK/F,MAAOI,mBAAoBJ,KAAKI,mBAAmB2F,KAAK/F,QAC9J,eAAC,IAAD,CAAMF,UAAU,oBAAoBmI,IAAK,SAAAC,GAAI,OAAI,EAAKmC,WAAanC,GAAM0C,qBAAqB,EAA9F,UACC,eAAC,IAAD,WACC,cAAC,IAAD,4BACA,cAAC,IAAD,2BAGD,cAAC,IAAD,CAAU7D,MAAO,CAACrD,OAAO,QAAzB,SACC,cAAC,EAAD,CAAmBvC,cAAenB,KAAKsB,MAAMoD,MAAM+F,cAAerJ,WAAYpB,KAAKsB,MAAMoD,MAAMtD,WAAYC,UAAWrB,KAAKsB,MAAMoD,MAAMrD,UAAW4G,IAAK,SAAAC,GAAI,OAAI,EAAK8B,wBAA0B9B,GAAMnH,aAAcf,KAAK6K,gBAAgB9E,KAAK/F,UAE7O,cAAC,IAAD,CAAU+G,MAAO,CAACrD,OAAO,QAAzB,SACC,cAAC,EAAD,CAAmBvC,cAAenB,KAAKsB,MAAMoD,MAAMvD,cAAeC,WAAYpB,KAAKsB,MAAMoD,MAAMtD,WAAYC,UAAWrB,KAAKsB,MAAMoD,MAAMrD,UAAW4G,IAAK,SAAAC,GAAI,OAAI,EAAKiC,oBAAsBjC,GAAMnH,aAAcf,KAAK8K,eAAe/E,KAAK/F,aAGzO,cAAC,EAAD,CAAwBiI,IAAK,SAAAC,GAAI,OAAI,EAAKgC,qBAAuBhC,GAAMxD,MAAO1E,KAAKsB,MAAMoD,MAAOkC,cAAe5G,KAAK4G,cAAcb,KAAK/F,MAAO8G,UAAW9G,KAAK8G,UAAUf,KAAK/F,MAAO+K,aAAc/K,KAAK+K,aAAahF,KAAK/F,QACzN,cAAC,EAAD,CAA0BiI,IAAK,SAAAC,GAAI,OAAI,EAAK+B,2BAA6B/B,GAAMxD,MAAO1E,KAAKsB,MAAMoD,MAAOM,QAAShF,KAAKgF,QAASD,WAAY/E,KAAK+E,aAChJ,cAAC,EAAD,CAAuB+E,YAAa9J,KAAK8J,YAAY/D,KAAK/F,MAAO6J,YAAa7J,KAAK6J,YAAY9D,KAAK/F,MAAO2J,eAAgB3J,KAAK2J,eAAe5D,KAAK/F,a,gEAIvJ,8BAAAqI,EAAA,yDAEe,QADR2C,EAAStD,SAASuD,eAAe,gBAAqCD,OAD7E,iEAI2CR,IAAYU,OAAOC,mBAAnB,YAA0CH,IAJrF,QAMmB,KAFdI,EAJL,SASEpL,KAAKqL,YAAYD,GATnB,gD,+EAaA,WACC,IAAItH,EAAI9D,KAAKsB,MAAMoD,MAAM4G,SACxBC,EAAO,IAAIC,KAAK,CAAC1H,GAAI,CAAE8B,KAAM,eAC7B6F,EAAS/D,SAASgE,cAAc,KACjCD,EAAOE,SAAW,yBAClBF,EAAOG,MAAQC,OAAOC,WAAaD,OAAOE,KAAKC,gBAAgBT,GAC/DE,EAAOQ,QAAQC,YAAc,CAAC,aAAcT,EAAOE,SAAUF,EAAOG,MAAMtI,KAAK,KAC/EmI,EAAOU,U,4BAGR,SAAeC,GACd,GAAa,OAATA,GAA0B,KAATA,EAArB,CACAxK,QAAQC,IAAIuK,GACZ,IAAItI,EAAI9D,KACRqM,MAAMD,EACL,CAACE,QAAU,CACV,eAAgB,mBAChB,OAAU,sBAEVC,MAAK,SAASC,GACf,OAAOA,EAAS5I,UACd2I,MAAK,SAAS7L,GAChB,IAAI0K,EAAYZ,IAAYU,OAAOuB,WAAW/L,EAAEgM,MAAM,OAEtD5I,EAAEuH,YAAYD,S,yBAIhB,SAAYA,GACXpL,KAAKsK,oBAAqB,EAC1BtK,KAAKqK,WAAYtI,SAAS,CAAC4K,cAAgB,IAC3C3M,KAAK+B,SAAS,CAAC2C,MAAQ0G,IACvBpL,KAAKiK,2BAA4BlI,SAAS,CAAC0C,WAAazE,KAAKsB,MAAMoD,MAAMC,QACzE3E,KAAKkK,qBAAsBnI,SAAS,CAAC0E,QAAUzG,KAAKsB,MAAMoD,MAAMtD,WAAWqF,UAE3EzG,KAAK4M,kBAAkB5M,KAAKsB,MAAMoD,MAAM+F,cAAezK,KAAKsB,MAAMoD,MAAMtD,WAAYpB,KAAKsB,MAAMoD,MAAMrD,a,+BAGtG,SAAkBwL,EAAyBzL,EAAyBC,GACnErB,KAAKgK,wBAAyBjI,SAAS,CAACX,WAAYA,EAAYC,UAAWA,IAC3ErB,KAAKgK,wBAAyB8C,kBAAkBD,K,8BAGjD,WAEC7M,KAAK4M,kBAAkB5M,KAAKsB,MAAMoD,MAAM+F,cAAezK,KAAKsB,MAAMoD,MAAMtD,WAAYpB,KAAKsB,MAAMoD,MAAMrD,a,6BAGtG,SAAgBb,EAAYC,EAAYC,GACvCV,KAAKsB,MAAMoD,MAAM+F,cAAcjK,GAAGC,GAAKC,EACvCV,KAAK+M,qB,4BAGN,SAAevM,EAAYC,EAAYC,GACtCV,KAAKsB,MAAMoD,MAAMvD,cAAcX,GAAGC,GAAKC,EACvCV,KAAKgN,oB,6BAGN,WACChN,KAAKmK,oBAAqBpI,SAAS,CAACX,WAAYpB,KAAKsB,MAAMoD,MAAMtD,aACjEpB,KAAKmK,oBAAqB2C,kBAAkB9M,KAAKsB,MAAMoD,MAAMvD,iB,2BAG9D,WACCnB,KAAK+M,mBACL/M,KAAKgN,oB,6BAGN,WACChN,KAAKsB,MAAMoD,MAAMuI,YACjBjN,KAAKgN,kBACLpL,QAAQC,IAAI,iB,4BAGb,WACC7B,KAAKqK,WAAYtI,SAAS,CAAC4K,cAAgB,IACtC3M,KAAKsB,MAAMoD,MAAMwI,eACrBlN,KAAKmN,oB,yBAIP,SAAYC,EAAeC,EAAmBvM,GACzCsM,GAASC,GACC,GAATD,GACHpN,KAAKmN,oB,yBAKR,WACCnN,KAAKsN,iBACDtN,KAAKsK,mBACRtK,KAAKsK,oBAAqB,GAE1BtK,KAAKsK,oBAAqB,EAC1BtK,KAAKuN,gBAAe,M,4BAItB,SAAeC,GACd,GAAKxN,KAAKsK,mBAAV,CACA,IAAItG,EAAIhE,KAAKsB,MAAMoD,MAAM+I,SAASzN,KAAKsB,MAAMoD,MAAMgJ,SAAW1N,KAAKuK,WACnEvK,KAAKmK,oBAAqB2C,kBAAkB9M,KAAKsB,MAAMoD,MAAMvD,eACxD6C,EAGJ6H,OAAO8B,WAAW3N,KAAKuN,eAAexH,KAAK/F,MAAO,GAFlDA,KAAKsK,oBAAqB,K,gCAM5B,WACCtK,KAAKsN,iBACAtN,KAAKsB,MAAMoD,MAAMkJ,gBACrBhM,QAAQC,IAAI,gBAEb7B,KAAKmK,oBAAqB2C,kBAAkB9M,KAAKsB,MAAMoD,MAAMvD,eAC7DS,QAAQC,IAAI,kB,6BAGb,WACC7B,KAAKsN,iBACAtN,KAAKsB,MAAMoD,MAAMmJ,iBACrBjM,QAAQC,IAAI,aAEb7B,KAAKmK,oBAAqB2C,kBAAkB9M,KAAKsB,MAAMoD,MAAMvD,eAC7DS,QAAQC,IAAI,mB,uBAGb,WACC,IAAIiM,EAAa9N,KAAKsB,MAAMoD,MAAMtD,WAAW6B,aAC7CjD,KAAKsB,MAAMoD,MAAMtD,WAAW2M,IAAI,IAAI7K,SAAO8K,OAAOC,OAAO/K,SAAOwF,QAAQoF,GAAI,CAAC,KAAS,UAEtF9N,KAAKkK,qBAAsBnI,SAAS,CAAC0E,QAAUzG,KAAKsB,MAAMoD,MAAMtD,WAAWqF,Y,0BAG5E,SAAaqH,GACZ9N,KAAKsB,MAAMoD,MAAMtD,WAAW8M,OAAOJ,GACnC9N,KAAKkK,qBAAsBnI,SAAS,CAAC0E,QAAUzG,KAAKsB,MAAMoD,MAAMtD,WAAWqF,Y,wBAG5E,SAAW3C,GACV9D,KAAKsB,MAAMoD,MAAMyJ,YAAYrK,GAC7B9D,KAAKiK,2BAA4BlI,SAAS,CAAC0C,WAAU,YAAOzE,KAAKsB,MAAMoD,MAAMC,W,qBAG9E,WACC3E,KAAKsB,MAAMoD,MAAM0J,WACjBpO,KAAKiK,2BAA4BlI,SAAS,CAAC0C,WAAU,YAAOzE,KAAKsB,MAAMoD,MAAMC,a,GAvMpCtE,IAAMC,WCXjD+N,IAASC,OACR,eAAC,IAAMC,WAAP,WACC,4DACA,cAAC,EAAD,OAED7G,SAASuD,eAAe,U,oDCRzB+C,OAAOQ,eAAeC,EAAS,aAAc,CAAE9I,OAAO,I,IAChDW,E,WACF,WAAYoI,GAAM,UACd1O,KAAKoF,gBAAkB,GACvBpF,KAAK2O,QAAU,GACf3O,KAAK2I,eAAe+F,G,kCAExB,SAAShO,GACL,OAA8C,OAAtC,IAAIkO,OAAO5O,KAAK2O,SAAUE,KAAKnO,K,qBAE3C,WACI,OAA+C,OAAxCV,KAAKoF,gBAAgBb,MAAM,W,sBAEtC,WACI,OAAOvE,KAAKoF,kB,4BAEhB,SAAe1E,GAEX,GADAV,KAAKoF,gBAAkB1E,EACW,OAA9BA,EAAE6D,MAAM,kBACR,MAAMuK,QAEVpO,EAAIA,EAAEqO,QAAQ,eAAgB,YAC9B/O,KAAK2O,QAAU,OAASjO,EAAI,S,KAGpC+N,EAAQO,QAAU1I,G,oDCzBd2I,EAAmBjP,MAAQA,KAAKiP,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDlB,OAAOQ,eAAeC,EAAS,aAAc,CAAE9I,OAAO,IACtD,IAAMyJ,EAAoBH,EAAgBI,EAAQ,KAC5CC,E,WACF,WAAYZ,GAAM,UACd1O,KAAKsF,SAAU,EACftF,KAAKmF,UAAY,GACjBnF,KAAKwF,SAAW,GAChBxF,KAAK0F,KAAO,EACZ1F,KAAKuG,OAAOmI,G,kCAEhB,WACI,MAAO,IAAM1O,KAAK0F,KAAKpD,WAAa,KAAO,CAACtC,KAAKmF,UAAWnF,KAAKwF,UAAUX,KAAI,SAAArE,GAAC,OAAIA,EAAEqE,KAAI,SAAAwD,GAAC,OAAIA,EAAE/F,cAAYgB,KAAK,UAAQA,KAAK,U,oBAEnI,SAAOzD,GAEHmO,OAAOC,OAAOjO,KAAMH,GACpBG,KAAKsF,QAAUtF,KAAKmF,UAAUlD,OAAS,GAAKjC,KAAKwF,SAASvD,OAAS,I,qBAKvE,SAAQzB,EAAGC,GACP,GAAIT,KAAKsF,eAAkBiK,IAAN9O,GACjB,OAAO,EACX,GAAIT,KAAKsF,SACL,GAAItF,KAAKmF,UAAU,GAAGqK,SAAShP,GAC3B,MAAO,CAACR,KAAKwF,SAAS,GAAGJ,sBAI7B,GAAIpF,KAAKmF,UAAU,GAAGqK,SAAShP,IAAMR,KAAKmF,UAAU,GAAGqK,SAAS/O,GAC5D,MAAO,CAACT,KAAKwF,SAAS,GAAGJ,gBAAiBpF,KAAKwF,SAAS,GAAGJ,iBAGnE,OAAO,K,wBAhBX,WACI,OAAO,IAAIkK,EAAgB,CAAEhK,SAAS,EAAMH,UAAW,CAAC,IAAIiK,EAAkBJ,QAAQ,KAAMxJ,SAAU,CAAC,IAAI4J,EAAkBJ,QAAQ,W,KAkB7IP,EAAQO,QAAUM,G,oDCxCdL,EAAmBjP,MAAQA,KAAKiP,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDlB,OAAOQ,eAAeC,EAAS,aAAc,CAAE9I,OAAO,IACtD,IAAMyJ,EAAoBH,EAAgBI,EAAQ,KAC5CnM,E,WACF,WAAYwL,GAAM,UACd1O,KAAKyP,IAAM,EACXzP,KAAK0P,MAAQ,EACb1P,KAAK2P,KAAO,EACZ3P,KAAKsH,QAAU,IAAIsI,IACnB5P,KAAK6G,KAAO,GACU,kBAAV6H,IACRA,EAAOxL,EAAOwF,QAAQgG,IAE1B1O,KAAKyI,cAAciG,G,6BAGvB,WACI,MAAO,CAAC1O,KAAKyP,IAAKzP,KAAK0P,MAAO1P,KAAK2P,Q,iBAEvC,WACI,MAAO,IAAM3P,KAAKqD,MAAMwB,KAAI,SAAAwD,GAAC,OAAK,IAAMA,EAAE/F,SAAS,KAAKuN,OAAO,MAAIvM,KAAK,M,2BAE5E,SAAcwK,GACVE,OAAOC,OAAOjO,KAAM8N,K,yBAExB,SAAYpN,GAAKV,KAAKsH,QAAQyG,IAAI,IAAIqB,EAAkBJ,QAAQtO,M,4BAChE,SAAemI,GAAK7I,KAAKsH,QAAQ4G,OAAOrF,M,oBAXxC,WAAiB,OAAO,IAAI3F,EAAO,CAAEuM,IAAK,IAAKC,MAAO,IAAKC,KAAM,Q,qBAYjE,SAAejP,GAEX,IAAIoD,GADJpD,EAAIA,EAAEqO,QAAQ,KAAM,KACVxK,MAAM,mDAChB,OAAIT,EACO,CAAE2L,IAAKK,SAAShM,EAAE,GAAI,IAAK4L,MAAOI,SAAShM,EAAE,GAAI,IAAK6L,KAAMG,SAAShM,EAAE,GAAI,KAI3E,CAAE2L,IAAK,IAAKC,MAAO,IAAKC,KAAM,S,KAIjDlB,EAAQO,QAAU9L,G,2ECzCd+L,EAAmBjP,MAAQA,KAAKiP,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDlB,OAAOQ,eAAeC,EAAS,aAAc,CAAE9I,OAAO,IACtD8I,EAAQvL,OAASuL,EAAQsB,WAAatB,EAAQa,gBAAkBb,EAAQnI,qBAAkB,EAC1F,IAAM8I,EAAoBH,EAAgBI,EAAQ,KAClDZ,EAAQnI,gBAAkB8I,EAAkBJ,QAC5C,IAAMgB,EAAoBf,EAAgBI,EAAQ,KAClDZ,EAAQa,gBAAkBU,EAAkBhB,QAC5C,IAAMiB,EAAehB,EAAgBI,EAAQ,KAC7CZ,EAAQsB,WAAaE,EAAajB,QAClC,IAAMkB,EAAWjB,EAAgBI,EAAQ,KACzCZ,EAAQvL,OAASgN,EAASlB,QAC1B,IAAMmB,EAAqBlB,EAAgBI,EAAQ,KAC7Ce,EAAWf,EAAQ,IACnBgB,EAAsBpB,EAAgBI,EAAQ,KAC9CiB,EAAWrB,EAAgBI,EAAQ,MACnC7E,E,WACF,aAAoB,IAAR3K,EAAQ,uDAAJ,GAAI,UAChBG,KAAKyK,cAAgB,GACrBzK,KAAK2E,MAAQ,GACb3E,KAAKoB,WAAa,IAAI6O,EAAajB,QACnChP,KAAKiJ,QAAU,IAAIsH,IACnBvQ,KAAKqB,UAAY,SACjBrB,KAAKwQ,YAAc,KACnBxQ,KAAKmB,cAAgB,GACrBnB,KAAKyQ,aAAe,GACpBzQ,KAAK0N,SAAW,EAChB1N,KAAK0Q,UAAY,KACjB1Q,KAAK2Q,YAAc,GACnB3C,OAAOC,OAAOjO,KAAMH,G,qCAExB,SAAYiE,GACR9D,KAAK2E,MAAMiM,OAAO5Q,KAAK2E,MAAMkM,QAAQ/M,GAAI,K,sBAE7C,WACI9D,KAAK2E,MAAMzC,KAAK8N,EAAkBhB,QAAQ8B,e,oBAE9C,WACI,IAAIC,EAAS,GAcb,OAXAA,EAAO7O,KAAK,2BACZ6O,EAAO7O,KAAP,MAAA6O,EAAM,EAAS/Q,KAAK2E,MAAME,KAAI,SAAAwD,GAAC,OAAIA,EAAE/F,gBACrCyO,EAAO7O,KAAK,yBAEZ6O,EAAO7O,KAAK,CAAC,oBACb6O,EAAO7O,KAAP,MAAA6O,EAAM,EAAS/Q,KAAKoB,WAAWkK,WAC/ByF,EAAO7O,KAAK,CAAC,kBAEb6O,EAAO7O,KAAK,CAAC,sBACb6O,EAAO7O,KAAP,MAAA6O,EAAM,EAAS/Q,KAAKyK,cAAc5F,KAAI,SAAAwD,GAAC,OAAIA,EAAE/E,KAAK,UAClDyN,EAAO7O,KAAK,CAAC,oBACN6O,EAAOzN,KAAK,Q,uBAEvB,WAAY,WACRtD,KAAKmB,cAAgBnB,KAAKyK,cAAc5F,KAAI,SAAAwD,GAAC,SAAQA,MAC5B,OAArBrI,KAAKwQ,aACLF,EAAStB,QAAQgC,MAAMhR,KAAKwQ,aAChCxQ,KAAK2Q,YAAc,GACnB,IAAIM,EAAkB,GAClBC,EAAS,GACblR,KAAKyK,cAAc0G,SAAQ,SAACzQ,EAAGD,GAC3B,EAAKgQ,aAAavO,KAAKwI,MAAMhK,EAAEuB,QAAQmP,KAAK,IAC5C1Q,EAAEyQ,SAAQ,SAACnJ,EAAGxH,GACV,IAAIsD,EAAI,EAAKuN,qBAAqB7Q,EAAGC,EAAGyQ,GACpCpN,IACAmN,EAAgB/O,KAAK4B,GACrBoN,EAAOhP,KAAK,CAAC1B,EAAGC,WAI5BT,KAAK0Q,UAAY,IAAIL,EAAoBrB,QAAQ,CAAEsC,WAAY,SAACjJ,EAAGrE,GAAJ,OAAUqE,EAAEkJ,eAAiBvN,EAAEuN,gBAAgBC,cAAeP,M,iCAEjI,WAAsB,WAClB,GAAIjR,KAAKkN,cAAe,CACpB,IADoB,iBAEhB,IAAIuE,EAAI,EAAKf,UAAUgB,OAIvB,GAHQD,EAAEE,UAAUC,OAAM,YAAe,aAAbpR,EAAa,KAAVC,EAAU,UACrC,OAAO,EAAKgQ,aAAahQ,GAAGD,IAAMiR,EAAEI,eAGpC,cACJ,EAAKnB,UAAUoB,WAPa,GAAzB9R,KAAK0Q,UAAUzO,QAAa,kBAM3B,MAGR,OAA6B,GAAzBjC,KAAK0Q,UAAUzO,QAEZjC,KAAK0Q,UAAUgB,OAE1B,OAAO,I,sBAEX,SAASK,GACL,KAAO/R,KAAK0N,SAAWqE,GAAM,CACzB,IAAIN,EAAIzR,KAAKgS,sBACb,IAAU,IAANP,EACA,OAAO,EACX,GAAIA,EAAEF,eAAiBQ,EACnB,MACJ/R,KAAK4N,eAGT,OADA5N,KAAK0N,SAAWqE,GACT,I,0BAEX,WAAe,WACX,GAAI/R,KAAKkN,cAAe,CACpB,IAAIuE,EAAIzR,KAAKgS,sBACb,IAAU,IAANP,EACA,OAAO,EAOX,GANAzR,KAAK0Q,UAAUoB,UACf9R,KAAK0N,SAAW+D,EAAEF,eAClBE,EAAEE,UAAUR,SAAQ,YAAe,aAAb3Q,EAAa,KAAVC,EAAU,KAAPC,EAAO,KAC/B,EAAKS,cAAcV,GAAGD,GAAKE,EAC3B,EAAK+P,aAAahQ,GAAGD,GAAK,EAAKkN,YAET,OAAtB+D,EAAEQ,gBAA0B,CAC5BR,EAAEQ,gBAAkB,GACpB,IAAIf,EAAS,GACbO,EAAEE,UAAUR,SAAQ,YAAe,aAAb3Q,EAAa,KAAVC,EAAU,KAC3ByR,GAD2B,KACpB,EAAKb,qBAAqB7Q,EAAGC,EAAGyQ,IAC9B,OAATgB,IACA,EAAKxB,UAAUyB,MAAMD,GACrBT,GAAKA,EAAEQ,gBAAgB/P,KAAKgQ,GAC5BhB,EAAOhP,KAAK,CAAC1B,EAAGC,aAKxBgR,EAAEQ,gBAAgBd,SAAQ,SAACe,GACvB,EAAKxB,UAAUyB,MAAMD,MAI7B,OADAlS,KAAK2Q,YAAYzO,KAAKuP,GACU,GAAzBzR,KAAK0Q,UAAUzO,OAGtB,OAAO,I,2BAGf,WAAgB,WACZ,GAAIjC,KAAKkN,cAAe,CACpB,IAAIuE,EAAIzR,KAAK2Q,YAAYyB,MACzB,YAAU7C,IAANkC,IAEJzR,KAAK0N,SAAW+D,EAAEF,eAClBE,EAAEY,UAAUlB,SAAQ,YAAe,aAAb3Q,EAAa,KAAVC,EAAU,KAAPC,EAAO,KAC/B,EAAKS,cAAcV,GAAGD,GAAKE,EAC3B,EAAK+P,aAAahQ,GAAGD,GAAK,KAE9BR,KAAK0Q,UAAUyB,MAAMV,IACd,GAEX,OAAO,I,kCAEX,SAAqBjR,EAAGC,GAAgB,aAAbyQ,EAAa,uDAAJ,GAC5BoB,EAAetS,KAAKmB,cAAcV,GAAGD,GACrC+R,EAAkB,KAFc,IAGnBvS,KAAK2E,OAHc,IAGpC,2BAA6B,KAApBG,EAAoB,QACzB,GAAIA,EAAKQ,QAAS,CACd,IAAIxB,EAAIgB,EAAK0N,QAAQF,GACrB,GAAIxO,EAAG,CACH,IAAI2N,EAAIzR,KAAK0N,SAAW+E,KAAK5Q,IAAI,EAAIyO,EAAStB,QAAQ0D,SAAW5N,EAAKY,KACtE,GAAwB,OAApB6M,GAA4BA,EAAgBhB,eAAiBE,EAC7D,UACJc,EAAkB,IAAIpC,EAAmBnB,QAAQhP,KAAK0N,SAAU+D,IAChDkB,aAAanS,EAAGC,EAAG6R,GACnCC,EAAgBK,aAAapS,EAAGC,EAAGqD,EAAE,SAGxC,CACD,IAAI+O,EAAoB,GACF,UAAlB7S,KAAKqB,YACLwR,EAAoB,CAAC,EAAE,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAKvD,IARC,iBAQI,gBAAKC,EAAL,KAASC,EAAT,KACD,GAAItS,EAAIsS,GAAM,GAAKtS,EAAIsS,EAAK,EAAK5R,cAAcc,QAAUzB,EAAIsS,GAAM,GAAKtS,EAAIsS,EAAK,EAAK3R,cAAcV,EAAIsS,GAAI9Q,OAAQ,CAChH,GAAIiP,EAAO8B,MAAK,yBAAEC,EAAF,KAAMC,EAAN,YAAcD,GAAMzS,EAAIsS,GAAMI,GAAMzS,EAAIsS,KACpD,iBACJ,IAAII,EAAa,EAAKhS,cAAcV,EAAIsS,GAAIvS,EAAIsS,GAC5ChP,EAAIgB,EAAK0N,QAAQF,EAAca,GACnC,GAAIrP,EAAG,CACH,IAAI2N,EAAI,EAAK/D,SAAW+E,KAAK5Q,IAAI,EAAIyO,EAAStB,QAAQ0D,SAAW5N,EAAKY,KACtE,GAAI6M,GAAmBA,EAAgBhB,eAAiBE,EACpD,kBACJc,EAAkB,IAAIpC,EAAmBnB,QAAQ,EAAKtB,SAAU+D,IAChDkB,aAAanS,EAAGC,EAAG6R,GACnCC,EAAgBI,aAAanS,EAAIsS,EAAIrS,EAAIsS,EAAII,GAC7CZ,EAAgBK,aAAapS,EAAGC,EAAGqD,EAAE,IACrCyO,EAAgBK,aAAapS,EAAIsS,EAAIrS,EAAIsS,EAAIjP,EAAE,IAGnD,GADAA,EAAIgB,EAAK0N,QAAQW,EAAYb,GACtB,CACH,IAAIb,EAAI,EAAK/D,SAAW+E,KAAK5Q,IAAI,EAAIyO,EAAStB,QAAQ0D,SAAW5N,EAAKY,KACtE,GAAI6M,GAAmBA,EAAgBhB,eAAiBE,EACpD,kBACJc,EAAkB,IAAIpC,EAAmBnB,QAAQ,EAAKtB,SAAU+D,IAChDkB,aAAanS,EAAGC,EAAG6R,GACnCC,EAAgBI,aAAanS,EAAIsS,EAAIrS,EAAIsS,EAAII,GAC7CZ,EAAgBK,aAAapS,EAAGC,EAAGqD,EAAE,IACrCyO,EAAgBK,aAAapS,EAAIsS,EAAIrS,EAAIsS,EAAIjP,EAAE,OAzB3D,MAAqB+O,EAArB,eAAwC,MAvBZ,8BAsDpC,OAAON,I,yBAEX,WACI,OAAyB,MAAlBvS,KAAK0Q,c,KAGpBjC,EAAQO,QAAUxE,EAClBA,EAAYU,OAAS,CAAEC,mBAAoBiF,EAASjF,mBAAoBsB,WAAY2D,EAAS3D,a,oECtN7FuB,OAAOQ,eAAeC,EAAS,aAAc,CAAE9I,OAAO,I,IAChDoK,E,WACF,WAAYrB,GAAM,UACd1O,KAAKyG,QAAU,IAAImJ,IACnB5P,KAAKoT,gBAAkB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/PpT,KAAKqT,aAAe,IAAI9C,IACpB7B,IACA1O,KAAKyG,QAAUiI,G,qCAEvB,SAAYhO,GAAG,UACGV,KAAKyG,SADR,IACX,2BAA4B,KAAnBqH,EAAmB,QACxB,GAAI,EAAIA,EAAExG,QAAQZ,UAAUsM,MAAK,SAACM,GAAD,OAAQA,EAAG9D,SAAS9O,MACjD,OAAOoN,GAHJ,8BAMX,IAAI9J,EAAIhE,KAAKqT,aAAaE,IAAI7S,GAC9B,YAAa6O,IAANvL,EAAkB,KAAOA,I,oBAEpC,WACI,OAAO,EAAIhE,KAAKyG,QAAQC,UAAU7B,KAAI,SAAAiJ,GAAC,MAAI,IAAMA,EAAEjH,KAAO,KAAO,EAAIiH,EAAExG,QAAQZ,UAAU7B,KAAI,SAAAnE,GAAC,OAAIA,EAAE4B,cAAYgB,KAAK,KAAO,OAASwK,EAAEzK,MAAMC,KAAK,KAAO,S,wBAE7J,WAAa,WACLwK,EAAI9N,KAAKoT,gBAAgBI,MAAK,SAACnL,GAC/B,YAA6FkH,IAAzF,YAAI,EAAK8D,aAAa3M,UAAtB,EAAmC,EAAKD,QAAQC,WAAU8M,MAAK,SAAC1F,GAAD,OAAOA,EAAE1G,QAAUiB,QAI1F,YAAUkH,IAANzB,EACO,UAGAA,I,iBAGf,SAAIA,GACA9N,KAAKyG,QAAQsH,IAAID,K,oBAErB,SAAOA,GACH9N,KAAKyG,QAAQyH,OAAOJ,K,sBAExB,SAASpN,EAAGoN,GACR9N,KAAKqT,aAAaI,IAAI/S,EAAGoN,K,wBAE7B,WACI9N,KAAKqT,aAAaK,Y,KAG1BjF,EAAQO,QAAUe,G,oDC/ClB/B,OAAOQ,eAAeC,EAAS,aAAc,CAAE9I,OAAO,I,IAChDgO,E,WACF,WAAY9B,EAAaN,GAAgB,UACrCvR,KAAKqS,UAAY,GACjBrS,KAAK2R,UAAY,GACjB3R,KAAKiS,gBAAkB,KACvBjS,KAAK6R,YAAcA,EACnB7R,KAAKuR,eAAiBA,E,sCAE1B,SAAa/Q,EAAGC,EAAGmT,GACf5T,KAAKqS,UAAUnQ,KAAK,CAAC1B,EAAGC,EAAGmT,M,0BAE/B,SAAapT,EAAGC,EAAGoT,GACf7T,KAAK2R,UAAUzP,KAAK,CAAC1B,EAAGC,EAAGoT,M,oCAE/B,SAAuBpC,GACnBzR,KAAKiS,gBAAkBR,M,KAG/BhD,EAAQO,QAAU2E,G,4ECnBdG,EAAa9T,MAAQA,KAAK8T,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU3O,GAAS,IAAMM,EAAKiO,EAAUK,KAAK5O,IAAW,MAAOO,GAAKmO,EAAOnO,IACpF,SAASsO,EAAS7O,GAAS,IAAMM,EAAKiO,EAAS,MAAUvO,IAAW,MAAOO,GAAKmO,EAAOnO,IACvF,SAASD,EAAKwO,GAJlB,IAAe9O,EAIa8O,EAAOC,KAAON,EAAQK,EAAO9O,QAJ1CA,EAIyD8O,EAAO9O,MAJhDA,aAAiBsO,EAAItO,EAAQ,IAAIsO,GAAE,SAAUG,GAAWA,EAAQzO,OAIT4G,KAAK+H,EAAWE,GAClGvO,GAAMiO,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKO,YAGlEtF,EAAmBjP,MAAQA,KAAKiP,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDlB,OAAOQ,eAAeC,EAAS,aAAc,CAAE9I,OAAO,IACtD8I,EAAQtD,mBAAqBsD,EAAQhC,gBAAa,EAClD,IAAM2C,EAAoBH,EAAgBI,EAAQ,KAC5CW,EAAoBf,EAAgBI,EAAQ,KAC5Ca,EAAWjB,EAAgBI,EAAQ,KACnCuF,EAAgB3F,EAAgBI,EAAQ,IAwB9C,SAASwF,EAAWC,EAAMC,GACtB,IAAIjQ,EAxBR,SAAoBgQ,GAChB,GAAwC,IAAnCA,EAAKvQ,MAAM,QAAU,IAAItC,OAC1B,OAAO,EACX,IAAIyD,EAAO,EAEX,GADAoP,EAAOA,EAAK/F,QAAQ,uBAAuB,SAAC/G,EAAGxH,GAAmB,OAAXkF,GAAQlF,EAAU,OACjDkM,MAAM,MAAM7H,KAAI,SAAAwD,GAAC,OAAIA,EAAEqE,MAAM,KAAK7H,KAAI,SAAAb,GAAC,OAAI,IAAIoL,EAAkBJ,QAAQhL,EAAEM,cAAnG,SAAK0Q,EAAL,KAAYC,EAAZ,KAEA,QAAID,EAAM/S,QAAUgT,EAAIhT,QAAU+S,EAAM/S,OAAS,GAAqB,GAAhB+S,EAAM/S,SAErD,IAAI+N,EAAkBhB,QAAQ,CAAE7J,UAAW6P,EAAOxP,SAAUyP,EAAKvP,KAAMA,EAAMJ,QAAyB,GAAhB0P,EAAM/S,SAexFiT,CAAWJ,GACtB,IAAa,IAAThQ,EAEA,OADAiQ,EAAQpQ,MAAMzC,KAAK4C,IACZ,EAEX,IAAIqQ,EAbR,SAAsBL,GAClB,IAAIM,EAAON,EAAKvQ,MAAM,+EACtB,GAAY,MAAR6Q,EACA,OAAO,EACX,IAAIC,EAAKD,EAAK,GAAG1I,MAAM,YAAY7H,KAAI,SAAAwD,GAAC,OAAI,IAAI+G,EAAkBJ,QAAQ3G,EAAE/D,WAC5E,OAAO,IAAI4L,EAASlB,QAAQ,CAAEnI,KAAMuO,EAAK,GAAI9N,QAAS,IAAIsI,IAAIyF,GAAK5F,KAAM2F,EAAK,GAAI1F,OAAQ0F,EAAK,GAAIzF,MAAOyF,EAAK,KAQ7FE,CAAaR,GAC/B,IAAoB,IAAhBK,EAEA,OADAJ,EAAQ3T,WAAW2M,IAAIoH,IAChB,EAEX,IAAI3L,EAvBR,SAAsBsL,GAClB,OAAuC,IAAlCA,EAAKvQ,MAAM,OAAS,IAAItC,QAEtB6S,EAAKpI,MAAM,KAAK7H,KAAI,SAAAwD,GAAC,OAAIA,EAAE/D,UAoBrBiR,CAAaT,GAC1B,IAAe,IAAXtL,EAAkB,CAClB,QAAiBA,EAAjB,GAAKgM,EAAL,KAAUC,EAAV,KAEA,OADAV,EAAQ9L,QAAQwK,IAAI+B,EAAKC,IAClB,EAEX,OAAO,EAEX,SAASC,EAAiBZ,GAEtB,OAAOA,EAAKpI,MAAM,SAEtB,SAASD,EAAWhL,GAChB,IADsB,EAClBkU,GAAqB,EACrBZ,EAAU,IAAIH,EAAc5F,QAFV,IAGLvN,GAHK,IAGtB,2BAAuB,KAAdqT,EAAc,QAEnB,GAAY,KADZA,EAAOA,EAAKxQ,OAAOyK,QAAQ,MAAO,KAGlC,GAAK4G,EAOA,CACD,GAAY,mBAARb,EAA2B,CAC3Ba,GAAqB,EACrB,SAEJ,IAAIH,EAAME,EAAiBZ,GAC3BC,EAAQtK,cAAcvI,KAAKsT,OAbN,CACrB,GAAY,qBAARV,EAA6B,CAC7Ba,GAAqB,EACrB,SAEJd,EAAWC,EAAMC,KAZH,8BAuBtB,OAAOA,EAEXtG,EAAQhC,WAAaA,EAsCrBgC,EAAQtD,mBAnCR,SAA4ByK,GACxB,OAAO9B,EAAU9T,UAAM,OAAQ,EAAf,QAAuB,qHAC9B4V,EAD8B,uBAG/BhU,QAAQC,IAAI,kBAHmB,mBAIxB,GAJwB,OAM7BgU,EACF,aAAc,UACV7V,KAAKyB,KAAO,GACZzB,KAAK8V,UAAW,GAGpBC,EAAgB,IAAIxF,IAZW,IAclBqF,GAdkB,yDAgBrB,OAFLxJ,EAd0B,QAe3BvD,EAAI,IAAIgN,EAfmB,UAgBfzJ,EAAKxI,OAhBU,QAgB/BiF,EAAEpH,KAhB6B,OAgBFiL,MAAM,MAAM7H,KAAI,SAAAwD,GAAC,OAAIA,EAAE/D,OAAOyK,QAAQ,MAAO,OAC1EgH,EAActC,IAAIrH,EAAKvF,KAAMgC,GAjBE,sHAAAmN,IAAA,yBAmBdD,GAnBc,IAmBnC,2BAAoC,qBAArBlN,EAAqB,SAClBA,EAAEpH,MADgB,IAChC,2BAAsB,QACZ8C,MAAM,cAFgB,gCAnBD,0BAAAyR,IA0B/BC,EAAQ,GA1BuB,IA2BhBF,GA3BgB,IA2BnC,2BAAkC,qBAArBlN,EAAqB,MACvBiN,UACHG,EAAM/T,KAAN,MAAA+T,EAAK,EAASpN,EAAEpH,OA7BW,0BAAAuU,IAAA,yBA+B5BvJ,EAAWwJ,IA/BiB,kE","file":"static/js/main.3066d4ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FaPlay, FaStepBackward, FaStepForward} from 'react-icons/fa';\r\n\r\ninterface HeaderProps {\r\n\tplayPressed : (_ : any) => void\r\n\tstepBackPressed : (_ : any) => void\r\n\tstepForwardPressed : (_ : any) => void\r\n}\r\n\r\nexport default class HeaderComponent extends React.Component<HeaderProps> {\r\n\t\r\n\tconstructor(p : HeaderProps) {\r\n\t\tsuper(p);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn <header className=\"grid\">\r\n\t\t\t<nav className=\"grid\">\r\n\t\t\t\t<h2 className=\"grid title\">\r\n\t\t\t\t\tSurface CRN Simulator\r\n\t\t\t\t</h2>\r\n\t\t\t\t<h4 className=\"grid simulator_options\">\r\n\t\t\t\t\t(sim options)\r\n\t\t\t\t</h4>\r\n\t\t\t\t<h4 className=\"simulator_controls\">\r\n\t\t\t\t\t<FaStepBackward onClick={this.props.stepBackPressed}/>\r\n\t\t\t\t\t<FaPlay onClick={this.props.playPressed}/>\r\n\t\t\t\t\t<FaStepForward onClick={this.props.stepForwardPressed}/>\r\n\t\t\t\t</h4>\r\n\t\t\t</nav>\r\n\t\t</header>;\r\n\t}\r\n}","\r\nclass Point {\r\n\tx: number;\r\n\ty: number;\r\n\t\r\n\tstatic origin : Point = new Point(0,0);\r\n\t\r\n\tconstructor(x : number,y : number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\t\r\n\tadd(p : Point) { return new Point(this.x + p.x, this.y + p.y) };\r\n\tsubtract(p : Point) { return new Point(this.x - p.x, this.y - p.y) };\r\n\tscale(s : number) { return new Point(this.x * s, this.y * s) };\r\n};\r\n\r\nexport default Point;","import React from 'react';\r\nimport Surface_CRN, {Species_Matcher, Transition_Rule, Colour_Map, Colour} from 'surface_crn';\r\nimport Point from './PointClass';\r\n\r\nimport {ReactCanvasGrid, ColumnDef, DataRow, CellDef, CustomDrawCallbackMetadata, CellDataChangeEvent, cellHasTextFunction} from 'react-canvas-grid';\r\n\r\ninterface CRN_GridProps {\r\n\tcurrent_state : string[][]\r\n\tcolour_map : Colour_Map\r\n\tgrid_type : 'square'|'hex'\r\n\tupdate_state : (x : number, y : number, s : string) => void\r\n}\r\n\r\ninterface CRN_GridState extends React.ComponentState {\r\n\tcolumns : ColumnDef[]\r\n\tdata: Array<DataRow<string | null>>\r\n\tcolour_map : Colour_Map\r\n\tgrid_type : 'square'|'hex'\r\n\toffset : Point\r\n}\r\n\r\nclass CRN_GridComponent extends React.Component<CRN_GridProps, CRN_GridState> {\r\n\t\r\n\tconstructor(props : CRN_GridProps) {\r\n\t\tsuper(props);\r\n\t\tlet {current_state, colour_map, grid_type} = props;\r\n\t\tthis.state = {\r\n\t\t\tcolumns : this.createCols(current_state),\r\n\t\t\tdata : this.createData(current_state),\r\n\t\t\tcolour_map : colour_map,\r\n\t\t\tgrid_type : grid_type,\r\n\t\t\toffset : Point.origin\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconsole.log('rendAll');\r\n\t\t// TODO: figure out where to clear the temp\r\n\t\t//this.state.colour_map.clear_temp();\r\n\t\t// TODO: render \"Initial State\" and other information over canvas\r\n\t\treturn <ReactCanvasGrid<string | null>\r\n\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\trowHeight={20}\r\n\t\t\t\t\tonCellDataChanged={this.onCellDataChanged}\r\n\t\t\t\t/>\r\n\t}\r\n\t\r\n\tpublic updateColsAndData(current_state : string[][]) {\r\n\t\tthis.setState({columns: this.createCols(current_state), data: this.createData(current_state)});\r\n\t}\r\n\t\r\n\tprivate createCols(current_state : string[][]) {\r\n\t\tlet columns = [];\r\n\t\tlet colNum = 0;\r\n\t\tif (current_state.length !== 0) {\r\n\t\t\tcolNum = current_state[0].length;\r\n\t\t}\r\n\t\tcolumns.push({fieldName : 'addLeftCol', width: 20});\r\n\t\tfor (let i = 0; i < colNum; i++) columns.push({fieldName : i.toString(), width: 20});\r\n\t\tcolumns.push({fieldName : 'addRightCol', width: 20});\r\n\t\t\r\n\t\treturn columns;\r\n\t}\r\n\t\r\n\tprivate createData(current_state : string[][]) {\r\n\t\tlet data : Array<DataRow<string | null>> = [];\r\n\t\tfor (let i = -1; i <= current_state.length; i++) {\r\n\t\t\tlet row : DataRow<string | null> = {};\r\n\t\t\tif (i !== -1 && i !== current_state.length) {\r\n\t\t\t\tfor (let j = 0; j < current_state[0].length; j++) {\r\n\t\t\t\t\trow[j.toString()] = {\r\n\t\t\t\t\t\tdata: current_state[i][j],\r\n\t\t\t\t\t\tgetText: (x : string|null) => x ? x : '',\r\n\t\t\t\t\t\trenderBackground: (context : CanvasRenderingContext2D, cellBounds : ClientRect, cell : CellDef<string | null>, metadata : CustomDrawCallbackMetadata) => {\r\n\t\t\t\t\t\t\tif (cell.data !== null) {\r\n\t\t\t\t\t\t\t\tlet colour = this.state.colour_map.find_colour(cell.data);\r\n\t\t\t\t\t\t\t\tif (colour == null) {\r\n\t\t\t\t\t\t\t\t\tlet s : string = this.state.colour_map.new_colour();\r\n\t\t\t\t\t\t\t\t\tcolour = new Colour(s);\r\n\t\t\t\t\t\t\t\t\tthis.state.colour_map.add_temp(cell.data!, colour);\r\n\t\t\t\t\t\t\t\t\tconsole.log(cell.data, colour)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcontext.fillStyle = 'rgb(' + colour.rgb().join(',') + ')';\r\n\t\t\t\t\t\t\t\tcontext.fillRect(cellBounds.left, cellBounds.top, cellBounds.width, cellBounds.height);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\trenderText : (context: CanvasRenderingContext2D, cellBounds: ClientRect, cell: CellDef<string | null>) => {\r\n\t\t\t\t\t\t\tconst text = cellHasTextFunction(cell) ? cell.getText(cell.data) : cell.text;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (text) {\r\n\t\t\t\t\t\t\t\tlet colour : Colour | null = this.state.colour_map.find_colour(cell.data!);\r\n\t\t\t\t\t\t\t\tif (colour == null) {\r\n\t\t\t\t\t\t\t\t\tlet s : string = this.state.colour_map.new_colour();\r\n\t\t\t\t\t\t\t\t\tcolour = new Colour(s);\r\n\t\t\t\t\t\t\t\t\tthis.state.colour_map.add_temp(cell.data!, colour);\r\n\t\t\t\t\t\t\t\t\tconsole.log(cell.data, colour)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet [r,g,b] = colour.rgb();\r\n\t\t\t\t\t\t\t\tcontext.fillStyle = (r * 0.299 + g * 0.587 + b * 0.114) > 186 ? 'black' : 'white';\r\n\t\t\t\t\t\t\t\tcontext.fillText(text,cellBounds.left + 2,cellBounds.top + 10, cellBounds.width - 4);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\teditor: {\r\n\t\t\t\t\t\t\tserialise: (x : string|null) => x ? x : '',\r\n\t\t\t\t\t\t\tdeserialise: (text: string, prev : string|null) => {\r\n\t\t\t\t\t\t\t\ttext = text.trim();\r\n\t\t\t\t\t\t\t\tif (text.match(/^\\w+$/)) {\r\n\t\t\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn prev;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (current_state.length != 0) {\r\n\t\t\t\t\tfor (let j = 0; j < current_state[0].length; j++) {\r\n\t\t\t\t\t\trow[j.toString()] = {data: null, text : '', renderBackground : () => 1};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trow['addLeftCol'] = {data: null, text : '', renderBackground : () => 1};\r\n\t\t\trow['addRightCol'] = {data: null, text : '', renderBackground : () => 1};\r\n\t\t\tdata.push(row);\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\t\r\n\tprivate onCellDataChanged = (event: CellDataChangeEvent<string | null>) => {\r\n\t\tthis.props.update_state(event.rowIndex-1, event.colIndex-1, event.newData!);\r\n\t}\r\n}\r\n\r\nexport default CRN_GridComponent","import React from 'react';\r\nimport { FaTrash, FaPlus, FaArrowRight } from 'react-icons/fa';\r\n\r\nimport SurfaceCRN, {Species_Matcher, Transition_Rule, Colour_Map, Colour} from 'surface_crn';\r\n\r\ninterface TransitionRulesProps {\r\n\tmodel : SurfaceCRN\r\n\taddRule : () => void\r\n\tdeleteRule : (r : Transition_Rule) => void\r\n}\r\n\r\nexport default class TransitionRulesComponent extends React.Component<TransitionRulesProps, {rules_list : Transition_Rule[]}> {\r\n\r\n\tconstructor(props : TransitionRulesProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {rules_list : props.model.rules};\r\n\t}\r\n\r\n\trender() {\r\n\t\t// TODO: figure out better way of unique indexing\r\n\t\t\r\n\t\treturn <div className=\"grid panel rules_panel\">\r\n\t\t\t<h3 className=\"panel_header\"> Transition Rules </h3>\r\n\t\t\t\r\n\t\t\t<div id=\"rule_container\">\r\n\t\t\t\t{this.state.rules_list.map((r : Transition_Rule, i : number) => <RuleRowComponent key={r.toString() + i.toString()} rule={r} deleteRule={() => this.props.deleteRule(r)} />)}\r\n\t\t\t\t<div onClick={this.props.addRule}> Add Rule </div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\ninterface RuleRowState {\r\n\treactant0 : string,\r\n\treactant1 : string,\r\n\tproduct0 : string,\r\n\tproduct1 : string,\r\n\trate : number,\r\n}\r\n// TODO: Handle mono transitions properly (in here and in model)\r\nclass RuleRowComponent extends React.Component<{rule: Transition_Rule, deleteRule : React.MouseEventHandler<Element>}, RuleRowState> {\r\n\trule : Transition_Rule;\r\n\tdeleteRule : React.MouseEventHandler<Element>;\r\n\t\r\n\tconstructor(props : {rule : Transition_Rule, deleteRule : React.MouseEventHandler<Element>}) {\r\n\t\tsuper(props);\r\n\t\tthis.rule = props.rule;\r\n\t\tthis.state = {\r\n\t\t\treactant0 : props.rule.reactants[0].original_string,\r\n\t\t\treactant1 : !props.rule.is_mono ? props.rule.reactants[1].original_string : '',\r\n\t\t\tproduct0 : props.rule.products[0].original_string,\r\n\t\t\tproduct1 : !props.rule.is_mono ? props.rule.products[1].original_string : '',\r\n\t\t\trate : props.rule.rate,\r\n\t\t}\r\n\t\tthis.deleteRule = props.deleteRule;\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t// TODO: gray out mono'd rules\r\n\t\t\r\n\t\treturn <div className=\"rulesRow grid\">\r\n\t\t\t<div> <input value={this.state.rate} type=\"number\" className=\"rulesRate\" onChange={this.updateRule.bind(this)} min=\"0\" step=\"0.1\"/> </div>\r\n\t\t\t<div> <input value={this.state.reactant0} className=\"rulesReactant0\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<div> <FaPlus /> </div>\r\n\t\t\t<div> <input value={this.state.reactant1} className=\"rulesReactant1\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<div> <FaArrowRight /> </div>\r\n\t\t\t<div> <input value={this.state.product0} className=\"rulesProduct0\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<div> <FaPlus /> </div>\r\n\t\t\t<div> <input value={this.state.product1} className=\"rulesProduct1\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<FaTrash onClick={this.deleteRule} />\r\n\t\t</div>;\r\n\t}\r\n\t\r\n\tupdateRule(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet reactants = this.rule.reactants;\r\n\t\tlet products = this.rule.products;\r\n\t\tlet newVal : string = e.currentTarget.value;\r\n\t\tswitch (e.target.className) {\r\n\t\t\tcase \"rulesReactant0\":\r\n\t\t\t\treactants[0] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({reactants : reactants});\r\n\t\t\t\tthis.setState({reactant0 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesReactant1\":\r\n\t\t\t\treactants[1] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({reactants : reactants});\r\n\t\t\t\tthis.setState({reactant1 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesProduct0\":\r\n\t\t\t\tproducts[0] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({products : products});\r\n\t\t\t\tthis.setState({product0 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesProduct1\":\r\n\t\t\t\tproducts[1] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({products : products});\r\n\t\t\t\tthis.setState({product1 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesRate\":\r\n\t\t\t\tproducts[1] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({rate : +newVal});\r\n\t\t\t\tthis.setState({rate : +newVal});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\nimport SurfaceCRN, {Colour_Map, Colour, Species_Matcher} from 'surface_crn';\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport { FaAngleRight, FaTrash } from \"react-icons/fa\";\r\n\r\ninterface ColourMappingProps {\r\n\tmodel : SurfaceCRN\r\n\trefreshColour : () => void\r\n\taddColour : () => void\r\n\tdeleteColour : (c : Colour) => void\r\n}\r\n\r\nexport default class ColourMappingComponent extends React.Component<ColourMappingProps, {colours : Set<Colour>}> {\r\n\t\r\n\tconstructor(props : ColourMappingProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {colours : this.props.model.colour_map.colours};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn <div className=\"grid panel colour_panel\">\r\n\t\t\t<h3> Colour Mapping </h3>\r\n\t\t\t\r\n\t\t\t<div id=\"colour_container\">\r\n\t\t\t\t{[...this.state.colours.values()].map(v =>\r\n\t\t\t\t\t<ColourRowComponent colour={v} key={v.name} onChange={this.props.refreshColour}/>\r\n\t\t\t\t)}\r\n\t\t\t\t<div onClick={this.props.addColour.bind(this)} style={{cursor: \"pointer\"}}> Add Colour </div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\ninterface ColourRowState {\r\n\tcolour : string\r\n\tisOpen : boolean\r\n\tspecies : Set<Species_Matcher>\r\n\tname : string\r\n\tshowList : boolean\r\n}\r\n\r\ninterface ColourRowProps {\r\n\tcolour : Colour\r\n\tonChange : () => void\r\n}\r\n\r\nclass ColourRowComponent extends React.Component<ColourRowProps,ColourRowState> {\r\n\tpickerRef : HTMLDivElement | null = null;\r\n\tmouseDownInElement : boolean = false;\r\n\t\r\n\tconstructor(p : ColourRowProps) {\r\n\t\tsuper(p);\r\n\t\tthis.state = {colour : p.colour.hex(), isOpen : false, species : p.colour.species, name: p.colour.name, showList : false};\r\n\r\n\t\tthis.handleClickOutside = this.handleClickOutside.bind(this);\r\n\t}\r\n\t\r\n\thandleClickOutside(event : MouseEvent) {\r\n\t\t// TODO:  fix click on swatch to close picker\r\n\t\tif (!this.mouseDownInElement && this.pickerRef && !this.pickerRef.contains(event.target as Node)) {\r\n\t\t\tthis.setState({isOpen : false});\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleDownClick(event : MouseEvent) {\r\n\t\tthis.mouseDownInElement = (!this.pickerRef || this.pickerRef.contains(event.target as Node));\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('mousedown', this.handleDownClick.bind(this));\r\n\t\tdocument.addEventListener('mouseup', this.handleClickOutside.bind(this));\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('mousedown', this.handleDownClick);\r\n\t\tdocument.removeEventListener('mouseup', this.handleClickOutside);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t// TODO: disallow invalid chars in name\r\n\t\t// TODO: make swatch more integrated (background colour of text? left tab thing)\r\n\t\treturn <div>\r\n\t\t\t<div className=\"picker\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"swatch\"\r\n\t\t\t\t\tstyle={{ backgroundColor: this.props.colour.hex() }}\r\n\t\t\t\t\tonClick={() => !this.state.isOpen && this.setState({isOpen : !this.state.isOpen})}\r\n\t\t\t\t/>\r\n\t\t\t\t<input value={this.state.name} onChange={(e) => {let s = e.currentTarget.value; this.setState({name : s}); this.props.colour.name = s}} />\r\n\t\t\t\t<FaAngleRight size={25} style={{cursor : 'pointer'}} onClick={(_) => {this.setState({showList : !this.state.showList})}} />\r\n\t\t\t</div>\r\n\t\t\t{this.state.isOpen && (\r\n\t\t\t\t<div className=\"popover\" ref={(elem) => this.pickerRef = elem} >\r\n\t\t\t\t<HexColorPicker color={this.props.colour.hex()} onChange={(s) => {this.setState({colour : s}); this.updateColour(s)}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{this.state.showList && \r\n\t\t\t\t<div className=\"flexBox\">\r\n\t\t\t\t\t{[...this.state.species.values()].map((a : Species_Matcher) => <div> <input value={a.original_string} className=\"\" onChange={this.updateSpecies(a).bind(this)}/> <FaTrash onClick={() => this.deleteMatcher(a)} /></div>)}\r\n\t\t\t\t\t<div style = {{cursor : \"pointer\"}} onClick = {this.addMatcher.bind(this)}> Add Species </div>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>;\r\n\t}\r\n\t\r\n\tupdateColour(s : string) {\r\n\t\tthis.props.colour.update_colour(Colour.hex2rgb(s));\r\n\t\tthis.props.onChange();\r\n\t}\r\n\t\r\n\tupdateSpecies(a : Species_Matcher) {\r\n\t\treturn (e : React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\ta.update_matcher(e.target.value);\r\n\t\t\tthis.setState({species : this.props.colour.species});\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t}\r\n\t\r\n\taddMatcher() {\r\n\t\tthis.props.colour.add_matcher(\"\");\r\n\t\tthis.setState({species : this.props.colour.species});\r\n\t}\r\n\tdeleteMatcher(m : Species_Matcher) {\r\n\t\tthis.props.colour.delete_matcher(m);\r\n\t\tthis.setState({species : this.props.colour.species});\r\n\t}\r\n}","import React from 'react';\r\nimport Select, {SingleValue, ActionMeta} from 'react-select'\r\n\r\ninterface ImportProps {\r\n\timport_code : () => Promise<void>\r\n\texport_code : () => void\r\n\timport_example : (s : string | null) => void\r\n}\r\n\r\ninterface ImportState {\r\n\texample_selected : string | null\r\n}\r\n\r\nexport class ImportExportComponent extends React.Component<ImportProps, ImportState> {\r\n\t\r\n\tpublic constructor(props: ImportProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {example_selected : \"\"}\r\n\t}\r\n\t\r\n\t\r\n\trender () {\r\n\t\tconst example_files = [\r\n\t\t\t{ value: './examples/two-bit-adder.txt', label: 'Two Bit Adder' },\r\n\t\t\t{ value: './examples/alternate_line_builder.txt', label: 'Line Builder' },\r\n\t\t\t{ value: './examples/Brusselator.txt', label: 'Brusselator' },\r\n\t\t\t{ value: './examples/busy_beaver.txt', label: 'Busy Beaver' },\r\n\t\t\t{ value: './examples/ertl.txt', label: 'Ertl Oscillator' },\r\n\t\t\t{ value: './examples/game_of_life_5x5_circuit.txt', label: 'GoL Five by Five' },\r\n\t\t\t{ value: './examples/game_of_life_one_to_one.txt', label: 'GoL One to One' },\r\n\t\t\t{ value: './examples/GH_big_spiral.txt', label: 'Greenberg-Hastings Big spiral' },\r\n\t\t\t{ value: './examples/majority_asynchronous.txt', label: 'Majority Asynchronous' },\r\n\t\t\t{ value: './examples/molecular_walker.txt', label: 'Molecular Walker' },\r\n\t\t\t{ value: './examples/parens_matcher.txt', label: 'Parens Matcher' },\r\n\t\t\t{ value: './examples/sierpinski_1D_synch.txt', label: '1D Sierpinski' },\r\n\t\t\t{ value: './examples/smarter_scout_ant.txt', label: 'Smarter Scout Ant' }\r\n\t\t]\r\n\t\t\r\n\t\treturn <div className=\"grid panel import_export_panel\">\r\n\t\t\t\t<h3> Import/Export </h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Select options={example_files} isSearchable={true} isClearable={true} onChange={(newValue: SingleValue<{ value: string; label: string; }>, actionMeta: ActionMeta<{ value: string; label: string; }>) => this.setState({example_selected : newValue && newValue.value})} styles={{option : (provided, state) => ({...provided, color: 'black'})}} />\r\n\t\t\t\t\t<button disabled={this.state.example_selected === \"\"} type=\"submit\" id=\"import_example\" onClick={() => this.props.import_example(this.state.example_selected)}> Import Example </button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"file\" id=\"import_input\" multiple />\r\n\t\t\t\t\t<button type=\"submit\" id=\"import_submit\" onClick={this.props.import_code}> Import </button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button id=\"export\" onClick={this.props.export_code}> Export </button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>;\r\n\t}\r\n}\r\n\r\nexport default ImportExportComponent;","import React from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport Surface_CRN, {Colour_Map, Transition_Rule, Colour} from 'surface_crn';\r\nimport './index.css';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport CRN_GridComponent from './components/Grid_StateComponent';\r\nimport TransitionRulesComponent from './components/TransitionRulesComponent';\r\nimport ColourMappingComponent from './components/ColourMappingComponent';\r\nimport ImportExportComponent from './components/ImportExportComponent';\r\n\r\ninterface SurfaceCRNappState {\r\n\tmodel : Surface_CRN\r\n}\r\n\r\nexport default class SurfaceCRNapp extends React.Component<{}, SurfaceCRNappState> {\r\n\t\r\n\tinitial_state_component : CRN_GridComponent | null = null;\r\n\ttransition_state_component : TransitionRulesComponent | null = null;\r\n\tcolour_map_component : ColourMappingComponent | null = null;\r\n\tsimulator_component : CRN_GridComponent | null = null;\r\n\tsimulation_running : boolean = false;\r\n\t\r\n\tmodel_tabs : Tabs | null = null;\r\n\tplaying_simulation : boolean = false;\r\n\tstep_time : number = 0.5;\r\n\r\n\tconstructor(_ : {}) {\r\n\t\tsuper(_);\r\n\t\tthis.state = {model : new Surface_CRN({initial_state : Array.from({length:5}, () => (Array.from({length:5}, () => 'I')))})};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <div className=\"main_grid grid\">\r\n\t\t\t\t<HeaderComponent playPressed={this.playPressed.bind(this)} stepBackPressed={this.stepBackPressed.bind(this)} stepForwardPressed={this.stepForwardPressed.bind(this)} />\r\n\t\t\t\t<Tabs className=\"panel state_panel\" ref={elem => this.model_tabs = elem} forceRenderTabPanel={true}>\r\n\t\t\t\t\t<TabList>\r\n\t\t\t\t\t\t<Tab>Initial State</Tab>\r\n\t\t\t\t\t\t<Tab>Simulator</Tab>\r\n\t\t\t\t\t</TabList>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<TabPanel style={{height:\"100%\"}}>\r\n\t\t\t\t\t\t<CRN_GridComponent current_state={this.state.model.initial_state} colour_map={this.state.model.colour_map} grid_type={this.state.model.grid_type} ref={elem => this.initial_state_component = elem} update_state={this.updateInitState.bind(this)}/>\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t<TabPanel style={{height:\"100%\"}}>\r\n\t\t\t\t\t\t<CRN_GridComponent current_state={this.state.model.current_state} colour_map={this.state.model.colour_map} grid_type={this.state.model.grid_type} ref={elem => this.simulator_component = elem} update_state={this.updateSimState.bind(this)}/>\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t<ColourMappingComponent ref={elem => this.colour_map_component = elem} model={this.state.model} refreshColour={this.refreshColour.bind(this)} addColour={this.addColour.bind(this)} deleteColour={this.deleteColour.bind(this)}/>\r\n\t\t\t\t<TransitionRulesComponent ref={elem => this.transition_state_component = elem} model={this.state.model} addRule={this.addRule} deleteRule={this.deleteRule}/>\r\n\t\t\t\t<ImportExportComponent export_code={this.export_code.bind(this)} import_code={this.import_code.bind(this)} import_example={this.import_example.bind(this)}/>\r\n\t\t\t</div>\r\n\t}\r\n\r\n\tasync import_code() {\r\n\t\tconst files = (document.getElementById(\"import_input\") as HTMLInputElement).files;\r\n\t\tif (files === null) return;\r\n\t\t\r\n\t\tlet new_model : Surface_CRN|false = await Surface_CRN.parser.parse_import_files([...files]);\r\n\t\t\r\n\t\tif (new_model === false) {\r\n\t\t\t//show errors\r\n\t\t} else {\r\n\t\t\tthis.update_page(new_model);\r\n\t\t}\r\n\t}\r\n\t\r\n\texport_code() {\r\n\t\tlet r = this.state.model.export(),\r\n\t\t\tblob = new Blob([r], { type: 'text/plain' }),\r\n\t\t\tanchor = document.createElement('a');\r\n\t\tanchor.download = \"surface_crn_export.txt\";\r\n\t\tanchor.href = (window.webkitURL || window.URL).createObjectURL(blob);\r\n\t\tanchor.dataset.downloadurl = ['text/plain', anchor.download, anchor.href].join(':');\r\n\t\tanchor.click();\r\n\t}\r\n\t\r\n\timport_example(file : string | null) {\r\n\t\tif (file === null || file === \"\") return;\r\n\t\tconsole.log(file);\r\n\t\tlet r = this;\r\n\t\tfetch(file,\r\n\t\t\t{headers : { \r\n\t\t\t\t'Content-Type': 'application/text',\r\n\t\t\t\t'Accept': 'application/text'\r\n\t\t\t}}\r\n\t\t).then(function(response : Response){\r\n\t\t\treturn response.text();\r\n\t\t}).then(function(s : string) {\r\n\t\t\tlet new_model = Surface_CRN.parser.parse_code(s.split(\"\\n\"));\r\n\t\t\t\r\n\t\t\tr.update_page(new_model);\r\n\t\t});\r\n\t}\r\n\r\n\tupdate_page(new_model : Surface_CRN) {\r\n\t\tthis.playing_simulation = false;\r\n\t\tthis.model_tabs!.setState({selectedIndex : 0});\r\n\t\tthis.setState({model : new_model});\r\n\t\tthis.transition_state_component!.setState({rules_list : this.state.model.rules});\r\n\t\tthis.colour_map_component!.setState({colours : this.state.model.colour_map.colours});\r\n\r\n\t\tthis.update_init_state(this.state.model.initial_state, this.state.model.colour_map, this.state.model.grid_type);\r\n\t}\r\n\r\n\tupdate_init_state(init_state : string[][], colour_map : Colour_Map, grid_type : 'hex'|'square') {\r\n\t\tthis.initial_state_component!.setState({colour_map: colour_map, grid_type: grid_type});\r\n\t\tthis.initial_state_component!.updateColsAndData(init_state);\r\n\t}\r\n\t\r\n\trefreshInitState() {\r\n\t\t// TODO: redo this to avoid re-rendering the whole state?\r\n\t\tthis.update_init_state(this.state.model.initial_state, this.state.model.colour_map, this.state.model.grid_type);\r\n\t}\r\n\t\r\n\tupdateInitState(x : number, y : number, s : string) {\r\n\t\tthis.state.model.initial_state[x][y] = s;\r\n\t\tthis.refreshInitState();\r\n\t}\r\n\t\r\n\tupdateSimState(x : number, y : number, s : string) {\r\n\t\tthis.state.model.current_state[x][y] = s;\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\t\r\n\trefreshSimState() {\r\n\t\tthis.simulator_component!.setState({colour_map: this.state.model.colour_map});\r\n\t\tthis.simulator_component!.updateColsAndData(this.state.model.current_state);\r\n\t}\r\n\t\r\n\trefreshColour() {\r\n\t\tthis.refreshInitState();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\t\r\n\tstartSimulation() {\r\n\t\tthis.state.model.start_sim();\r\n\t\tthis.refreshSimState();\r\n\t\tconsole.log('sim started');\r\n\t}\r\n\t\r\n\tshowSimulation() {\r\n\t\tthis.model_tabs!.setState({selectedIndex : 1});\r\n\t\tif (!this.state.model.sim_started()) {\r\n\t\t\tthis.startSimulation();\r\n\t\t}\r\n\t}\r\n\t\r\n\tonTabSelect(index: number, lastIndex: number, event: Event) {\r\n\t\tif (index != lastIndex) {\r\n\t\t\tif (index == 1) {\r\n\t\t\t\tthis.startSimulation();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tplayPressed() {\r\n\t\tthis.showSimulation();\r\n\t\tif (this.playing_simulation) {\r\n\t\t\tthis.playing_simulation = false;\r\n\t\t} else {\r\n\t\t\tthis.playing_simulation = true;\r\n\t\t\tthis.playSimulation(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\tplaySimulation(started? : boolean) {\r\n\t\tif (!this.playing_simulation) return;\r\n\t\tlet b = this.state.model.run_upto(this.state.model.sim_time + this.step_time);\r\n\t\tthis.simulator_component!.updateColsAndData(this.state.model.current_state);\r\n\t\tif (!b) {\r\n\t\t\tthis.playing_simulation = false;\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(this.playSimulation.bind(this), 1)\r\n\t\t}\r\n\t}\r\n\t\r\n\tstepForwardPressed() {\r\n\t\tthis.showSimulation();\r\n\t\tif (!this.state.model.step_forward()) {\r\n\t\t\tconsole.log('sim finished');\r\n\t\t}\r\n\t\tthis.simulator_component!.updateColsAndData(this.state.model.current_state);\r\n\t\tconsole.log('step forward');\r\n\t}\r\n\t\r\n\tstepBackPressed() {\r\n\t\tthis.showSimulation();\r\n\t\tif (!this.state.model.step_backward()) {\r\n\t\t\tconsole.log('sim start');\r\n\t\t}\r\n\t\tthis.simulator_component!.updateColsAndData(this.state.model.current_state);\r\n\t\tconsole.log('step backward');\r\n\t}\r\n\t\r\n\taddColour() {\r\n\t\tlet c : string = this.state.model.colour_map.new_colour();\r\n\t\tthis.state.model.colour_map.add(new Colour(Object.assign(Colour.hex2rgb(c), {\"name\" : \"New\"})));\r\n\t\t\r\n\t\tthis.colour_map_component!.setState({colours : this.state.model.colour_map.colours})\r\n\t}\r\n\t\r\n\tdeleteColour(c : Colour) {\r\n\t\tthis.state.model.colour_map.delete(c);\r\n\t\tthis.colour_map_component!.setState({colours : this.state.model.colour_map.colours})\r\n\t}\r\n\t\r\n\tdeleteRule(r : Transition_Rule) {\r\n\t\tthis.state.model.remove_rule(r);\r\n\t\tthis.transition_state_component!.setState({rules_list : [...this.state.model.rules]});\r\n\t}\r\n\t\r\n\taddRule() {\r\n\t\tthis.state.model.add_rule();\r\n\t\tthis.transition_state_component!.setState({rules_list : [...this.state.model.rules]});\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SurfaceCRNapp from './SurfaceCRNapp';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<title> Surface CRN Simulator </title>\n\t\t<SurfaceCRNapp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Species_Matcher {\n    constructor(init) {\n        this.original_string = \"\";\n        this.matcher = \"\";\n        this.update_matcher(init);\n    }\n    includes(s) {\n        return (new RegExp(this.matcher)).exec(s) !== null;\n    }\n    is_pure() {\n        return this.original_string.match(/^\\w+$/) === null;\n    }\n    toString() {\n        return this.original_string;\n    }\n    update_matcher(s) {\n        this.original_string = s;\n        if (s.match(/\\\\(\\d|\\(\\d+\\))/) !== null)\n            throw Error();\n        // Todo: handle {} []\n        s = s.replace(/\\\\\\((\\d+)\\)/g, \"(?:\\\\$1)\");\n        this.matcher = '^(?:' + s + ')$';\n    }\n}\nexports.default = Species_Matcher;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nclass Transition_Rule {\n    constructor(init) {\n        this.is_mono = true;\n        this.reactants = [];\n        this.products = [];\n        this.rate = 1;\n        this.update(init);\n    }\n    toString() {\n        return '(' + this.rate.toString() + ') ' + [this.reactants, this.products].map(x => x.map(a => a.toString()).join(' + ')).join(' -> ');\n    }\n    update(p) {\n        // TODO: add error checking\n        Object.assign(this, p);\n        this.is_mono = this.reactants.length < 2 && this.products.length < 2;\n    }\n    static blankRule() {\n        return new Transition_Rule({ is_mono: true, reactants: [new Species_Matcher_1.default('')], products: [new Species_Matcher_1.default('')] });\n    }\n    matches(x, y) {\n        if (this.is_mono == (y !== undefined))\n            return false;\n        if (this.is_mono) {\n            if (this.reactants[0].includes(x)) {\n                return [this.products[0].original_string];\n            }\n        }\n        else {\n            if (this.reactants[0].includes(x) && this.reactants[1].includes(y)) {\n                return [this.products[0].original_string, this.products[1].original_string];\n            }\n        }\n        return false;\n    }\n}\nexports.default = Transition_Rule;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nclass Colour {\n    constructor(init) {\n        this.red = 0;\n        this.green = 0;\n        this.blue = 0;\n        this.species = new Set();\n        this.name = \"\";\n        if (typeof (init) === 'string') {\n            init = Colour.hex2rgb(init);\n        }\n        this.update_colour(init);\n    }\n    static white() { return new Colour({ red: 256, green: 256, blue: 256 }); }\n    rgb() {\n        return [this.red, this.green, this.blue];\n    }\n    hex() {\n        return '#' + this.rgb().map(a => (\"0\" + a.toString(16)).slice(-2)).join('');\n    }\n    update_colour(c) {\n        Object.assign(this, c);\n    }\n    add_matcher(s) { this.species.add(new Species_Matcher_1.default(s)); }\n    delete_matcher(m) { this.species.delete(m); }\n    static hex2rgb(s) {\n        s = s.replace(/^#/, '');\n        let r = s.match(/^([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})$/);\n        if (r) {\n            return { red: parseInt(r[1], 16), green: parseInt(r[2], 16), blue: parseInt(r[3], 16) };\n        }\n        else {\n            // TODO: setup fail state\n            return { red: 256, green: 256, blue: 256 };\n        }\n    }\n}\nexports.default = Colour;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Colour = exports.Colour_Map = exports.Transition_Rule = exports.Species_Matcher = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nexports.Species_Matcher = Species_Matcher_1.default;\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nexports.Transition_Rule = Transition_Rule_1.default;\nconst Colour_Map_1 = __importDefault(require(\"./Colour_Map\"));\nexports.Colour_Map = Colour_Map_1.default;\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nexports.Colour = Colour_1.default;\nconst Transition_State_1 = __importDefault(require(\"./Transition_State\"));\nconst Parser_1 = require(\"./Parser\");\nconst ts_priority_queue_1 = __importDefault(require(\"ts-priority-queue\"));\nconst random_1 = __importDefault(require(\"random\"));\nclass Surface_CRN {\n    constructor(p = {}) {\n        this.initial_state = [];\n        this.rules = [];\n        this.colour_map = new Colour_Map_1.default();\n        this.options = new Map();\n        this.grid_type = 'square';\n        this.random_seed = null;\n        this.current_state = [];\n        this.last_updated = [];\n        this.sim_time = 0;\n        this.sim_queue = null;\n        this.sim_history = [];\n        Object.assign(this, p);\n    }\n    remove_rule(r) {\n        this.rules.splice(this.rules.indexOf(r), 1);\n    }\n    add_rule() {\n        this.rules.push(Transition_Rule_1.default.blankRule());\n    }\n    export() {\n        let output = [];\n        // Options here\n        // Transition rules here\n        output.push(\"!START_TRANSITION_RULES\");\n        output.push(...this.rules.map(a => a.toString()));\n        output.push(\"!END_TRANSITION_RULES\");\n        // Colour mapping\n        output.push([\"!START_COLORMAP\"]);\n        output.push(...this.colour_map.export());\n        output.push([\"!END_COLORMAP\"]);\n        // Initial State\n        output.push([\"!START_INIT_STATE\"]);\n        output.push(...this.initial_state.map(a => a.join(' ')));\n        output.push([\"!END_INIT_STATE\"]);\n        return output.join(\"\\n\");\n    }\n    start_sim() {\n        this.current_state = this.initial_state.map(a => [...a]);\n        if (this.random_seed !== null)\n            random_1.default.clone(this.random_seed);\n        this.sim_history = [];\n        let initial_changes = [];\n        let ignore = [];\n        this.initial_state.forEach((s, y) => {\n            this.last_updated.push(Array(s.length).fill(0));\n            s.forEach((_, x) => {\n                let r = this.find_next_transition(x, y, ignore);\n                if (r) {\n                    initial_changes.push(r);\n                    ignore.push([x, y]);\n                }\n            });\n        });\n        this.sim_queue = new ts_priority_queue_1.default({ comparator: (a, b) => a.execution_time - b.execution_time, initialValues: initial_changes });\n    }\n    get_next_transition() {\n        if (this.sim_started()) {\n            while (this.sim_queue.length != 0) {\n                let t = this.sim_queue.peek();\n                let b = t.new_cells.every(([x, y, _]) => {\n                    return this.last_updated[y][x] <= t.update_time;\n                });\n                if (b)\n                    break;\n                this.sim_queue.dequeue();\n            }\n            if (this.sim_queue.length == 0)\n                return false;\n            return this.sim_queue.peek();\n        }\n        return false;\n    }\n    run_upto(time) {\n        while (this.sim_time < time) {\n            let t = this.get_next_transition();\n            if (t === false)\n                return false;\n            if (t.execution_time > time)\n                break;\n            this.step_forward();\n        }\n        this.sim_time = time;\n        return true;\n    }\n    step_forward() {\n        if (this.sim_started()) {\n            let t = this.get_next_transition();\n            if (t === false)\n                return false;\n            this.sim_queue.dequeue();\n            this.sim_time = t.execution_time;\n            t.new_cells.forEach(([x, y, s]) => {\n                this.current_state[y][x] = s;\n                this.last_updated[y][x] = this.sim_time;\n            });\n            if (t.new_transitions === null) {\n                t.new_transitions = [];\n                let ignore = [];\n                t.new_cells.forEach(([x, y, _]) => {\n                    let newT = this.find_next_transition(x, y, ignore);\n                    if (newT !== null) {\n                        this.sim_queue.queue(newT);\n                        t && t.new_transitions.push(newT);\n                        ignore.push([x, y]);\n                    }\n                });\n            }\n            else {\n                t.new_transitions.forEach((newT) => {\n                    this.sim_queue.queue(newT);\n                });\n            }\n            this.sim_history.push(t);\n            return this.sim_queue.length != 0;\n        }\n        else {\n            return false;\n        }\n    }\n    step_backward() {\n        if (this.sim_started()) {\n            let t = this.sim_history.pop();\n            if (t === undefined)\n                return false;\n            this.sim_time = t.execution_time;\n            t.old_cells.forEach(([x, y, s]) => {\n                this.current_state[y][x] = s;\n                this.last_updated[y][x] = 0;\n            });\n            this.sim_queue.queue(t);\n            return true;\n        }\n        return false;\n    }\n    find_next_transition(x, y, ignore = []) {\n        let current_cell = this.current_state[y][x];\n        let best_transition = null;\n        for (let rule of this.rules) {\n            if (rule.is_mono) {\n                let r = rule.matches(current_cell);\n                if (r) {\n                    let t = this.sim_time + Math.log(1 / random_1.default.float()) / rule.rate;\n                    if (best_transition !== null && best_transition.execution_time > t)\n                        continue;\n                    best_transition = new Transition_State_1.default(this.sim_time, t);\n                    best_transition.add_old_cell(x, y, current_cell);\n                    best_transition.add_new_cell(x, y, r[0]);\n                }\n            }\n            else {\n                let neighbour_offsets = [];\n                if (this.grid_type == 'square') {\n                    neighbour_offsets = [[-1, 0], [0, -1], [1, 0], [0, 1]];\n                }\n                else {\n                    //TODO: hex offsets\n                }\n                for (let [xd, yd] of neighbour_offsets) {\n                    if (y + yd >= 0 && y + yd < this.current_state.length && x + xd >= 0 && x + xd < this.current_state[y + yd].length) {\n                        if (ignore.some(([xi, yi]) => xi == x + xd && yi == y + yd))\n                            continue;\n                        let other_cell = this.current_state[y + yd][x + xd];\n                        let r = rule.matches(current_cell, other_cell);\n                        if (r) {\n                            let t = this.sim_time + Math.log(1 / random_1.default.float()) / rule.rate;\n                            if (best_transition && best_transition.execution_time > t)\n                                continue;\n                            best_transition = new Transition_State_1.default(this.sim_time, t);\n                            best_transition.add_old_cell(x, y, current_cell);\n                            best_transition.add_old_cell(x + xd, y + yd, other_cell);\n                            best_transition.add_new_cell(x, y, r[0]);\n                            best_transition.add_new_cell(x + xd, y + yd, r[1]);\n                        }\n                        r = rule.matches(other_cell, current_cell);\n                        if (r) {\n                            let t = this.sim_time + Math.log(1 / random_1.default.float()) / rule.rate;\n                            if (best_transition && best_transition.execution_time > t)\n                                continue;\n                            best_transition = new Transition_State_1.default(this.sim_time, t);\n                            best_transition.add_old_cell(x, y, current_cell);\n                            best_transition.add_old_cell(x + xd, y + yd, other_cell);\n                            best_transition.add_new_cell(x, y, r[1]);\n                            best_transition.add_new_cell(x + xd, y + yd, r[0]);\n                        }\n                    }\n                }\n            }\n        }\n        return best_transition;\n    }\n    sim_started() {\n        return this.sim_queue != null;\n    }\n}\nexports.default = Surface_CRN;\nSurface_CRN.parser = { parse_import_files: Parser_1.parse_import_files, parse_code: Parser_1.parse_code };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Colour_Map {\n    constructor(init) {\n        this.colours = new Set();\n        this.example_colours = ['#ffffff', '#000000', '#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#a9a9a9'];\n        this.temp_colours = new Map();\n        if (init)\n            this.colours = init;\n    }\n    find_colour(s) {\n        for (let c of this.colours) {\n            if ([...c.species.values()].some((s1) => s1.includes(s))) {\n                return c;\n            }\n        }\n        let b = this.temp_colours.get(s);\n        return b === undefined ? null : b;\n    }\n    export() {\n        return [...this.colours.values()].map(c => '{' + c.name + '} ' + [...c.species.values()].map(s => s.toString()).join(' ') + ' : (' + c.rgb().join(',') + ')');\n    }\n    new_colour() {\n        let c = this.example_colours.find((a) => {\n            if ([...this.temp_colours.values(), ...this.colours.values()].find((c) => c.hex() === a) !== undefined)\n                return false;\n            return true;\n        });\n        if (c === undefined) {\n            return \"#000000\";\n        }\n        else {\n            return c;\n        }\n    }\n    add(c) {\n        this.colours.add(c);\n    }\n    delete(c) {\n        this.colours.delete(c);\n    }\n    add_temp(s, c) {\n        this.temp_colours.set(s, c);\n    }\n    clear_temp() {\n        this.temp_colours.clear();\n    }\n}\nexports.default = Colour_Map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Transition_State {\n    constructor(update_time, execution_time) {\n        this.old_cells = [];\n        this.new_cells = [];\n        this.new_transitions = null;\n        this.update_time = update_time;\n        this.execution_time = execution_time;\n    }\n    add_old_cell(x, y, old_val) {\n        this.old_cells.push([x, y, old_val]);\n    }\n    add_new_cell(x, y, new_val) {\n        this.new_cells.push([x, y, new_val]);\n    }\n    add_future_transitions(t) {\n        this.new_transitions = t;\n    }\n}\nexports.default = Transition_State;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse_import_files = exports.parse_code = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nconst Surface_CRN_1 = __importDefault(require(\"./Surface_CRN\"));\nfunction parse_rule(line) {\n    if ((line.match(/->/g) || []).length != 1)\n        return false;\n    let rate = 1;\n    line = line.replace(/\\((\\d+(?:\\.\\d+)?)\\)/, (_, x) => { rate = +x; return ''; });\n    let [start, end] = line.split('->').map(a => a.split('+').map(b => new Species_Matcher_1.default(b.trim()))); // Note change how transition rules are formed\n    //TODO: add more conditions (and error messages?)\n    if (start.length != end.length || start.length > 2 || start.length == 0)\n        return false;\n    return new Transition_Rule_1.default({ reactants: start, products: end, rate: rate, is_mono: start.length == 1 });\n}\nfunction parse_option(line) {\n    if ((line.match(/=/g) || []).length != 1)\n        return false;\n    return line.split('=').map(a => a.trim());\n}\nfunction parse_colour(line) {\n    let vars = line.match(/^(?:\\{([^}]+)\\})? *((?: *[^,: ]+,? *?)+) *: *\\((\\d+) *, *(\\d+) *, *(\\d+)\\)$/);\n    if (vars == null)\n        return false;\n    var sp = vars[2].split(/,\\s*|\\s+/).map(a => new Species_Matcher_1.default(a.trim()));\n    return new Colour_1.default({ name: vars[1], species: new Set(sp), red: +vars[3], green: +vars[4], blue: +vars[5] });\n}\nfunction parse_line(line, program) {\n    var rule = parse_rule(line);\n    if (rule !== false) {\n        program.rules.push(rule);\n        return true;\n    }\n    var name_colour = parse_colour(line);\n    if (name_colour !== false) {\n        program.colour_map.add(name_colour);\n        return true;\n    }\n    var option = parse_option(line);\n    if (option !== false) {\n        let [val, key] = option;\n        program.options.set(val, key);\n        return true;\n    }\n    return false;\n}\nfunction parse_init_state(line) {\n    // TODO: add more error checking\n    return line.split(/\\s+|,/);\n}\nfunction parse_code(data) {\n    let init_state_section = false;\n    let program = new Surface_CRN_1.default();\n    for (let line of data) {\n        line = line.trim().replace(/#.*/, \"\");\n        if (line == \"\")\n            continue;\n        if (!init_state_section) {\n            if (line == \"!START_INIT_STATE\") {\n                init_state_section = true;\n                continue;\n            }\n            parse_line(line, program);\n        }\n        else {\n            if (line == \"!END_INIT_STATE\") {\n                init_state_section = false;\n                continue;\n            }\n            let val = parse_init_state(line);\n            program.initial_state.push(val);\n        }\n    }\n    return program;\n}\nexports.parse_code = parse_code;\n// Import project as a list of files\n// TODO: change false to list of warnings\nfunction parse_import_files(input_files) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!input_files) {\n            //show error\n            console.log(\"No input files\");\n            return false;\n        }\n        class Manifest_File {\n            constructor() {\n                this.data = [];\n                this.imported = false;\n            }\n        }\n        let manifest_maps = new Map();\n        ;\n        for (let file of input_files) {\n            var m = new Manifest_File();\n            m.data = (yield file.text()).split(\"\\n\").map(a => a.trim().replace(/#.*/, ''));\n            manifest_maps.set(file.name, m);\n        }\n        for (let [key, m] of manifest_maps) {\n            for (let s of m.data) {\n                if (s.match(/^!INCLUDE /)) {\n                    //TODO: replace includes\n                }\n            }\n        }\n        let lines = [];\n        for (let [_, m] of manifest_maps) {\n            if (!m.imported)\n                lines.push(...m.data);\n        }\n        return parse_code(lines);\n    });\n}\nexports.parse_import_files = parse_import_files;\n"],"sourceRoot":""}