{"version":3,"sources":["../../surface_crn/build_dir/Species_Matcher.js","../../surface_crn/build_dir/Colour.js","../../surface_crn/build_dir/Custom_Regex_Decomposer.js","../../surface_crn/build_dir/Transition_Rule.js","../../surface_crn/build_dir/Colour_Map.js","../../surface_crn/build_dir/Transition_State.js","../../surface_crn/build_dir/Parser.js","components/HeaderComponent.tsx","components/PointClass.tsx","components/GridDisplayComponent.tsx","components/TransitionRulesComponent.tsx","components/ColourMappingComponent.tsx","components/ImportExportComponent.tsx","SurfaceCRNapp.tsx","index.tsx","../../surface_crn/build_dir/Surface_CRN.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Custom_Regex_Decomposer_1","require","Species_Matcher","init","original_string","matched","update_matched","s","includes","match","default","decompose","Species_Matcher_1","Colour","red","green","blue","species","Set","name","hexString","hex2rgb","update_colour","c","assign","rgb","map","a","toString","slice","join","add","m","delete","r","replace","parseInt","xregexp_1","Custom_Regex_Decomposer","brackets","push","pop","length","parse","matches","curly_group","NaN","x","flat","rest","t","matchRecursive","valueNames","isNaN","i","b","split","posts","result","concat","branches","z","RegExp","Transition_Rule","is_mono","reactants","products","decomposed","rate","update","p","filter","every","y","undefined","Colour_1","Colour_Map","colours","cache","Map","example_colours","temp_colours","has","get","values","some","s1","new_colour","add_temp","set","clear","find","hex","Transition_State","update_time","execution_time","old_cells","new_cells","new_transitions","old_val","new_val","parse_import_files","parse_code","Transition_Rule_1","Surface_CRN_1","parse_line","line","program","rule","_","trim","start","end","parse_rule","rules","name_colour","vars","sp","parse_colour","colour_map","option","parse_option","key","val","set_option","parse_init_state","data","init_state_section","initial_state","input_files","Manifest_File","imported","manifest_maps","file","text","lines","HeaderComponent","stopButton","fastBackward","stepBackward","playButton","stepForward","fastForward","Grid","item","container","xs","sm","Typography","variant","className","IconButton","onClick","props","stopPressed","sx","fontSize","fastBackwardPressed","stepBackPressed","playPressed","simPlaying","stepForwardPressed","fastForwardPressed","React","Component","Point","Math","sqrt","origin","GridDisplayComponent","canvas","mouseDown","mousePosition","mouseMoved","state","createData","current_state","offset","selected_cells","sim_time","simulation","ref","elem","addEventListener","scrollZoom","bind","passive","mouseEvents","draw","xcoord","ycoord","column","gridHeight","size","gridWidth","sin","PI","row","floor","rowIsOdd","relY","relX","type","rect","getBoundingClientRect","geometry","setState","hexCoord","subtract","magnitude","preventDefault","prevProps","prevState","model","equals","selectedCells","canvasRender","getContext","CanvasRenderingContext2D","ctx","entries","d","drawCell","count","addExtraDetail","e","zoomRatio","deltaY","zoom","parentNode","width","window","devicePixelRatio","height","style","clearRect","scale","translate","fillStyle","fillRect","textAlign","textBaseline","font","fillText","toFixed","lineWidth","strokeStyle","beginPath","lineTo","cos","closePath","fill","clear_temp","colour","find_colour","coord","stroke","g","TransitionRulesComponent","Card","CardHeader","title","id","Table","TransitionGroup","Collapse","deleteRule","CardActions","Button","addRule","RuleRowComponent","reactant0","reactant1","product0","product1","TableRow","hover","TableCell","TextField","onChange","updateRule","inputProps","inputMode","step","pattern","min","padding","align","newVal","currentTarget","target","classList","contains","ColourMappingComponent","v","refreshColour","deleteColour","addColour","ColourRowComponent","pickerRef","mouseDownInElement","isOpen","showList","handleClickOutside","event","document","handleDownClick","removeEventListener","backgroundColor","fullWidth","margin","label","color","updateColour","updateSpecies","deleteMatcher","addMatcher","add_matcher","delete_matcher","ImportExportComponent","example_selected","FormControl","InputLabel","Select","autoWidth","MenuItem","disabled","import_example","component","multiple","hidden","import_code","export_code","theme","createTheme","palette","mode","primary","main","secondary","SurfaceCRNapp","initial_state_component","transition_state_component","simulator_component","header_component","model_tabs","toolbarInput","Surface_CRN","Array","from","shown_tab","sim_size","pixels_per_node","playing_simulation","editValue","rngSeed","rng_seed","fps","speedup_factor","ThemeProvider","CssBaseline","spacing","stepBackwardPressed","Tabs","onTabSelect","Tab","Box","display","updateSelectedCells","inputRef","changeGeometry","setRNGseed","updateSpeedUp","InputProps","updateFPS","random","seed","endAdornment","InputAdornment","position","copyRNGseed","sim_started","files","getElementById","parser","new_model","update_page","export","blob","Blob","anchor","createElement","download","href","webkitURL","URL","createObjectURL","dataset","downloadurl","click","fetch","headers","then","response","sim_playing","refreshSimState","refreshInitState","sim","start_sim","startSimulation","showSimulation","setPlaying","playSimulation","started","next_frame","setTimeout","step_forward","step_backward","prev_frame","stop_sim","remove_rule","add_rule","out","oldZoom","increase_size","decrease_size","selected","focus","set_cells","n","parseFloat","ReactDOM","render","StrictMode","Colour_Map_1","Transition_State_1","Parser_1","ts_priority_queue_1","random_seedable_1","options","last_updated","sim_queue","sim_history","rule_check_cache","splice","indexOf","blankRule","coords","xS","sort","minX","maxX","unshift","yS","minY","maxY","output","k","MersenneTwister","int","comparator","initial_changes","forEach","find_next_transitions","initialValues","peek","dequeue","time","get_next_transition","run_upto","run_backto","ignore","newT","tr","queue","current_cell","possible_transitions","rs","log","float","add_old_cell","add_new_cell","neighbour_offsets","xd","yd","other_cell"],"mappings":"wIACIA,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAMC,EAA4BR,EAAgBS,EAAQ,MACpDC,E,WACF,WAAYC,GAAM,UACdV,KAAKW,gBAAkB,GACvBX,KAAKY,QAAU,GACfZ,KAAKa,eAAeH,G,kCAExB,SAASI,GACL,OAAOd,KAAKY,QAAQG,SAASD,K,qBAEjC,WACI,OAA+C,OAAxCd,KAAKW,gBAAgBK,MAAM,W,sBAEtC,WACI,OAAOhB,KAAKW,kB,4BAEhB,SAAeG,GACXd,KAAKW,gBAAkBG,EACvBd,KAAKY,QAAUL,EAA0BU,QAAQC,UAAUJ,O,KAGnET,EAAQY,QAAUR,G,qDCzBdV,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAMa,EAAoBpB,EAAgBS,EAAQ,MAC5CY,E,WACF,WAAYV,GAAM,UACdV,KAAKqB,IAAM,EACXrB,KAAKsB,MAAQ,EACbtB,KAAKuB,KAAO,EACZvB,KAAKwB,QAAU,IAAIC,IACnBzB,KAAK0B,KAAO,GACZ1B,KAAK2B,UAAY,GACK,kBAAVjB,IACRA,EAAOU,EAAOQ,QAAQlB,IAE1BV,KAAK6B,cAAcnB,G,6BAGvB,WACI,MAAO,CAACV,KAAKqB,IAAKrB,KAAKsB,MAAOtB,KAAKuB,Q,iBAEvC,WACI,OAAOvB,KAAK2B,Y,2BAEhB,SAAcG,GACV3B,OAAO4B,OAAO/B,KAAM8B,GACpB9B,KAAK2B,UAAY,IAAM3B,KAAKgC,MAAMC,KAAI,SAAAC,GAAC,OAAK,IAAMA,EAAEC,SAAS,KAAKC,OAAO,MAAIC,KAAK,M,yBAEtF,SAAYvB,GAAKd,KAAKwB,QAAQc,IAAI,IAAInB,EAAkBF,QAAQH,M,4BAChE,SAAeyB,GAAKvC,KAAKwB,QAAQgB,OAAOD,M,oBAZxC,WAAiB,OAAO,IAAInB,EAAO,CAAEC,IAAK,IAAKC,MAAO,IAAKC,KAAM,Q,qBAajE,SAAeT,GAEX,IAAI2B,GADJ3B,EAAIA,EAAE4B,QAAQ,KAAM,KACV1B,MAAM,mDAChB,OAAIyB,EACO,CAAEpB,IAAKsB,SAASF,EAAE,GAAI,IAAKnB,MAAOqB,SAASF,EAAE,GAAI,IAAKlB,KAAMoB,SAASF,EAAE,GAAI,KAI3E,CAAEpB,IAAK,IAAKC,MAAO,IAAKC,KAAM,S,KAIjDlB,EAAQY,QAAUG,G,6DC3CdrB,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAMsC,EAAY7C,EAAgBS,EAAQ,MACpCqC,E,0EACF,SAAiBnC,GAEb,IAFmB,EAEfoC,EAAW,GAFI,IAGLpC,GAHK,IAGnB,2BAAoB,KAAXoB,EAAW,QAChB,GAAI,MAAMf,SAASe,GACfgB,EAASC,KAAKjB,QAEb,GAAI,MAAMf,SAASe,KACf,WAAWf,SAAS+B,EAASE,MAAQlB,GACtC,KAAM,uBATC,8BAanB,GAAwB,IAApBgB,EAASG,OACT,KAAM,sBACV,OAAOjD,KAAKkD,MAAMxC,K,mBAEtB,SAAaI,GAAmC,IACxC2B,EADwC,OAAhCU,EAAgC,uDAAtB,EAAGC,EAAmB,uDAALC,IAEvC,GAAU,KAANvC,EACA,MAAO,CAAC,IAEP,GAAI2B,EAAI3B,EAAEE,MAAM,kCACjB,OAAOhB,KAAKkD,MAAMT,EAAE,GAAIU,EAASC,GAAanB,KAAI,SAAAqB,GAAC,MAAI,CAACb,EAAE,GAAKa,EAAGA,MAAIC,OAErE,GAAId,EAAI3B,EAAEE,MAAM,kDACjB,OAAOhB,KAAKkD,MAAMT,EAAE,GAAIU,EAASC,GAAanB,KAAI,SAAAqB,GAAC,OAAIb,EAAE,GAAKa,KAE7D,GAAa,MAATxC,EAAE,GAAY,CACnB,IACI0C,GADAC,EAAIb,EAAU3B,QAAQyC,eAAe5C,EAAG,MAAO,UAAW,IAAK,CAAE6C,WAAY,CAAC,UAAW,OAAQ,QAAS,YACjGvB,MAAM,GAAGH,KAAI,SAAAqB,GAAC,OAAIA,EAAEhD,SAAO+B,KAAK,IAC7C,GAAIuB,MAAMR,GAAc,CACpB,IAAIS,EAAI,EACJC,EAAIL,EAAE,GAAGnD,MAAMU,MAAM,SAAWyC,EAAE,GAAGnD,MAAMyD,MAAM,IAAI9B,KAAI,SAAAQ,GAAC,MAAI,CAACA,MAAMgB,EAAE,GAAGnD,MAAMyD,MAAM,KAAK9B,KAAI,SAAAqB,GAAC,OAAI,EAAKJ,MAAMI,EAAGH,EAASU,QAE/H,OADAA,EAAI,EACGC,EAAE7B,KAAI,SAAAH,GACT,IAAIkC,EAAQ,EAAKd,MAAMM,EAAML,EAASU,KAClCI,EAASD,EAAM/B,KAAI,SAAAqB,GAAC,OAAIxB,EAAEG,KAAI,SAAAQ,GAAC,OAAIA,EAAIa,QAAIC,OAG/C,MAFsB,OAAlBE,EAAE,GAAF,QACAQ,EAASA,EAAOC,OAAOF,IACpBC,KACRV,OAGH,IAAIY,EAAWV,EAAE,GAAGnD,MAAMU,MAAM,SAAWyC,EAAE,GAAGnD,MAAMyD,MAAM,IAAMN,EAAE,GAAGnD,MAAMyD,MAAM,KAAK9B,KAAI,SAAAqB,GAAC,OAAI,EAAKJ,MAAMI,EAAGH,EAASC,MAAcG,OACtI,GAAIH,EAAce,EAASlB,OACvB,KAAM,sBACV,IAAIe,EAAQhE,KAAKkD,MAAMM,EAAML,EAASC,GAClCa,EAASD,EAAM/B,KAAI,SAAAqB,GAAC,OAAI,EAAKJ,MAAMiB,EAASf,GAAcD,EAASC,GAAeE,KAGtF,MAFsB,OAAlBG,EAAE,GAAF,QACAQ,EAASA,EAAOC,OAAOF,IACpBC,EAGV,GAAa,MAATnD,EAAE,GAAY,CAEfqD,GADAV,EAAIb,EAAU3B,QAAQyC,eAAe5C,EAAG,MAAO,UAAW,IAAK,CAAE6C,WAAY,CAAC,UAAW,OAAQ,QAAS,YAC7F,GAAGrD,MAAMU,MAAM,SAAWyC,EAAE,GAAGnD,MAAMyD,MAAM,IAAMN,EAAE,GAAGnD,MAAMyD,MAAM,KAAK9B,KAAI,SAAAqB,GAAC,OAAI,EAAKJ,MAAMI,EAAGH,EAASC,MAAcG,OAGtI,MAFsB,OAAlBE,EAAE,GAAF,OACAU,EAASpB,KAAK,IACX/C,KAAKkD,MAAMO,EAAErB,MAAM,GAAGH,KAAI,SAAAqB,GAAC,OAAIA,EAAEhD,SAAO+B,KAAK,IAAKc,EAASC,GAAanB,KAAI,SAAAqB,GAAC,OAAIa,EAASlC,KAAI,SAAAmC,GAAC,OAAIA,EAAId,QAAIC,OAEjH,GAAa,MAATzC,EAAE,GAAY,CAEnB,IAAI2C,EACAU,GADAV,EAAIb,EAAU3B,QAAQyC,eAAe5C,EAAG,MAAO,UAAW,IAAK,CAAE6C,WAAY,CAAC,UAAW,OAAQ,QAAS,YAC7F,GAAGrD,MAAMU,MAAM,SAAWyC,EAAE,GAAGnD,MAAMyD,MAAM,IAAMN,EAAE,GAAGnD,MAAMyD,MAAM,KAAK9B,KAAI,SAAAqB,GAAC,OAAI,EAAKJ,MAAMI,EAAGH,EAASC,MAAcG,OAGtI,MAFsB,OAAlBE,EAAE,GAAF,OACAU,EAASpB,KAAK,IACX/C,KAAKkD,MAAMO,EAAErB,MAAM,GAAGH,KAAI,SAAAqB,GAAC,OAAIA,EAAEhD,SAAO+B,KAAK,IAAKc,EAAU,EAAGC,GAAanB,KAAI,SAAAqB,GAAC,OAAIa,EAASlC,KAAI,SAAAmC,GAAC,OAAIA,EAAId,EAAEZ,QAAQ,IAAI2B,OAAO,OAASlB,EAAU,SAAWA,EAAU,IAAK,KAAMiB,SAAKb,OAG/L,KAAM,qBAAuBzC,EAAE,O,KAI3CT,EAAQY,QAAU4B,G,qDChFd9C,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAMC,EAA4BR,EAAgBS,EAAQ,MACpD8D,E,WACF,WAAY5D,GAAM,UACdV,KAAKuE,SAAU,EACfvE,KAAKwE,UAAY,GACjBxE,KAAKyE,SAAW,GAChBzE,KAAK0E,WAAa,GAClB1E,KAAK2E,KAAO,EACZ3E,KAAK4E,OAAOlE,G,kCAEhB,WACI,MAAO,IAAMV,KAAK2E,KAAKxC,WAAa,KAAO,CAACnC,KAAKwE,UAAWxE,KAAKyE,UAAUxC,KAAI,SAAAqB,GAAC,OAAIA,EAAErB,KAAI,SAAAC,GAAC,OAAIA,EAAEC,cAAYE,KAAK,UAAQA,KAAK,U,oBAEnI,SAAOwC,GAGH,GADA1E,OAAO4B,OAAO/B,KAAM6E,GAChB7E,KAAKwE,UAAUvB,SAAWjD,KAAKyE,SAASxB,OACxC,KAAM,8CACVjD,KAAKuE,QAAUvE,KAAKwE,UAAUvB,OAAS,GAAKjD,KAAKyE,SAASxB,OAAS,EACnEjD,KAAK0E,WAAanE,EAA0BU,QAAQC,UAAUlB,KAAKwE,UAAUnC,KAAK,OAAS,OAASrC,KAAKyE,SAASpC,KAAK,QAAQJ,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,MAAM,iBAAee,QAAO,SAAA5C,GAAC,OAAIA,EAAE6C,OAAM,SAAAzB,GAAC,MAAU,KAANA,U,qBAK5L,SAAQA,EAAG0B,GACP,OAAIhF,KAAKuE,gBAAmBU,IAAND,GACX,GACPhF,KAAKuE,QACEvE,KAAK0E,WAAWI,QAAO,SAAA5C,GAAC,OAAIA,EAAE,KAAOoB,KAAGrB,KAAI,SAAAC,GAAC,MAAI,CAACA,EAAE,OAGpDlC,KAAK0E,WAAWI,QAAO,SAAA5C,GAAC,OAAIA,EAAE,KAAOoB,GAAKpB,EAAE,KAAO8C,KAAG/C,KAAI,SAAAC,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE,U,wBAVvF,WACI,OAAO,IAAIoC,EAAgB,CAAEC,SAAS,EAAMC,UAAW,CAAC,IAAKC,SAAU,CAAC,U,KAahFpE,EAAQY,QAAUqD,G,sECvCdvE,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAM4E,EAAWnF,EAAgBS,EAAQ,MACnC2E,E,WACF,WAAYzE,GAAM,UACdV,KAAKoF,QAAU,IAAI3D,IACnBzB,KAAKqF,MAAQ,IAAIC,IACjBtF,KAAKuF,gBAAkB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAAWtD,KAAI,SAAAH,GAAC,OAAI,IAAIoD,EAASjE,QAAQa,MACxS9B,KAAKwF,aAAe,IAAIF,IACpB5E,IACAV,KAAKoF,QAAU1E,G,gCAEvB,SAAOoB,GAAG,WACN,SAAU,EAAIA,EAAEsD,SAASN,QAAO,SAAA5C,GAAC,OAAK,EAAKkD,QAAQK,IAAIvD,QAAO,EAAIlC,KAAKoF,SAASN,QAAO,SAAA5C,GAAC,OAAKJ,EAAEsD,QAAQK,IAAIvD,S,yBAE/G,SAAYpB,GACR,IAAI2B,EAAIzC,KAAKqF,MAAMK,IAAI5E,GACvB,QAAUmE,IAANxC,EAAiB,WACHzC,KAAKoF,SADF,IACjB,2BAA4B,KAAnBtD,EAAmB,QACxB,GAAI,EAAIA,EAAEN,QAAQmE,UAAUC,MAAK,SAACC,GAAD,OAAQA,EAAG9E,SAASD,MAAK,CACtD2B,EAAIX,EACJ,QAJS,mCAOPmD,IAANxC,QAEUwC,KADVxC,EAAIzC,KAAKwF,aAAaE,IAAI5E,WAGZmE,KADVxC,EAAIzC,KAAK8F,gBAELrD,EAAI,IAAIyC,EAASjE,QAAQ,YAC7BjB,KAAK+F,SAASjF,EAAG2B,GACjBzC,KAAKqF,MAAMW,IAAIlF,EAAG2B,IAI9B,OAAOA,I,oBAEX,WACI,OAAO,EAAIzC,KAAKoF,QAAQO,UAAU1D,KAAI,SAAAH,GAAC,MAAI,IAAMA,EAAEJ,KAAO,KAAO,EAAII,EAAEN,QAAQmE,UAAU1D,KAAI,SAAAnB,GAAC,OAAIA,EAAEqB,cAAYE,KAAK,KAAO,OAASP,EAAEE,MAAMK,KAAK,KAAO,S,wBAE7J,WAAa,WACTrC,KAAKqF,MAAMY,QACX,IAAInE,EAAI9B,KAAKuF,gBAAgBW,MAAK,SAAChE,GAC/B,YAAmG+C,IAA/F,YAAI,EAAKO,aAAaG,UAAtB,EAAmC,EAAKP,QAAQO,WAAUO,MAAK,SAACpE,GAAD,OAAOA,EAAEqE,QAAUjE,EAAEiE,YAI5F,YAAUlB,IAANnD,EACO,IAAIoD,EAASjE,QAAQ,WAGrBa,I,iBAGf,SAAIA,GACA9B,KAAKqF,MAAMY,QACXjG,KAAKoF,QAAQ9C,IAAIR,K,oBAErB,SAAOA,GACH9B,KAAKqF,MAAMY,QACXjG,KAAKoF,QAAQ5C,OAAOV,K,sBAExB,SAAShB,EAAGgB,GACR9B,KAAKqF,MAAMY,QACXjG,KAAKwF,aAAaQ,IAAIlF,EAAGgB,K,wBAE7B,WACI9B,KAAKqF,MAAMY,QACXjG,KAAKwF,aAAaS,Y,KAG1B5F,EAAQY,QAAUkE,G,qDCzElBhF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,I,IAChD8F,E,WACF,WAAYC,EAAaC,GAAgB,UACrCtG,KAAKuG,UAAY,GACjBvG,KAAKwG,UAAY,GACjBxG,KAAKyG,gBAAkB,KACvBzG,KAAKqG,YAAcA,EACnBrG,KAAKsG,eAAiBA,E,sCAE1B,SAAahD,EAAG0B,EAAG0B,GACf1G,KAAKuG,UAAUxD,KAAK,CAACO,EAAG0B,EAAG0B,M,0BAE/B,SAAapD,EAAG0B,EAAG2B,GACf3G,KAAKwG,UAAUzD,KAAK,CAACO,EAAG0B,EAAG2B,M,oCAE/B,SAAuBlD,GACnBzD,KAAKyG,gBAAkBhD,M,KAG/BpD,EAAQY,QAAUmF,G,yFCnBdrG,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuG,mBAAqBvG,EAAQwG,gBAAa,EAClD,IAAM1F,EAAoBpB,EAAgBS,EAAQ,MAC5CsG,EAAoB/G,EAAgBS,EAAQ,MAC5C0E,EAAWnF,EAAgBS,EAAQ,MACnCuG,EAAgBhH,EAAgBS,EAAQ,KAwB9C,SAASwG,EAAWC,EAAMC,GACtB,IAAIC,EAxBR,SAAoBF,GAChB,GAAwC,IAAnCA,EAAKjG,MAAM,QAAU,IAAIiC,OAC1B,OAAO,EACX,IAAI0B,EAAO,EAEX,GADAsC,EAAOA,EAAKvE,QAAQ,uBAAuB,SAAC0E,EAAG9D,GAAmB,OAAXqB,GAAQrB,EAAU,OACjDS,MAAM,MAAM9B,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,MAAM,KAAK9B,KAAI,SAAA6B,GAAC,OAAIA,EAAEuD,aAArE,SAAKC,EAAL,KAAYC,EAAZ,KAEA,QAAID,EAAMrE,QAAUsE,EAAItE,QAAUqE,EAAMrE,OAAS,GAAqB,GAAhBqE,EAAMrE,SAErD,IAAI6D,EAAkB7F,QAAQ,CAAEuD,UAAW8C,EAAO7C,SAAU8C,EAAK5C,KAAMA,EAAMJ,QAAyB,GAAhB+C,EAAMrE,SAexFuE,CAAWP,GACtB,IAAa,IAATE,EAEA,OADAD,EAAQO,MAAM1E,KAAKoE,IACZ,EAEX,IAAIO,EAbR,SAAsBT,GAClB,IAAIU,EAAOV,EAAKjG,MAAM,+EACtB,GAAY,MAAR2G,EACA,OAAO,EACX,IAAIC,EAAKD,EAAK,GAAG5D,MAAM,YAAY9B,KAAI,SAAAC,GAAC,OAAI,IAAIf,EAAkBF,QAAQiB,EAAEmF,WAC5E,OAAO,IAAInC,EAASjE,QAAQ,CAAES,KAAMiG,EAAK,IAAMA,EAAK,GAAInG,QAAS,IAAIC,IAAImG,GAAKvG,KAAMsG,EAAK,GAAIrG,OAAQqG,EAAK,GAAIpG,MAAOoG,EAAK,KAQxGE,CAAaZ,GAC/B,IAAoB,IAAhBS,EAEA,OADAR,EAAQY,WAAWxF,IAAIoF,IAChB,EAEX,IAAIK,EAvBR,SAAsBd,GAClB,OAAuC,IAAlCA,EAAKjG,MAAM,OAAS,IAAIiC,QAEtBgE,EAAKlD,MAAM,KAAK9B,KAAI,SAAAC,GAAC,OAAIA,EAAEmF,UAoBrBW,CAAaf,GAC1B,IAAe,IAAXc,EAAkB,CAClB,QAAiBA,EAAjB,GAAKE,EAAL,KAAUC,EAAV,KAEA,OADAhB,EAAQiB,WAAWF,EAAKC,IACjB,EAEX,OAAO,EAEX,SAASE,EAAiBnB,GAEtB,OAAOA,EAAKlD,MAAM,SAEtB,SAAS8C,EAAWwB,GAChB,IADsB,EAClBC,GAAqB,EACrBpB,EAAU,IAAIH,EAAc9F,QAFV,IAGLoH,GAHK,IAGtB,2BAAuB,KAAdpB,EAAc,QAEnB,GAAY,KADZA,EAAOA,EAAKI,OAAO3E,QAAQ,MAAO,KAGlC,GAAK4F,EAOA,CACD,GAAY,mBAARrB,EAA2B,CAC3BqB,GAAqB,EACrB,SAEJ,IAAIJ,EAAME,EAAiBnB,GAC3BC,EAAQqB,cAAcxF,KAAKmF,OAbN,CACrB,GAAY,qBAARjB,EAA6B,CAC7BqB,GAAqB,EACrB,SAEJtB,EAAWC,EAAMC,KAZH,8BAuBtB,OAAOA,E,gCAKX,WAAkCsB,GAAlC,wGACSA,EADT,0CAGe,GAHf,OAKUC,EACF,aAAc,UACVzI,KAAKqI,KAAO,GACZrI,KAAK0I,UAAW,GAGpBC,EAAgB,IAAIrD,IAX5B,IAaqBkD,GAbrB,gEAaaI,EAbb,QAcYrG,EAAI,IAAIkG,EAdpB,UAewBG,EAAKC,OAf7B,QAeQtG,EAAE8F,KAfV,OAeqCtE,MAAM,MAAM9B,KAAI,SAAAC,GAAC,OAAIA,EAAEmF,OAAO3E,QAAQ,MAAO,OAC1EiG,EAAc3C,IAAI4C,EAAKlH,KAAMa,GAhBrC,mJAkByBoG,GAlBzB,IAkBI,2BAAoC,qBAArBpG,EAAqB,SAClBA,EAAE8F,MADgB,IAChC,2BAAsB,QACZrH,MAAM,cAFgB,gCAlBxC,8BAyBQ8H,EAAQ,GAzBhB,IA0BuBH,GA1BvB,IA0BI,2BAAkC,qBAArBpG,EAAqB,MACvBmG,UACHI,EAAM/F,KAAN,MAAA+F,EAAK,EAASvG,EAAE8F,OA5B5B,uDA8BWxB,EAAWiC,IA9BtB,iE,sBAHAzI,EAAQwG,WAAaA,EAmCrBxG,EAAQuG,mB,6YC7FamC,E,4MACpBC,WAA8B,K,EAC9BC,aAAgC,K,EAChCC,aAAgC,K,EAChCC,WAA8B,K,EAC9BC,YAA+B,K,EAC/BC,YAA+B,K,4CAE/B,WACC,OAAO,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,GAAI,GAAzB,UACN,cAACH,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,aAAnC,qCAID,eAACP,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,UACC,eAACI,EAAA,EAAD,CAAYC,QAAS/J,KAAKgK,MAAMC,YAAhC,cAA8C,cAAC,IAAD,CAAUC,GAAI,CAACC,SAAW,MAAxE,OACA,eAACL,EAAA,EAAD,CAAYC,QAAS/J,KAAKgK,MAAMI,oBAAhC,cAAsD,cAAC,IAAD,CAAYF,GAAI,CAACC,SAAW,MAAlF,OACA,eAACL,EAAA,EAAD,CAAYC,QAAS/J,KAAKgK,MAAMK,gBAAhC,cAAkD,cAAC,IAAD,CAAgBH,GAAI,CAACC,SAAW,MAAlF,OACA,cAACL,EAAA,EAAD,CAAYC,QAAS/J,KAAKgK,MAAMM,YAAhC,SACEtK,KAAKgK,MAAMO,WACT,cAAC,IAAD,CAAWL,GAAI,CAACC,SAAW,MAC3B,cAAC,IAAD,CAAeD,GAAI,CAACC,SAAW,QAGnC,eAACL,EAAA,EAAD,CAAYC,QAAS/J,KAAKgK,MAAMQ,mBAAhC,cAAqD,cAAC,IAAD,CAAiBN,GAAI,CAACC,SAAW,MAAtF,OACA,eAACL,EAAA,EAAD,CAAYC,QAAS/J,KAAKgK,MAAMS,mBAAhC,cAAqD,cAAC,IAAD,CAAaP,GAAI,CAACC,SAAW,MAAlF,iB,GA1ByCO,IAAMC,W,gBCtB7CC,E,WAML,aAA6C,IAAjCtH,EAAgC,uDAAnB,EAAG0B,EAAgB,uDAAH,EAAG,yBAL5C1B,OAK4C,OAJ5C0B,OAI4C,EAC3ChF,KAAKsD,EAAIA,EACTtD,KAAKgF,EAAIA,E,uCAGV,SAAIH,GAAa,OAAO,IAAI+F,EAAM5K,KAAKsD,EAAIuB,EAAEvB,EAAGtD,KAAKgF,EAAIH,EAAEG,K,sBAC3D,SAASH,GAAa,OAAO,IAAI+F,EAAM5K,KAAKsD,EAAIuB,EAAEvB,EAAGtD,KAAKgF,EAAIH,EAAEG,K,sBAChE,SAASH,GAAa,OAAO,IAAI+F,EAAM5K,KAAKsD,EAAIuB,EAAEvB,EAAGtD,KAAKgF,EAAIH,EAAEG,K,mBAChE,SAAMlE,GAAc,OAAO,IAAI8J,EAAM5K,KAAKsD,EAAIxC,EAAGd,KAAKgF,EAAIlE,K,oBAC1D,SAAO+D,GAAa,OAAO7E,KAAKsD,IAAMuB,EAAEvB,GAAKtD,KAAKgF,IAAMH,EAAEG,I,uBAE1D,WAAc,OAAO6F,KAAKC,KAAK,SAAA9K,KAAKsD,EAAG,GAAR,SAAYtD,KAAKgF,EAAG,Q,KAjB9C4F,EAIEG,OAAiB,IAAIH,EAAM,EAAE,GAgBtBA,QC0TAI,E,kDAnTd,WAAYhB,GAA2B,IAAD,8BACrC,cAAMA,IANPiB,OAAoC,KAKE,EAJtCC,WAAsB,EAIgB,EAHtCC,cAA+B,KAGO,EAFtCC,YAAuB,EAItB,EAAKC,MAAQ,CACZhD,KAAO,EAAKiD,WAAWtB,EAAMuB,eAC7BC,OAASZ,EAAMG,OACfU,eAAiB,GACjBC,SAAW1B,EAAM2B,WAAa,EAAI,MANE,E,0CAUtC,WAAU,IAAD,OACR,OAAO,wBAAQC,IAAK,SAAAC,GAAI,OAAI,EAAKZ,OAASY,O,+BAG3C,WAEC7L,KAAKiL,OAAQa,iBAAiB,QAAS9L,KAAK+L,WAAWC,KAAKhM,MAAO,CAACiM,SAAU,IAC9EjM,KAAKiL,OAAQa,iBAAiB,YAAa9L,KAAKkM,YAAYF,KAAKhM,OACjEA,KAAKiL,OAAQa,iBAAiB,UAAW9L,KAAKkM,YAAYF,KAAKhM,OAC/DA,KAAKiL,OAAQa,iBAAiB,YAAa9L,KAAKkM,YAAYF,KAAKhM,OACjEA,KAAKiL,OAAQa,iBAAiB,WAAY9L,KAAKkM,YAAYF,KAAKhM,OAChEA,KAAKiL,OAAQa,iBAAiB,aAAc9L,KAAKkM,YAAYF,KAAKhM,OAClEA,KAAKiL,OAAQa,iBAAiB,aAAc9L,KAAKkM,YAAYF,KAAKhM,OAClEA,KAAKmM,S,sBAGN,SAASC,EAAiBC,GACzB,IAOIC,EAPAC,EAAa,MAAavM,KAAKgK,MAAMwC,KACrCC,EAAYzM,KAAKgK,MAAMwC,KAAO3B,KAAK6B,IAAI,EAAI7B,KAAK8B,GAAG,GAAG,EAAE,IACxD7K,EAAI,KAAa9B,KAAKgK,MAAMwC,KAC5BjK,EAAIT,GAAG2K,EAAU,GAGjBG,EAAM/B,KAAKgC,OAAOR,EAAOvK,EAAE,GAAKyK,GAGhCO,EAAyB,KAAP,EAANF,GAIZG,EAAQV,EAASvK,EAAE,EAAM8K,EAAML,EAC/BS,EAAOZ,GAJXE,EAASzB,KAAKgC,MAAMT,EAASK,GAAaK,EAAW,GAAM,KAI7BL,GAAcK,EAAWL,EAAU,EAAI,GAUrE,OAPIM,GAASxK,EAAIyK,EAAQlL,GACxB8K,IACKE,GAAUR,KACLS,EAAQxK,EAAIyK,EAAQlL,IAC9B8K,IACIE,GAAUR,KAER,CAACA,EAAQM,K,yBAGjB,SAAYrK,GACX,OAAQA,EAAE0K,MACT,IAAK,YACJjN,KAAKkL,WAAY,EACjBlL,KAAKmL,cAAgB,IAAIP,EAAMrI,EAAEe,EAAGf,EAAEyC,GACtC,MACD,IAAK,aACL,IAAK,aACL,IAAK,UACJ,GAAIhF,KAAKkL,YAAclL,KAAKoL,WAAY,CACvC,IAAM8B,EAAOlN,KAAKiL,OAAQkC,wBACpBf,EAAS7J,EAAEe,EAAItD,KAAKqL,MAAMG,OAAOlI,EAAI4J,EAAK5J,EAC1C+I,EAAS9J,EAAEyC,EAAIhF,KAAKqL,MAAMG,OAAOxG,EAAIkI,EAAKlI,EAChD,GAA4B,WAAxBhF,KAAKgK,MAAMoD,SACdpN,KAAKqN,SAAS,CAAC5B,eAAiB,CAAC,IAAIb,EAAMC,KAAKgC,MAAMT,EAAOpM,KAAKgK,MAAMwC,MAAO3B,KAAKgC,MAAMR,EAAOrM,KAAKgK,MAAMwC,eACtG,GAA4B,QAAxBxM,KAAKgK,MAAMoD,SAAoB,CACzC,MAAoBpN,KAAKsN,SAASlB,EAAQC,GAA1C,mBAAKC,EAAL,KAAaM,EAAb,KACA5M,KAAKqN,SAAS,CAAC5B,eAAiB,CAAC,IAAIb,EAAMC,KAAKgC,MAAMP,GAASzB,KAAKgC,MAAMD,QAG5E5M,KAAKkL,WAAY,EACjBlL,KAAKoL,YAAa,EAClBpL,KAAKmL,cAAgB,KACrB,MACD,IAAK,YACJ,GAAInL,KAAKkL,UAAW,CACnB,IAAIM,EAASxL,KAAKmL,cAAeoC,SAAS,IAAI3C,EAAMrI,EAAEe,EAAGf,EAAEyC,KAEvDhF,KAAKoL,YAAcI,EAAOgC,YAAc,KAC3CxN,KAAKmL,cAAgB,IAAIP,EAAMrI,EAAEe,EAAGf,EAAEyC,GACtChF,KAAKoL,YAAa,EAClBpL,KAAKqN,SAAS,CAAC7B,OAASxL,KAAKqL,MAAMG,OAAO+B,SAAS/B,OAmBvD,OADAjJ,EAAEkL,kBACK,I,gCAGR,SAAmBC,EAA8BC,GAChD,GAAID,EAAUE,QAAU5N,KAAKgK,MAAM4D,OAChCF,EAAUN,WAAapN,KAAKgK,MAAMoD,WACjCO,EAAUnC,OAAOqC,OAAO7N,KAAKqL,MAAMG,SACpCkC,EAAUlB,OAASxM,KAAKgK,MAAMwC,MACN,OAAvBmB,EAAUjC,UAAqBiC,EAAUjC,SAAW,GAA6B,IAAxB1L,KAAKqL,MAAMK,SACvE1L,KAAKmM,YAQN,GAJIuB,EAAUnC,gBAAkBvL,KAAKgK,MAAMuB,eAC1CvL,KAAKqN,SAAS,CAAChF,KAAOrI,KAAKsL,WAAWtL,KAAKgK,MAAMuB,iBAG9CoC,IAAc3N,KAAKqL,MAAO,CAC7B,GAAIsC,EAAUlC,iBAAmBzL,KAAKqL,MAAMI,eAAgB,CAC3D,IAD2D,EACvDvD,EAAsBlI,KAAKqL,MAAMI,eAAexI,OAAS,EAAI,GAAK,KADX,cAE7CjD,KAAKqL,MAAMI,gBAFkC,IAE3D,2BAAyC,CAAC,IAAD,IAAhC5H,EAAgC,QACpCpB,IAAK,UAAAzC,KAAKqL,MAAMhD,YAAX,mBAAkBxE,EAAEmB,UAApB,eAAyBnB,EAAEP,KAAM,CAAC,KAAK,GACpC,OAAR4E,IAAcA,EAAMzF,GACpByF,IAAQzF,IAAGyF,EAAM,KALqC,8BAO3DlI,KAAKgK,MAAM8D,cAAc9N,KAAKqL,MAAMI,eAAgBvD,GAGrD,IAAI6F,EAAe/N,KAAKiL,OAAQ+C,WAAW,MAC3C,GAAqB,OAAjBD,KAA2BA,aAAwBE,0BAA2B,OAClF,IAAMC,EAAiCH,EACvC,GAAIJ,EAAUtF,OAASrI,KAAKqL,MAAMhD,KAAM,CACvC,IADuC,gBAElBrI,KAAKqL,MAAMhD,KAAK8F,WAFE,IAEvC,2BAAgD,CAAC,IAAD,2BAAtCnJ,EAAsC,KAAnC4H,EAAmC,mBAC1BA,EAAIuB,WADsB,IAC/C,2BAAoC,CAAC,IAAD,6BAA1B7K,EAA0B,KAAvB4E,EAAuB,KAC/BkG,EAAC,UAAGT,EAAUtF,YAAb,iBAAG,EAAiBrD,UAApB,aAAG,EAAsB1B,QACpB2B,IAANmJ,GAAmBA,EAAE,KAAOlG,EAAI,IAAMkG,EAAE,GAAGjI,QAAU+B,EAAI,GAAG/B,OAC/DnG,KAAKqO,SAASH,EAAK5K,EAAG0B,EAAGkD,IAAQoG,GAJY,gCAFT,+BAWxCtO,KAAKuO,eAAeL,EAAKP,M,wBAI3B,SAAWa,GAEV,IAAIC,EAAY,EACZD,EAAEE,OAAS,EACdD,EAAYzO,KAAKgK,MAAM2E,MAAK,GAClBH,EAAEE,OAAS,IACrBD,EAAYzO,KAAKgK,MAAM2E,MAAK,IAE7BH,EAAEf,iBACF,IAAMP,EAAOlN,KAAKiL,OAAQkC,wBACpB7J,GAAKtD,KAAKqL,MAAMG,OAAOlI,EAAIkL,EAAElL,EAAI4J,EAAK5J,GAAKmL,EAAYD,EAAElL,EAAI4J,EAAK5J,EAClE0B,GAAKhF,KAAKqL,MAAMG,OAAOxG,EAAIwJ,EAAExJ,EAAIkI,EAAKlI,GAAKyJ,EAAYD,EAAExJ,EAAIkI,EAAKlI,EACxEhF,KAAKqN,SAAS,CAAC7B,OAAS,IAAIZ,EAAMtH,EAAG0B,O,kBAGtC,WACC,GAAoB,OAAhBhF,KAAKiL,OAAT,CACA,IAAMiC,EAAQlN,KAAKiL,OAAO2D,WAAwBzB,wBAClDnN,KAAKiL,OAAO4D,MAAQhE,KAAKgC,MAAMK,EAAK2B,MAAQC,OAAOC,kBACnD/O,KAAKiL,OAAO+D,OAASnE,KAAKgC,MAAMK,EAAK8B,OAASF,OAAOC,kBACrD/O,KAAKiL,OAAOgE,MAAMJ,MAAQhE,KAAKgC,MAAMK,EAAK2B,OAAS,KACnD7O,KAAKiL,OAAOgE,MAAMD,OAASnE,KAAKgC,MAAMK,EAAK8B,QAAU,KACrD,IAAMjB,EAAe/N,KAAKiL,OAAO+C,WAAW,MAC5C,GAAqB,OAAjBD,GAA2BA,aAAwBE,yBAAvD,CACA,IAAMC,EAAiCH,EACvCG,EAAIgB,UAAU,EAAE,EAAGhB,EAAIjD,OAAO4D,MAAOX,EAAIjD,OAAO+D,QAChDd,EAAIiB,MAAML,OAAOC,iBAAkBD,OAAOC,kBAC1Cb,EAAIkB,UAAUpP,KAAKqL,MAAMG,OAAOlI,EAAGtD,KAAKqL,MAAMG,OAAOxG,GAErD,IAdM,EAcFqD,EAAOrI,KAAKsL,WAAWtL,KAAKgK,MAAMuB,eAdhC,cAeelD,EAAK8F,WAfpB,IAeN,2BAAqC,CAAC,IAAD,2BAA3BnJ,EAA2B,KAAxB4H,EAAwB,mBACfA,EAAIuB,WADW,IACpC,2BAAoC,CAAC,IAAD,yBAA1B7K,EAA0B,KAAvB4E,EAAuB,KACnClI,KAAKqO,SAASH,EAAK5K,EAAG0B,EAAGkD,IAFU,gCAf/B,8BAoBNlI,KAAKuO,eAAeL,O,4BAGrB,SAAeA,EAAgCP,GAE9C,GAA4B,OAAxB3N,KAAKqL,MAAMK,SAAmB,CACjCwC,EAAImB,UAAY,UAChB,IAAIjD,EAAS8B,EAAIjD,OAAO4D,MAAMC,OAAOC,iBAAmB,GAAK/O,KAAKqL,MAAMG,OAAOlI,EAC3E+I,EAAS6B,EAAIjD,OAAO+D,OAAOF,OAAOC,iBAAmB,GAAK/O,KAAKqL,MAAMG,OAAOxG,EAChFkJ,EAAIoB,SAASlD,EAAQC,EAAQ,GAAI,IAEjC6B,EAAImB,UAAY,UAChBnB,EAAIqB,UAAY,OAChBrB,EAAIsB,aAAe,SACnBtB,EAAIuB,KAAO,aACXvB,EAAIwB,SAAS,MAAM1P,KAAKqL,MAAMK,SAASiE,QAAQ,GAAIvD,EAAS,EAAGC,EAAS,GAAI,IAE7E,cAAc,CAACsB,EAAW3N,KAAKqL,OAA/B,eAAuC,CAAlC,IAAIjH,EAAC,KACT,QAAUa,IAANb,EAAiB,CAAC,IAAD,gBACNA,EAAEqH,gBADI,IACpB,2BAAgC,CAAC,IAKV,IALd5G,EAAuB,QAI/B,GAHAqJ,EAAI0B,UAAY,EAChB1B,EAAI2B,YAAc,sBAClB3B,EAAImB,UAAYnB,EAAI2B,YACQ,WAAxB7P,KAAKgK,MAAMoD,SACd,GAAIhJ,IAAMuJ,EACT3N,KAAKqO,SAASH,EAAKrJ,EAAEvB,EAAGuB,EAAEG,EAA1B,UAA6BhF,KAAKqL,MAAMhD,YAAxC,iBAA6B,EAAkBxD,EAAEG,UAAjD,aAA6B,EAAyBH,EAAEvB,SAExD4K,EAAIoB,SAASzK,EAAEvB,EAAEtD,KAAKgK,MAAMwC,KAAM3H,EAAEG,EAAEhF,KAAKgK,MAAMwC,KAAMxM,KAAKgK,MAAMwC,KAAMxM,KAAKgK,MAAMwC,WAE9E,GAA4B,QAAxBxM,KAAKgK,MAAMoD,SACrB,GAAIhJ,IAAMuJ,EAAW,CAAC,IAAD,IACpB3N,KAAKqO,SAASH,EAAKrJ,EAAEvB,EAAGuB,EAAEG,EAA1B,UAA6BhF,KAAKqL,MAAMhD,YAAxC,iBAA6B,EAAkBxD,EAAEG,UAAjD,aAA6B,EAAyBH,EAAEvB,QAClD,CACN,IAAI8I,GAAUvH,EAAEvB,GAAS,EAAJuB,EAAEG,GAAK,EAAI,IAAKhF,KAAKgK,MAAMwC,KAAK3B,KAAK6B,IAAI,EAAI7B,KAAK8B,GAAG,GAAG,EAAE,IAC3EN,GAAUxH,EAAEG,EAAI,IAAKhF,KAAKgK,MAAMwC,KAAK,IAAK,EAAE,IAChD0B,EAAI4B,YACJ,IAAK,IAAIjM,EAAI,EAAGA,EAAI,EAAGA,IACtBqK,EAAI6B,OAAO3D,EAASpM,KAAKgK,MAAMwC,KAAO3B,KAAK6B,IAAI,EAAI7B,KAAK8B,GAAK,EAAI9I,GAAG,IAAMwI,EAASrM,KAAKgK,MAAMwC,KAAO3B,KAAKmF,IAAI,EAAInF,KAAK8B,GAAK,EAAI9I,GAAG,KAEpIqK,EAAI+B,YACJ/B,EAAIgC,SAtBa,mC,wBA8BvB,SAAW3E,GACVvL,KAAKgK,MAAM4D,MAAM9F,WAAWqI,aAC5B,IAFsC,EAElC9H,EAA8B,GAFI,cAGjBkD,EAAc4C,WAHG,IAGtC,2BAA8C,CAAC,IAAD,yBAApCnJ,EAAoC,KAAjC4H,EAAiC,KAC7CvE,EAAKrD,GAAK,GADmC,oBAEvB4H,EAAIuB,WAFmB,IAE7C,2BAAqC,CAAC,IAAD,yBAA3B7K,EAA2B,KAAxBuI,EAAwB,KAChCuE,EAASpQ,KAAKgK,MAAM4D,MAAM9F,WAAWuI,YAAYxE,GACvC,MAAVuE,IACHA,EAASpQ,KAAKgK,MAAM4D,MAAM9F,WAAWhC,aACrC9F,KAAKgK,MAAM4D,MAAM9F,WAAW/B,SAAS8F,EAAMuE,IAE5C/H,EAAKrD,GAAG1B,GAAK,CAACuI,EAAMuE,IARwB,gCAHR,8BActC,OAAO/H,I,wBAGR,SAAWkD,GACV,IAAIlD,EAAOrI,KAAKsL,WAAWC,GAC3BvL,KAAKqN,SAAS,CAAChF,KAAOA,M,sBAGvB,SAAS6F,EAAgC5K,EAAY0B,EAAYkD,GAChE,IAAIoI,EASJ,IAPCA,EAD2B,WAAxBtQ,KAAKgK,MAAMoD,SACN,IAAIxC,GAAOtH,EAAE,IAAKtD,KAAKgK,MAAMwC,MAAOxH,EAAE,IAAKhF,KAAKgK,MAAMwC,MAEtD,IAAI5B,GACVtH,GAAO,EAAF0B,GAAK,EAAI,IAAKhF,KAAKgK,MAAMwC,KAAK3B,KAAK6B,IAAI,EAAI7B,KAAK8B,GAAG,GAAG,EAAE,KAC7D3H,EAAI,IAAKhF,KAAKgK,MAAMwC,KAAK,IAAK,EAAE,MAGzBlJ,EAAItD,KAAKgK,MAAMwC,KAAOxM,KAAKqL,MAAMG,OAAOlI,EAAItD,KAAKiL,OAAQ4D,MAAMC,OAAOC,kBAAoBuB,EAAMtL,EAAIhF,KAAKgK,MAAMwC,KAAOxM,KAAKqL,MAAMG,OAAOxG,EAAIhF,KAAKiL,OAAQ+D,OAAOF,OAAOC,iBAAkB,OAAO,EAC1M,GAAIuB,EAAMhN,EAAItD,KAAKgK,MAAMwC,KAAOxM,KAAKqL,MAAMG,OAAOlI,EAAI,GAAKgN,EAAMtL,EAAIhF,KAAKgK,MAAMwC,KAAOxM,KAAKqL,MAAMG,OAAOxG,EAAI,EAAG,OAAO,EAUvH,QAPYC,IAARiD,EACHgG,EAAImB,UAAY,iBAEhBnB,EAAImB,UAAY,OAASnH,EAAI,GAAGlG,MAAMK,KAAK,KAAO,IAClD6L,EAAI2B,YAAc3B,EAAImB,WAGK,WAAxBrP,KAAKgK,MAAMoD,cACFnI,IAARiD,EACHgG,EAAIgB,UAAUoB,EAAMhN,EAAItD,KAAKgK,MAAMwC,KAAK,EAAG8D,EAAMtL,EAAIhF,KAAKgK,MAAMwC,KAAK,EAAGxM,KAAKgK,MAAMwC,KAAMxM,KAAKgK,MAAMwC,MAEpG0B,EAAIoB,SAASgB,EAAMhN,EAAItD,KAAKgK,MAAMwC,KAAK,EAAG8D,EAAMtL,EAAIhF,KAAKgK,MAAMwC,KAAK,EAAGxM,KAAKgK,MAAMwC,KAAMxM,KAAKgK,MAAMwC,WAE9F,GAA4B,QAAxBxM,KAAKgK,MAAMoD,SAAoB,CACzCc,EAAI4B,YACJ,IAAK,IAAIjM,EAAI,EAAGA,EAAI,EAAGA,IACtBqK,EAAI6B,OAAOO,EAAMhN,EAAItD,KAAKgK,MAAMwC,KAAO,CAAC,EAAE,KAAM,KAAM,GAAG,MAAO,MAAO3I,GAAIyM,EAAMtL,EAAIhF,KAAKgK,MAAMwC,KAAO,CAAC,IAAK,MAAO,MAAO,KAAM,KAAM,MAAO3I,IAE/IqK,EAAI+B,YACJ/B,EAAI2B,YAAc3B,EAAImB,UACtBnB,EAAIqC,SACJrC,EAAIgC,OAGL,GAAIlQ,KAAKgK,MAAMwC,MAAQ,SACVvH,IAARiD,EAAmB,CACtB,MAAcA,EAAI,GAAGlG,MAArB,mBAAKS,EAAL,KAAO+N,EAAP,KAAS1M,EAAT,KACAoK,EAAImB,UAAiB,KAAJ5M,EAAgB,KAAJ+N,EAAgB,KAAJ1M,EAAa,IAAM,QAAU,QACtEoK,EAAIqB,UAAY,SAChBrB,EAAIsB,aAAe,SACnBtB,EAAIuB,KAAO,aACXvB,EAAIwB,SAASxH,EAAI,GAAIoI,EAAMhN,EAAGgN,EAAMtL,EAAGhF,KAAKgK,MAAMwC,MAGpD,OAAO,M,GAtT0B9B,IAAMC,W,kJCQpB8F,G,4JAEpB,WAAU,IAAD,OAGR,OAAO,cAACnH,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACN,eAACgH,EAAA,EAAD,CAAMxG,GAAI,CAAC8E,OAAS,QAApB,UACC,cAAC2B,EAAA,EAAD,CAAYC,MAAM,qBAElB,cAACtH,EAAA,EAAD,CAAME,WAAS,EAACD,MAAI,EAACsH,GAAG,mBAAmB3G,GAAI,CAAC,aAAe,OAAQ,aAAe,SAAtF,SACC,cAAC4G,GAAA,EAAD,CAAOtE,KAAK,QAAZ,SACC,cAACuE,EAAA,EAAD,UACE/Q,KAAKgK,MAAMvC,MAAMxF,KAAI,SAACQ,EAAqBoB,GAAtB,OACrB,cAACmN,EAAA,EAAD,UACC,cAAC,GAAD,CAAoD7J,KAAM1E,EAAGwO,WAAY,kBAAM,EAAKjH,MAAMiH,WAAWxO,KAA9EA,EAAEN,WAAa0B,EAAE1B,uBAO7C,cAAC+O,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CAAQvH,QAAQ,WAAWG,QAAS/J,KAAKgK,MAAMoH,QAA/C,mC,GAtBiD1G,IAAMC,WAsCtD0G,G,kDAIL,WAAYrH,GAAkF,IAAD,8BAC5F,cAAMA,IAJP7C,UAG6F,IAF7F8J,gBAE6F,EAE5F,EAAK9J,KAAO6C,EAAM7C,KAClB,EAAKkE,MAAQ,CACZiG,UAAYtH,EAAM7C,KAAK3C,UAAU,GACjC+M,WAAavH,EAAM7C,KAAK5C,SAAWyF,EAAM7C,KAAK3C,UAAUvB,OAAS,EAAI+G,EAAM7C,KAAK3C,UAAU,GAAK,GAC/FgN,SAAWxH,EAAM7C,KAAK1C,SAAS,GAC/BgN,UAAYzH,EAAM7C,KAAK5C,SAAWyF,EAAM7C,KAAK1C,SAASxB,OAAS,EAAI+G,EAAM7C,KAAK1C,SAAS,GAAK,GAC5FE,KAAOqF,EAAM7C,KAAKxC,MAEnB,EAAKsM,WAAajH,EAAMiH,WAVoE,E,0CAa7F,WAIC,OAAO,eAACS,GAAA,EAAD,CAAUC,OAAK,EAAf,UACN,eAACC,GAAA,EAAD,eAAY,cAACC,EAAA,EAAD,CAAWjI,QAAQ,SAASqD,KAAK,SAAS3M,MAAON,KAAKqL,MAAM1G,KAAMmN,SAAU9R,KAAK+R,WAAW/F,KAAKhM,MAAOiP,MAAO,CAACJ,MAAQ,QAAQmD,WAAY,CAAEC,UAAW,UAAWC,KAAO,GAAKC,QAAS,qBAAsBtI,UAAY,YAAauI,IAAM,EAAGnD,MAAO,CAAC,QAAY,UAAjR,OACA,eAAC2C,GAAA,EAAD,CAAWS,QAAQ,OAAnB,cAA2B,cAACR,EAAA,EAAD,CAAWjI,QAAQ,SAAStJ,MAAON,KAAKqL,MAAMiG,UAAWQ,SAAU9R,KAAK+R,WAAW/F,KAAKhM,MAAOgS,WAAY,CAACnI,UAAU,iBAAkBoF,MAAO,CAAC,QAAY,UAAvL,OACA,eAAC2C,GAAA,EAAD,CAAWS,QAAQ,OAAOC,MAAM,SAAhC,cAA0C,cAAC,IAAD,IAA1C,OACA,eAACV,GAAA,EAAD,CAAWS,QAAQ,OAAOC,MAAM,SAAhC,cAA0C,cAACT,EAAA,EAAD,CAAWjI,QAAQ,SAAStJ,MAAON,KAAKqL,MAAMkG,UAAW1H,UAAU,iBAAiBiI,SAAU9R,KAAK+R,WAAW/F,KAAKhM,MAAOgS,WAAY,CAACnI,UAAU,iBAAkBoF,MAAO,CAAC,QAAY,UAAjO,OACA,eAAC2C,GAAA,EAAD,CAAWS,QAAQ,OAAOC,MAAM,SAAhC,cAA0C,cAAC,IAAD,IAA1C,OACA,eAACV,GAAA,EAAD,CAAWS,QAAQ,OAAOC,MAAM,SAAhC,cAA0C,cAACT,EAAA,EAAD,CAAWjI,QAAQ,SAAStJ,MAAON,KAAKqL,MAAMmG,SAAU3H,UAAU,gBAAgBiI,SAAU9R,KAAK+R,WAAW/F,KAAKhM,MAAOgS,WAAY,CAACnI,UAAU,gBAAiBoF,MAAO,CAAC,QAAY,UAA9N,OACA,eAAC2C,GAAA,EAAD,CAAWS,QAAQ,OAAOC,MAAM,SAAhC,cAA0C,cAAC,IAAD,IAA1C,OACA,eAACV,GAAA,EAAD,CAAWS,QAAQ,OAAOC,MAAM,SAAhC,cAA0C,cAACT,EAAA,EAAD,CAAWjI,QAAQ,SAAStJ,MAAON,KAAKqL,MAAMoG,SAAU5H,UAAU,gBAAgBiI,SAAU9R,KAAK+R,WAAW/F,KAAKhM,MAAOgS,WAAY,CAACnI,UAAU,gBAAiBoF,MAAO,CAAC,QAAY,UAA9N,OACA,eAAC2C,GAAA,EAAD,eAAY,eAAC9H,EAAA,EAAD,CAAYC,QAAS/J,KAAKiR,WAA1B,cAAuC,cAAC,IAAD,IAAvC,OAAZ,Y,wBAIF,SAAWzC,GACV,IAAIhK,EAAY,CAACxE,KAAKqL,MAAMiG,UAAWtR,KAAKqL,MAAMkG,WAC9C9M,EAAW,CAACzE,KAAKqL,MAAMmG,SAAUxR,KAAKqL,MAAMoG,UAC5Cc,EAAkB/D,EAAEgE,cAAclS,MACtC,GAAIkO,EAAEiE,OAAOC,UAAUC,SAAS,kBAAmB,CAClDnO,EAAU,GAAK+N,EACf,IACCvS,KAAKmH,KAAKvC,OAAO,CAACJ,UAAYA,EAAUM,QAAO,SAAA5C,GAAC,MAAU,KAANA,OACnD,UAGFlC,KAAKqN,SAAS,CAACiE,UAAYiB,SACrB,GAAI/D,EAAEiE,OAAOC,UAAUC,SAAS,kBAAmB,CACzDnO,EAAU,GAAK+N,EACf,IACCvS,KAAKmH,KAAKvC,OAAO,CAACJ,UAAYA,EAAUM,QAAO,SAAA5C,GAAC,MAAU,KAANA,OACnD,UAGFlC,KAAKqN,SAAS,CAACkE,UAAYgB,SACrB,GAAI/D,EAAEiE,OAAOC,UAAUC,SAAS,iBAAkB,CACxDlO,EAAS,GAAK8N,EACd,IACCvS,KAAKmH,KAAKvC,OAAO,CAACH,SAAWA,EAASK,QAAO,SAAA5C,GAAC,MAAU,KAANA,OACjD,UAGFlC,KAAKqN,SAAS,CAACmE,SAAWe,SACpB,GAAI/D,EAAEiE,OAAOC,UAAUC,SAAS,iBAAkB,CACxDlO,EAAS,GAAK8N,EACd,IACCvS,KAAKmH,KAAKvC,OAAO,CAACH,SAAWA,EAASK,QAAO,SAAA5C,GAAC,MAAU,KAANA,OACjD,UAGFlC,KAAKqN,SAAS,CAACoE,SAAWc,SAChB/D,EAAEiE,OAAOC,UAAUC,SAAS,eACtClO,EAAS,GAAK8N,EACdvS,KAAKmH,KAAKvC,OAAO,CAACD,MAAQ4N,IAC1BvS,KAAKqN,SAAS,CAAC1I,MAAQ4N,S,GAzEK7H,IAAMC,W,6DC1ChBiI,G,4JAEpB,WAAU,IAAD,OACR,OAAO,cAACtJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACN,eAACgH,EAAA,EAAD,CAAMxG,GAAI,CAAC8E,OAAS,QAApB,UACC,cAAC2B,EAAA,EAAD,CAAYC,MAAM,mBAClB,cAACtH,EAAA,EAAD,CAAME,WAAS,EAACD,MAAI,EAACW,GAAI,CAAC,aAAe,OAAQ,aAAe,QAAS8E,OAAS,QAAlF,SACC,cAAC+B,EAAA,EAAD,UACE,YAAI/Q,KAAKgK,MAAMlC,WAAW1C,QAAQO,UAAU1D,KAAI,SAAC4Q,EAAGhP,GAAJ,OAChD,cAACmN,EAAA,EAAD,UACC,cAAC,GAAD,CAAoBZ,OAAQyC,EAAGf,SAAU,EAAK9H,MAAM8I,cAAeC,aAAc,EAAK/I,MAAM+I,wBAKhG,cAAC7B,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CAAQvH,QAAQ,WAAWG,QAAS/J,KAAKgK,MAAMgJ,UAAUhH,KAAKhM,MAA9D,qC,GAhB+C0K,IAAMC,WAqCpDsI,G,kDAIL,WAAYpO,GAAqB,IAAD,8BAC/B,cAAMA,IAJPqO,UAAoC,KAGJ,EAFhCC,oBAA+B,EAI9B,EAAK9H,MAAQ,CAAC+E,OAASvL,EAAEuL,OAAOjK,MAAOiN,QAAS,EAAO5R,QAAUqD,EAAEuL,OAAO5O,QAASE,KAAMmD,EAAEuL,OAAO1O,KAAM2R,UAAW,GAEnH,EAAKC,mBAAqB,EAAKA,mBAAmBtH,KAAxB,iBAJK,E,sDAOhC,SAAmBuH,GAEbvT,KAAKmT,qBAAsBnT,KAAKkT,WAAclT,KAAKkT,UAAUP,SAASY,EAAMd,SAChFzS,KAAKqN,SAAS,CAAC+F,QAAS,M,6BAI1B,SAAgBG,GACfvT,KAAKmT,oBAAuBnT,KAAKkT,WAAalT,KAAKkT,UAAUP,SAASY,EAAMd,U,+BAG7E,WACCe,SAAS1H,iBAAiB,YAAa9L,KAAKyT,gBAAgBzH,KAAKhM,OACjEwT,SAAS1H,iBAAiB,UAAW9L,KAAKsT,mBAAmBtH,KAAKhM,S,kCAGnE,WACCwT,SAASE,oBAAoB,YAAa1T,KAAKyT,iBAC/CD,SAASE,oBAAoB,UAAW1T,KAAKsT,sB,oBAG9C,WAAU,IAAD,OAGR,OAAO,eAAChK,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,UACN,sBAAKI,UAAU,SAAf,UACC,qBACCA,UAAU,SACVoF,MAAO,CAAE0E,gBAAiB3T,KAAKgK,MAAMoG,OAAOjK,OAC5C4D,QAAS,kBAAO,EAAKsB,MAAM+H,QAAU,EAAK/F,SAAS,CAAC+F,QAAU,EAAK/H,MAAM+H,YAE1E,cAACvB,EAAA,EAAD,CAAWjI,QAAQ,SAASgK,WAAS,EAACC,OAAO,OAAOC,MAAM,OAAOxT,MAAON,KAAKqL,MAAM3J,KAAMoQ,SAAU,SAACtD,GAAO,IAAI1N,EAAI0N,EAAEgE,cAAclS,MAAO,EAAK+M,SAAS,CAAC3L,KAAOZ,IAAK,EAAKkJ,MAAMoG,OAAO1O,KAAOZ,KAC9L,cAACgJ,EAAA,EAAD,CAAYC,QAAS,SAAA3C,GAAC,OAAI,EAAKiG,SAAS,CAACgG,UAAY,EAAKhI,MAAMgI,YAAhE,SACErT,KAAKqL,MAAMgI,SAAW,cAAC,KAAD,IAAqC,cAAC,KAAD,MAE7D,cAACvJ,EAAA,EAAD,CAAYC,QAAS,SAAA3C,GAAC,OAAI,EAAK4C,MAAM+I,aAAa,EAAK/I,MAAMoG,SAA7D,SACC,cAAC,IAAD,SAGDpQ,KAAKqL,MAAM+H,QACX,qBAAKvJ,UAAU,UAAU+B,IAAK,SAACC,GAAD,OAAU,EAAKqH,UAAYrH,GAAzD,SACC,cAAC,KAAD,CAAgBkI,MAAO/T,KAAKgK,MAAMoG,OAAOjK,MAAO2L,SAAU,SAAChR,GAAO,EAAKuM,SAAS,CAAC+C,OAAStP,IAAK,EAAKkT,aAAalT,QAGnH,cAACiQ,EAAA,EAAD,UACE/Q,KAAKqL,MAAMgI,UACX,eAACrC,EAAA,EAAD,WACC,cAACD,EAAA,EAAD,UACE,YAAI/Q,KAAKqL,MAAM7J,QAAQmE,UAAU1D,KAAI,SAACC,GAAD,OACrC,eAAC8O,EAAA,EAAD,WACC,cAACa,EAAA,EAAD,CAAWvR,MAAO4B,EAAEvB,gBAAiBmR,SAAU,EAAKmC,cAAc/R,GAAG8J,KAAK,GAAOgG,WAAY,CAAC/C,MAAO,CAAC,QAAY,UAClH,eAACnF,EAAA,EAAD,CAAYC,QAAS,kBAAM,EAAKmK,cAAchS,IAA9C,cAAmD,cAAC,IAAD,IAAnD,eAIH,cAACiP,EAAA,EAAD,CAAQvH,QAAQ,WAAWG,QAAW/J,KAAKmU,WAAWnI,KAAKhM,MAA3D,qC,0BAOL,SAAac,GACZd,KAAKgK,MAAMoG,OAAOvO,cAAcT,SAAOQ,QAAQd,IAC/Cd,KAAKgK,MAAM8H,a,2BAGZ,SAAc5P,GAAsB,IAAD,OAClC,OAAO,SAACsM,GACPtM,EAAErB,eAAe2N,EAAEiE,OAAOnS,OAC1B,EAAK+M,SAAS,CAAC7L,QAAU,EAAKwI,MAAMoG,OAAO5O,UAC3C,EAAKwI,MAAM8H,c,wBAIb,WACC9R,KAAKgK,MAAMoG,OAAOgE,YAAY,IAC9BpU,KAAKqN,SAAS,CAAC7L,QAAUxB,KAAKgK,MAAMoG,OAAO5O,Y,2BAE5C,SAAce,GACbvC,KAAKgK,MAAMoG,OAAOiE,eAAe9R,GACjCvC,KAAKqN,SAAS,CAAC7L,QAAUxB,KAAKgK,MAAMoG,OAAO5O,c,GA5FZkJ,IAAMC,W,wCCgBxB2J,GAxDf,kDAEC,WAAmBtK,GAAqB,IAAD,8BACtC,cAAMA,IACDqB,MAAQ,CAACkJ,iBAAmB,IAFK,EAFxC,0CAQC,WAAW,IAAD,OAkBT,OAAO,cAACjL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACL,eAACgH,EAAA,EAAD,CAAMxG,GAAI,CAAC8E,OAAS,QAApB,UACC,cAAC2B,EAAA,EAAD,CAAYC,MAAM,kBAElB,eAACtH,EAAA,EAAD,CAAME,WAAS,EAAf,UACC,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACC,eAAC8K,GAAA,EAAD,CAAaZ,WAAS,EAAtB,UACC,cAACa,GAAA,EAAD,CAAY5D,GAAG,gBAAf,qBACA,cAAC6D,GAAA,EAAD,CAAQZ,MAAM,gBAAgBxT,MAAON,KAAKqL,MAAMkJ,iBAAkBzC,SAAW,SAACtD,GAAD,OAAmC,EAAKnB,SAAS,CAACkH,iBAAmB/F,EAAEiE,OAAOnS,SAASqU,WAAS,EAA7K,SAzBgB,CACrB,CAAErU,MAAO,+BAAgCwT,MAAO,iBAChD,CAAExT,MAAO,mCAAoCwT,MAAO,qBACpD,CAAExT,MAAO,wCAAyCwT,MAAO,gBACzD,CAAExT,MAAO,6BAA8BwT,MAAO,eAC9C,CAAExT,MAAO,6BAA8BwT,MAAO,eAC9C,CAAExT,MAAO,sBAAuBwT,MAAO,mBACvC,CAAExT,MAAO,0CAA2CwT,MAAO,oBAC3D,CAAExT,MAAO,yCAA0CwT,MAAO,kBAC1D,CAAExT,MAAO,+BAAgCwT,MAAO,iCAChD,CAAExT,MAAO,uCAAwCwT,MAAO,yBACxD,CAAExT,MAAO,kCAAmCwT,MAAO,oBACnD,CAAExT,MAAO,gCAAiCwT,MAAO,kBACjD,CAAExT,MAAO,qCAAsCwT,MAAO,iBACtD,CAAExT,MAAO,mCAAoCwT,MAAO,sBAY/B7R,KAAI,SAAAC,GAAC,OAAI,eAAC0S,GAAA,EAAD,CAAUtU,MAAO4B,EAAE5B,MAAnB,cAA4B4B,EAAE4R,MAA9B,iBAI3B,cAACxK,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACyH,EAAA,EAAD,CAAQvH,QAAQ,YAAYiL,SAA0C,KAAhC7U,KAAKqL,MAAMkJ,iBAAyBtH,KAAK,SAAS4D,GAAG,iBAAiB9G,QAAS,kBAAM,EAAKC,MAAM8K,eAAe,EAAKzJ,MAAMkJ,mBAAhK,2BAIF,eAACrD,EAAA,EAAD,WACC,eAACC,EAAA,EAAD,CAAQvH,QAAQ,YAAYmL,UAAU,QAAtC,2BAEC,uBAAO9H,KAAK,OAAO4D,GAAG,eAAemE,UAAQ,EAACC,QAAM,EAACnD,SAAU9R,KAAKgK,MAAMkL,iBAE3E,cAAC/D,EAAA,EAAD,CAAQvH,QAAQ,YAAYiH,GAAG,SAAS9G,QAAS/J,KAAKgK,MAAMmL,YAA5D,uCAjDN,GAA2CzK,IAAMC,W,8ICS3CyK,GAAQC,aAAY,CACzBC,QAAS,CACRC,KAAM,OACNC,QAAS,CACRC,KAAM,WAEPC,UAAW,CACVD,KAAM,cAwBYE,G,kDAUpB,WAAYvO,GAAS,IAAD,uBACnB,cAAMA,IATPwO,wBAAwD,KAQpC,EAPpBC,2BAA+D,KAO3C,EANpBC,oBAAoD,KAMhC,EALpBC,iBAA4C,KAKxB,EAHpBC,WAAwC,KAGpB,EAFpBC,aAAyC,KAIxC,IAAIrI,EAAQ,IAAIsI,IAAY,CAAC9I,SAAW,SAAU7E,cAAgB4N,MAAMC,KAAK,CAACnT,OAAO,KAAK,kBAAOkT,MAAMC,KAAK,CAACnT,OAAO,KAAK,iBAAM,YAF5G,OAGnB,EAAKoI,MAAQ,CACZgL,UAAY,EAEZzI,MAAQA,EACR0I,SAAW1I,EAAM2I,gBACjBnJ,SAAWQ,EAAMR,SACjBtF,WAAa8F,EAAM9F,WACnBL,MAAQmG,EAAMnG,MAEd+O,oBAAqB,EAErBC,UAAY,GACZ3I,cAAgB,GAChB4I,SAAW9I,EAAM+I,UAAY,IAAIxU,WACjCyU,IAAMhJ,EAAMgJ,IACZC,eAAiBjJ,EAAMiJ,gBAlBL,E,0CAsBpB,WAAU,IAAD,SACR,OAAO,eAACC,GAAA,EAAD,CAAe1B,MAAOA,GAAtB,UACL,cAAC2B,GAAA,EAAD,IACA,eAACzN,EAAA,EAAD,CAAME,WAAS,EAACwN,QAAS,EAAG9M,GAAI,CAAC,OAAW,OAAQ,MAAQ,MAAO,OAAU,OAA7E,UACC,cAAC,EAAD,CAAiBI,YAAatK,KAAKsK,YAAY0B,KAAKhM,MAAOqK,gBAAiBrK,KAAKiX,oBAAoBjL,KAAKhM,MAAOwK,mBAAoBxK,KAAKwK,mBAAmBwB,KAAKhM,MAAOoK,oBAAqBpK,KAAKoK,oBAAoB4B,KAAKhM,MAAOyK,mBAAoBzK,KAAKyK,mBAAmBuB,KAAKhM,MAAOiK,YAAajK,KAAKiK,YAAY+B,KAAKhM,MAAOuK,WAAYvK,KAAKqL,MAAMmL,mBAAoB5K,IAAK,SAAAC,GAAI,OAAI,EAAKkK,iBAAmBlK,KACrZ,cAACvC,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACgH,EAAA,EAAD,CAAMxG,GAAI,CAAC,OAAW,SAAtB,SACC,eAACZ,EAAA,EAAD,CAAME,WAAS,EAACU,GAAI,CAAC8E,OAAS,QAA9B,UACC,eAAC1F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIS,GAAI,CAAC8E,OAAS,OAAjC,UACC,eAACkI,GAAA,EAAD,CAAM5W,MAAON,KAAKqL,MAAMgL,UAAWvE,SAAU9R,KAAKmX,YAAYnL,KAAKhM,MAAnE,UACC,cAACoX,GAAA,EAAD,CAAKtD,MAAM,kBACX,cAACsD,GAAA,EAAD,CAAKtD,MAAM,iBAEZ,eAACuD,GAAA,EAAD,CAAKpI,MAAO,CAACqI,QAAQ,UAArB,UAC2B,IAAzBtX,KAAKqL,MAAMgL,WACZ,eAACgB,GAAA,EAAD,WACC,cAAC1N,EAAA,EAAD,CAAYC,QAAQ,WAAWM,GAAI,CAAC,YAAa,GAAI,OAAW,OAAhE,+BACA,cAAC2H,EAAA,EAAD,CAAWiC,MAAM,GAAGtH,KAAK,QAAQ5C,QAAQ,SAAStJ,MAAON,KAAKqL,MAAMoL,UAAW3E,SAAU9R,KAAKuX,oBAAoBvL,KAAKhM,MAAOwX,SAAU,SAAAhJ,GAAC,OAAI,EAAKyH,aAAezH,KACjK,cAAC1E,EAAA,EAAD,CAAY,aAAW,OAAOC,QAAS/J,KAAKyX,eAAezL,KAAKhM,MAAhE,SAAsG,QAA9BA,KAAKqL,MAAMuC,MAAMR,SAAsB,cAAC,KAAD,IAAkB,cAAC,KAAD,MACjI,cAACyE,EAAA,EAAD,CAAWiC,MAAM,cAAcxT,MAAON,KAAKqL,MAAMqL,QAAS5E,SAAU9R,KAAK0X,WAAW1L,KAAKhM,MAAOwM,KAAK,aAI5E,IAAzBxM,KAAKqL,MAAMgL,WACZ,eAACgB,GAAA,EAAD,WACC,cAAC1N,EAAA,EAAD,CAAYC,QAAQ,WAAWM,GAAI,CAAC,YAAa,GAAI,OAAW,OAAhE,gCACA,cAAC2H,EAAA,EAAD,CAAWiC,MAAM,QAAQtH,KAAK,QAAQ5C,QAAQ,SAAStJ,MAAON,KAAKqL,MAAMwL,eAAgB/E,SAAU9R,KAAK2X,cAAc3L,KAAKhM,MAAO4X,WAAY,CAAC3K,KAAO,UAAWgC,MAAO,CAACJ,MAAQ,SACjL,cAACgD,EAAA,EAAD,CAAWiC,MAAM,MAAMtH,KAAK,QAAQ5C,QAAQ,SAAStJ,MAAON,KAAKqL,MAAMuL,IAAK9E,SAAU9R,KAAK6X,UAAU7L,KAAKhM,MAAO4X,WAAY,CAAC3K,KAAO,UAAWgC,MAAO,CAACJ,MAAQ,SAChK,cAACgD,EAAA,EAAD,CAAWiC,MAAM,cAAcxT,MAAgC,IAAzBN,KAAKqL,MAAMgL,UAAX,UAA6BrW,KAAKqL,MAAMuC,MAAMkK,cAA9C,aAA6B,EAAyBC,KAAK5V,WAAanC,KAAKqL,MAAMqL,QAAS5E,SAAU9R,KAAK0X,WAAW1L,KAAKhM,MAAO6U,SAAmC,IAAzB7U,KAAKqL,MAAMgL,UAAiBuB,WAAY,CAACI,aAAsC,IAAzBhY,KAAKqL,MAAMgL,UAAkB,cAAC4B,GAAA,EAAD,CAAgBC,SAAS,MAAzB,SAA+B,cAAC/G,EAAA,EAAD,CAAQpH,QAAS/J,KAAKmY,YAAYnM,KAAKhM,MAAvC,mBAA+E,MAAOwM,KAAK,mBAMlY,eAAClD,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIS,GAAI,CAAC8E,OAAS,OAAjC,UAC2B,IAAzBhP,KAAKqL,MAAMgL,WACX,cAAC,EAAD,CAAsB9K,cAAevL,KAAKqL,MAAMuC,MAAMrF,cAAeqF,MAAO5N,KAAKqL,MAAMuC,MAAOR,SAAUpN,KAAKqL,MAAM+B,SAAUxB,IAAK,SAAAC,GAAI,OAAI,EAAK+J,wBAA0B/J,GAAMW,KAAMxM,KAAKqL,MAAMiL,SAAU3H,KAAM3O,KAAK2O,KAAK3C,KAAKhM,MAAO8N,cAAe9N,KAAK8N,cAAc9B,KAAKhM,QAEpP,IAAzBA,KAAKqL,MAAMgL,WACX,cAAC,EAAD,CAAsB9K,cAAevL,KAAKqL,MAAMuC,MAAMwK,cAAgBpY,KAAKqL,MAAMuC,MAAMrC,cAAgBvL,KAAKqL,MAAMuC,MAAMrF,cAAeqF,MAAO5N,KAAKqL,MAAMuC,MAAOR,SAAUpN,KAAKqL,MAAM+B,SAAUxB,IAAK,SAAAC,GAAI,OAAI,EAAKiK,oBAAsBjK,GAAMW,KAAMxM,KAAKqL,MAAMiL,SAAU3H,KAAM3O,KAAK2O,KAAK3C,KAAKhM,MAAO8N,cAAe9N,KAAK8N,cAAc9B,KAAKhM,MAAO2L,YAAU,cAMjW,cAAC,GAAD,CAAwBiC,MAAO5N,KAAKqL,MAAMuC,MAAOkF,cAAe9S,KAAK8S,cAAc9G,KAAKhM,MAAOgT,UAAWhT,KAAKgT,UAAUhH,KAAKhM,MAAO+S,aAAc/S,KAAK+S,aAAa/G,KAAKhM,MAAO8H,WAAY9H,KAAKqL,MAAMvD,aACxM,cAAC,GAAD,CAA0B8D,IAAK,SAAAC,GAAI,OAAI,EAAKgK,2BAA6BhK,GAAM+B,MAAO5N,KAAKqL,MAAMuC,MAAOwD,QAASpR,KAAKoR,QAAQpF,KAAKhM,MAAOiR,WAAYjR,KAAKiR,WAAWjF,KAAKhM,MAAOyH,MAAOzH,KAAKqL,MAAM5D,QACpM,cAAC,GAAD,CAAuB0N,YAAanV,KAAKmV,YAAYnJ,KAAKhM,MAAOkV,YAAalV,KAAKkV,YAAYlJ,KAAKhM,MAAO8U,eAAgB9U,KAAK8U,eAAe9I,KAAKhM,gB,gEAKxJ,8BAAAkC,EAAA,yDAEe,QADRmW,EAAS7E,SAAS8E,eAAe,gBAAqCD,OAD7E,iEAI2CnC,IAAYqC,OAAO3R,mBAAnB,YAA0CyR,IAJrF,QAMmB,KAFdG,EAJL,SASExY,KAAKyY,YAAYD,GATnB,gD,+EAaA,WACC,IAAI/V,EAAIzC,KAAKqL,MAAMuC,MAAM8K,SACxBC,EAAO,IAAIC,KAAK,CAACnW,GAAI,CAAEwK,KAAM,eAC7B4L,EAASrF,SAASsF,cAAc,KACjCD,EAAOE,SAAW,yBAClBF,EAAOG,MAAQlK,OAAOmK,WAAanK,OAAOoK,KAAKC,gBAAgBR,GAC/DE,EAAOO,QAAQC,YAAc,CAAC,aAAcR,EAAOE,SAAUF,EAAOG,MAAM3W,KAAK,KAC/EwW,EAAOS,U,4BAGR,SAAe1Q,GACd,GAAa,KAATA,EAAJ,CAEA,IAAInG,EAAIzC,KACRuZ,MAAM3Q,EACL,CAAC4Q,QAAU,CACV,eAAgB,mBAChB,OAAU,sBAEVC,MAAK,SAASC,GACf,OAAOA,EAAS7Q,UACd4Q,MAAK,SAAS3Y,GAChB,IAAI0X,EAAYtC,IAAYqC,OAAO1R,WAAW/F,EAAEiD,MAAM,OAEtDtB,EAAEgW,YAAYD,S,wBAIhB,SAAWmB,GACV3Z,KAAKqN,SAAS,CAACmJ,mBAAqBmD,M,yBAGrC,SAAYnB,GACXxY,KAAKqN,SAAS,CAACgJ,UAAY,EAAGG,oBAAqB,EAAO5I,MAAQ4K,EAAWpL,SAAWoL,EAAUpL,SAAUkJ,SAAWkC,EAAUjC,gBAAiBzO,WAAa0Q,EAAU1Q,WAAYL,MAAK,YAAO+Q,EAAU/Q,OAAQgP,UAAY,GAAI3I,cAAgB,GAAI4I,SAAW8B,EAAU7B,UAAY,IAAIxU,WAAYyU,IAAM4B,EAAU5B,IAAKC,eAAiB2B,EAAU3B,mB,4BAGzV,WACmC,QAA9B7W,KAAKqL,MAAMuC,MAAMR,SACpBpN,KAAKqL,MAAMuC,MAAMR,SAAW,SACY,WAA9BpN,KAAKqL,MAAMuC,MAAMR,WAC3BpN,KAAKqL,MAAMuC,MAAMR,SAAW,OAE7BpN,KAAKqN,SAAS,CAACD,SAAWpN,KAAKqL,MAAMuC,MAAMR,WAC3CpN,KAAK4Z,kBACL5Z,KAAK6Z,qB,8BAGN,WACsC,OAAjC7Z,KAAK4V,yBAER5V,KAAK4V,wBAAyBvI,SAAS,CACtCvF,WAAY9H,KAAKqL,MAAMuC,MAAM9F,WAC7BsF,SAAUpN,KAAKqL,MAAMuC,MAAMR,SAC3BZ,KAAMxM,KAAKqL,MAAMuC,MAAM2I,gBACvBlO,KAAOrI,KAAK4V,wBAAwBtK,WAAWtL,KAAKqL,MAAMuC,MAAMrF,mB,6BAKnE,WACC,IAAMuR,EAAM9Z,KAAK8V,oBACXlI,EAAQ5N,KAAKqL,MAAMuC,MACb,OAARkM,GACHA,EAAIzM,SAAS,CAACvF,WAAY8F,EAAM9F,WAAY0E,KAAMoB,EAAM2I,gBAAiBlO,KAAOyR,EAAIxO,WAAWsC,EAAMwK,cAAgBxK,EAAMrC,cAAgBqC,EAAMrF,eAAgBmD,SAAWkC,EAAMlC,a,2BAIpL,WACC1L,KAAK6Z,mBACL7Z,KAAK4Z,oB,6BAGN,WACC5Z,KAAKqL,MAAMuC,MAAMmM,YACjB/Z,KAAK4Z,kBACL5Z,KAAKqN,SAAS,CAACqJ,QAAU1W,KAAKqL,MAAMuC,MAAMkK,OAAQC,KAAK5V,e,4BAGxD,WAC8B,IAAzBnC,KAAKqL,MAAMgL,WAAiBrW,KAAKqN,SAAS,CAACgJ,UAAY,IACtDrW,KAAKqL,MAAMuC,MAAMwK,eACrBpY,KAAKga,oB,yBAIP,SAAYxL,EAA0BlO,GACrCN,KAAKqN,SAAS,CAACgJ,UAAY/V,IACb,IAAVA,GACHN,KAAKga,oB,yBAIP,SAAYxL,GACXA,EAAEf,iBACFzN,KAAKia,iBACDja,KAAKqL,MAAMmL,mBACdxW,KAAKka,YAAW,IAEhBla,KAAKka,YAAW,GAChBla,KAAKma,gBAAe,M,4BAItB,SAAeC,GACd,GAAKA,GAAYpa,KAAKqL,MAAMmL,mBAA5B,CACA,IAAI1S,EAAI9D,KAAKqL,MAAMuC,MAAMyM,aACzBra,KAAK4Z,kBACA9V,EAGJgL,OAAOwL,WAAWta,KAAKma,eAAenO,KAAKhM,MAAO,EAAEA,KAAKqL,MAAMuC,MAAMgJ,KAFrE5W,KAAKka,YAAW,M,gCAMlB,SAAmB1L,GAClBA,EAAEf,iBACFzN,KAAKia,iBACLja,KAAKqL,MAAMuC,MAAM2M,eACjBva,KAAK4Z,oB,iCAGN,SAAoBpL,GACnBA,EAAEf,iBACFzN,KAAKia,iBACLja,KAAKqL,MAAMuC,MAAM4M,gBACjBxa,KAAK4Z,oB,gCAGN,SAAmBpL,GAClBA,EAAEf,iBACFzN,KAAKia,iBACLja,KAAKqL,MAAMuC,MAAMyM,aACjBra,KAAK4Z,oB,iCAGN,SAAoBpL,GACnBA,EAAEf,iBACFzN,KAAKia,iBACLja,KAAKqL,MAAMuC,MAAM6M,aACjBza,KAAK4Z,oB,yBAGN,SAAYpL,GACXA,EAAEf,iBACFzN,KAAKka,YAAW,GAChBla,KAAKqL,MAAMuC,MAAM8M,WACjB1a,KAAK4Z,oB,uBAGN,WACC,IAAI9X,EAAa9B,KAAKqL,MAAMuC,MAAM9F,WAAWhC,aAC7C9F,KAAKqL,MAAMuC,MAAM9F,WAAWxF,IAAInC,OAAO4B,OAAOD,EAAG,CAAC,KAAS,SAE3D9B,KAAKqN,SAAS,CAACvF,WAAa9H,KAAKqL,MAAMuC,MAAM9F,e,0BAG9C,SAAahG,GACZ9B,KAAKqL,MAAMuC,MAAM9F,WAAWtF,OAAOV,GACnC9B,KAAKqN,SAAS,CAACvF,WAAa9H,KAAKqL,MAAMuC,MAAM9F,e,wBAG9C,SAAWrF,GACVzC,KAAKqL,MAAMuC,MAAM+M,YAAYlY,GAC7BzC,KAAKqN,SAAS,CAAC5F,MAAK,YAAOzH,KAAKqL,MAAMuC,MAAMnG,W,qBAG7C,WACCzH,KAAKqL,MAAMuC,MAAMgN,WACjB5a,KAAKqN,SAAS,CAAC5F,MAAK,YAAOzH,KAAKqL,MAAMuC,MAAMnG,W,kBAG7C,SAAKoT,GACJ,IAAMC,EAAU9a,KAAKqL,MAAMuC,MAAM2I,gBAIjC,OAHIsE,EAAK7a,KAAKqL,MAAMuC,MAAMmN,gBACrB/a,KAAKqL,MAAMuC,MAAMoN,gBACtBhb,KAAKqN,SAAS,CAACiJ,SAAWtW,KAAKqL,MAAMuC,MAAM2I,kBACpCuE,EAAQ9a,KAAKqL,MAAMuC,MAAM2I,kB,2BAGjC,SAAc0E,EAAoB3a,GACjCN,KAAKqN,SAAS,CAACS,cAAgBmN,EAAUxE,UAAYnW,IACrDN,KAAKiW,cAAgBjW,KAAKiW,aAAaiF,U,iCAGxC,SAAoB1M,GACfA,EAAEiE,OAAOnS,MAAMU,MAAM,WACxBhB,KAAKqN,SAAS,CAACoJ,UAAYjI,EAAEiE,OAAOnS,QACpCN,KAAKqL,MAAMuC,MAAMuN,UAAUnb,KAAKqL,MAAMyC,cAAc7L,KAAI,SAAA4C,GAAC,MAAI,CAACA,EAAEvB,EAAGuB,EAAEG,MAAKwJ,EAAEiE,OAAOnS,OACnFN,KAAK6Z,sB,wBAIP,SAAWrL,GACV,IAAI4M,EAAI5M,EAAEiE,OAAOnS,MACjB,GAAU,KAAN8a,EACHpb,KAAKqN,SAAS,CAACqJ,QAAU0E,IACzBpb,KAAKqL,MAAMuC,MAAM+I,SAAW,SACtB,CACN,IAAIrT,EAAIX,SAASyY,GACjBpb,KAAKqN,SAAS,CAACqJ,QAAU0E,IACzBpb,KAAKqL,MAAMuC,MAAM+I,SAAWrT,K,yBAI9B,WACCtD,KAAKqL,MAAMuC,MAAM+I,SAAW3W,KAAKqL,MAAMuC,MAAMkK,OAAQC,KACrD/X,KAAKqN,SAAS,CAACqJ,QAAU1W,KAAKqL,MAAMuC,MAAM+I,SAASxU,e,uBAGpD,SAAUqM,GACT,IAAI4M,EAAI5M,EAAEiE,OAAOnS,MACbgD,EAAI+X,WAAWD,GACnBpb,KAAKqN,SAAS,CAACuJ,IAAMtT,IACrBtD,KAAKqL,MAAMuC,MAAMgJ,IAAMtT,I,2BAGxB,SAAckL,GACb,IAAI4M,EAAI5M,EAAEiE,OAAOnS,MACbgD,EAAI+X,WAAWD,GACnBpb,KAAKqN,SAAS,CAACwJ,eAAiBvT,IAChCtD,KAAKqL,MAAMuC,MAAMiJ,eAAiBvT,M,GA7TOoH,IAAMC,WC1DjD2Q,IAASC,OACR,eAAC,IAAMC,WAAP,WACC,4DACA,cAAC,GAAD,OAEDhI,SAAS8E,eAAe,U,8ECRrBvY,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQe,OAASf,EAAQ8E,WAAa9E,EAAQiE,gBAAkBjE,EAAQI,qBAAkB,EAC1F,IAAMU,EAAoBpB,EAAgBS,EAAQ,MAClDH,EAAQI,gBAAkBU,EAAkBF,QAC5C,IAAM6F,EAAoB/G,EAAgBS,EAAQ,MAClDH,EAAQiE,gBAAkBwC,EAAkB7F,QAC5C,IAAMwa,EAAe1b,EAAgBS,EAAQ,MAC7CH,EAAQ8E,WAAasW,EAAaxa,QAClC,IAAMiE,EAAWnF,EAAgBS,EAAQ,MACzCH,EAAQe,OAAS8D,EAASjE,QAC1B,IAAMya,EAAqB3b,EAAgBS,EAAQ,MAC7Cmb,EAAWnb,EAAQ,KACnBob,EAAsB7b,EAAgBS,EAAQ,MAC9Cqb,EAAoBrb,EAAQ,KAC5B0V,E,WACF,aAAoB,IAARrR,EAAQ,uDAAJ,GAAI,UAChB7E,KAAKuI,cAAgB,GACrBvI,KAAKyH,MAAQ,GACbzH,KAAK8H,WAAa,IAAI2T,EAAaxa,QACnCjB,KAAK8b,QAAU,IAAIxW,IACnBtF,KAAKoN,SAAW,SAChBpN,KAAK2W,SAAW,KAChB3W,KAAKuW,gBAAkB,GACvBvW,KAAK6W,eAAiB,EACtB7W,KAAK4W,IAAM,GACX5W,KAAK8X,OAAS,KACd9X,KAAKuL,cAAgB,GACrBvL,KAAK+b,aAAe,GACpB/b,KAAK0L,SAAW,EAChB1L,KAAKgc,UAAY,KACjBhc,KAAKic,YAAc,GACnBjc,KAAKkc,iBAAmB,GACxB/b,OAAO4B,OAAO/B,KAAM6E,G,qCAExB,SAAYpC,GACRzC,KAAKyH,MAAM0U,OAAOnc,KAAKyH,MAAM2U,QAAQ3Z,GAAI,K,sBAE7C,WACIzC,KAAKyH,MAAM1E,KAAK+D,EAAkB7F,QAAQob,e,uBAE9C,SAAUC,EAAQpU,GAAK,WACnB,GAAsB,IAAlBoU,EAAOrZ,OAAX,CAEA,IAAIsZ,EAAKD,EAAOra,KAAI,SAAAqB,GAAC,OAAIA,EAAE,MAAIkZ,OAC3BC,EAAOF,EAAG,GACVG,EAAOH,EAAGA,EAAGtZ,OAAS,GAC1B,GAAIwZ,EAAO,EAAG,WACIzc,KAAKuI,eADT,IACV,2BAAkC,KAAzB1E,EAAyB,QAC9BA,EAAE8Y,QAAF,MAAA9Y,EAAC,EAAYsS,OAAOsG,GAAMvM,KAAK,OAFzB,8BAIVwM,GAAQD,EAEZ,IAAI5N,EAAQ7O,KAAKuI,cAAc,GAAGtF,OAClC,GAAIyZ,GAAQ7N,EAAO,WACD7O,KAAKuI,eADJ,IACf,2BAAkC,KAAzB1E,EAAyB,QAC9BA,EAAEd,KAAF,MAAAc,EAAC,EAASsS,MAAMuG,EAAO7N,EAAQ,GAAGqB,KAAK,OAF5B,+BAKnB,IAGc,EAIyB,EAPnC0M,EAAKN,EAAOra,KAAI,SAAAqB,GAAC,OAAIA,EAAE,MAAIkZ,OAC3BK,EAAOD,EAAG,GACVE,EAAOF,EAAGA,EAAG3Z,OAAS,GAC1B,GAAI4Z,EAAO,GACP,EAAA7c,KAAKuI,eAAcoU,QAAnB,UAA8BxG,OAAO0G,GAAM5a,KAAI,SAAAmF,GAAC,OAAI+O,MAAM,EAAK5N,cAAc,GAAGtF,QAAQiN,KAAK,SAC7F4M,GAAQD,EAEZ,GAAIC,GAAQ9c,KAAKuI,cAActF,QAC3B,EAAAjD,KAAKuI,eAAcxF,KAAnB,UAA2BoT,MAAM2G,EAAO9c,KAAKuI,cAActF,OAAS,GAAGiN,KAAK,IAAIjO,KAAI,SAAAmF,GAAC,OAAI+O,MAAM,EAAK5N,cAAc,GAAGtF,QAAQiN,KAAK,SA1BnH,UA4BAoM,GA5BA,IA4BnB,2BAA2B,oBAAjBhZ,EAAiB,KAAd0B,EAAc,KACvBhF,KAAKuI,cAAcvD,GAAG1B,GAAK4E,GA7BZ,kC,wBAgCvB,SAAWD,EAAK3H,GACZ,OAAQ2H,GACJ,IAAK,WACD,GAAc,WAAV3H,GAAgC,QAAVA,EAItB,KAAM,2BAHNN,KAAKoN,SAAW9M,EAKpB,MACJ,IAAK,WACD,IAAIuD,EAAIlB,SAASrC,GACjBN,KAAK2W,SAAW9S,EAChB,MACJ,IAAK,kBACGA,EAAIwX,WAAW/a,GACnBN,KAAKuW,gBAAkB1S,EACvB,MACJ,IAAK,iBACGA,EAAIwX,WAAW/a,GACnBN,KAAK6W,eAAiBhT,EACtB,MACJ,IAAK,MACGA,EAAIwX,WAAW/a,GACnBN,KAAK4W,IAAM/S,EAGnB7D,KAAK8b,QAAQ9V,IAAIiC,EAAK3H,K,oBAE1B,WACI,IADK,EACDyc,EAAS,GADR,IAGc/c,KAAK8b,SAHnB,IAGL,2BAAiC,oBAAvBkB,EAAuB,KAApBnK,EAAoB,KAC7BkK,EAAOha,KAAKia,EAAI,MAAQnK,IAJvB,8BAkBL,OAXAkK,EAAOha,KAAK,2BACZga,EAAOha,KAAP,MAAAga,EAAM,EAAS/c,KAAKyH,MAAMxF,KAAI,SAAAC,GAAC,OAAIA,EAAEC,gBACrC4a,EAAOha,KAAK,2BAEZga,EAAOha,KAAK,CAAC,oBACbga,EAAOha,KAAP,MAAAga,EAAM,EAAS/c,KAAK8H,WAAW4Q,WAC/BqE,EAAOha,KAAK,CAAC,oBAEbga,EAAOha,KAAK,CAAC,sBACbga,EAAOha,KAAP,MAAAga,EAAM,EAAS/c,KAAKuI,cAActG,KAAI,SAAAC,GAAC,OAAIA,EAAEG,KAAK,UAClD0a,EAAOha,KAAK,CAAC,sBACNga,EAAO1a,KAAK,Q,sBAEvB,WACIrC,KAAKuL,cAAgB,GACrBvL,KAAK+b,aAAe,GACpB/b,KAAK0L,SAAW,EAChB1L,KAAKgc,UAAY,KACjBhc,KAAKic,YAAc,GACnBjc,KAAKkc,iBAAmB,GACxBlc,KAAK8H,WAAWqI,e,uBAEpB,WAAY,WACR,IAAInQ,KAAKoY,cAAT,CAIsB,OAAlBpY,KAAK2W,SACL3W,KAAK8X,OAAS,IAAI+D,EAAkBoB,gBAAgBjd,KAAK2W,WAGzD3W,KAAK8X,OAAS,IAAI+D,EAAkBoB,gBACpCjd,KAAK8X,OAAS,IAAI+D,EAAkBoB,gBAAgBjd,KAAK8X,OAAOoF,QAEpEld,KAAKgc,UAAY,IAAIJ,EAAoB3a,QAAQ,CAAEkc,WAAY,SAACjb,EAAG4B,GAAJ,OAAU5B,EAAEoE,eAAiBxC,EAAEwC,kBAC9F,IAAI8W,EAAkB,GACtBpd,KAAKuI,cAAc8U,SAAQ,SAACvc,EAAGkE,GAC3B,EAAK+W,aAAahZ,KAAKoT,MAAMrV,EAAEmC,QAAQiN,KAAK,IAC5C,EAAK3E,cAAcxI,KAAK,IACxBjC,EAAEuc,SAAQ,SAACjW,EAAG9D,GACV,EAAKiI,cAAc,EAAKA,cAActI,OAAS,GAAGF,KAAK,EAAKwF,cAAcvD,GAAG1B,IAC7E,IAFgB,EAEZb,EAAI,EAAK6a,sBAAsBha,EAAG0B,GAFtB,IAGFvC,GAHE,IAGhB,2BAAiB,KAARgB,EAAQ,QACb2Z,EAAgBra,KAAKU,IAJT,qCAQxBzD,KAAKgc,UAAY,IAAIJ,EAAoB3a,QAAQ,CAAEkc,WAAY,SAACjb,EAAG4B,GAAJ,OAAU5B,EAAEoE,eAAiBxC,EAAEwC,gBAAgBiX,cAAeH,O,iCAEjI,WAAsB,WAClB,GAAIpd,KAAKoY,cAAe,CACpB,IADoB,iBAEhB,IAAI3U,EAAI,EAAKuY,UAAUwB,OAIvB,GAHQ/Z,EAAE+C,UAAUzB,OAAM,YAAe,aAAbzB,EAAa,KAAV0B,EAAU,UACrC,OAAO,EAAK+W,aAAa/W,GAAG1B,IAAMG,EAAE4C,eAGpC,cACJ,EAAK2V,UAAUyB,WAPa,GAAzBzd,KAAKgc,UAAU/Y,QAAa,kBAM3B,MAGR,OAA6B,GAAzBjD,KAAKgc,UAAU/Y,QAEZjD,KAAKgc,UAAUwB,OAE1B,OAAO,I,sBAEX,SAASE,GACL,KAAO1d,KAAK0L,SAAWgS,GAAM,CACzB,IAAIja,EAAIzD,KAAK2d,sBACb,IAAU,IAANla,EACA,OAAO,EACX,GAAIA,EAAE6C,eAAiBoX,EACnB,MACJ1d,KAAKua,eAGT,OADAva,KAAK0L,SAAWgS,GACT,I,wBAEX,SAAWA,GACP,KAAO1d,KAAK0L,SAAWgS,GAAM,CAEzB,IAAU,IADF1d,KAAKwa,gBAET,OAAO,EAGf,OADAxa,KAAK0L,SAAWgS,GACT,I,wBAEX,WACI,OAAO1d,KAAK4d,SAAS5d,KAAK0L,SAAiC,EAAtB1L,KAAK6W,eAAqB7W,KAAK4W,O,wBAExE,WACI,OAAO5W,KAAK6d,WAAW7d,KAAK0L,SAAiC,EAAtB1L,KAAK6W,eAAqB7W,KAAK4W,O,0BAE1E,WAAe,WACX,GAAI5W,KAAKoY,cAAe,CACpB,IAAI3U,EAAIzD,KAAK2d,sBACb,IAAU,IAANla,EACA,OAAO,EAOX,GANAzD,KAAKgc,UAAUyB,UACfzd,KAAK0L,SAAWjI,EAAE6C,eAClB7C,EAAE+C,UAAU6W,SAAQ,YAAe,aAAb/Z,EAAa,KAAV0B,EAAU,KAAPlE,EAAO,KAC/B,EAAKyK,cAAcvG,GAAG1B,GAAKxC,EAC3B,EAAKib,aAAa/W,GAAG1B,GAAK,EAAKoI,YAET,OAAtBjI,EAAEgD,gBAA0B,CAC5BhD,EAAEgD,gBAAkB,GACpB,IAAIqX,EAAS,IAAIrc,IACjBgC,EAAE+C,UAAU6W,SAAQ,YAAe,eAAb/Z,EAAa,KAAV0B,EAAU,KAC3B+Y,GAD2B,KACpB,EAAKT,sBAAsBha,EAAG0B,EAAG8Y,IADb,IAEhBC,GAFgB,IAE/B,2BAAqB,KAAZC,EAAY,QACjB,EAAKhC,UAAUiC,MAAMD,GACrBva,GAAKA,EAAEgD,gBAAgB1D,KAAKib,IAJD,8BAM/BF,EAAOxb,IAAI,CAACgB,EAAG0B,YAInBvB,EAAEgD,gBAAgB4W,SAAQ,SAACU,GACvB,EAAK/B,UAAUiC,MAAMF,MAI7B,OADA/d,KAAKic,YAAYlZ,KAAKU,GACU,GAAzBzD,KAAKgc,UAAU/Y,OAGtB,OAAO,I,2BAGf,WAAgB,WACZ,GAAIjD,KAAKoY,cAAe,CACpB,IAAI3U,EAAIzD,KAAKic,YAAYjZ,MACzB,YAAUiC,IAANxB,IAEJzD,KAAK0L,SAAWjI,EAAE6C,eAClB7C,EAAE8C,UAAU8W,SAAQ,YAAe,aAAb/Z,EAAa,KAAV0B,EAAU,KAAPlE,EAAO,KAC/B,EAAKyK,cAAcvG,GAAG1B,GAAKxC,EAC3B,EAAKib,aAAa/W,GAAG1B,GAAK,KAE9BtD,KAAKgc,UAAUiC,MAAMxa,IACd,GAEX,OAAO,I,mCAEX,SAAsBH,EAAG0B,GAAuB,IAApB8Y,EAAoB,uDAAX,IAAIrc,IACjCyc,EAAele,KAAKuL,cAAcvG,GAAG1B,GACrC6a,EAAuB,GACvBC,EAAK,GACLha,EAAIpE,KAAKkc,iBAAiBgC,GAY1BE,OAXMnZ,IAANb,EAWKpE,KAAKyH,MAGLrD,EAnBmC,UAqB3Bga,GArB2B,IAqB5C,2BAAqB,KAAZjX,EAAY,QACjB,GAAIA,EAAK5C,QAAS,CACd,IADc,EACVhC,EAAI4E,EAAKhE,QAAQ+a,GADP,IAEE3b,GAFF,IAEd,2BAAmB,KAARE,EAAQ,QACXgB,EAAIzD,KAAK0L,SAAWb,KAAKwT,IAAI,EAAIre,KAAK8X,OAAOwG,SAAWnX,EAAKxC,KAE7DqZ,EAAK,IAAItC,EAAmBza,QAAQjB,KAAK0L,SAAUjI,GACvDua,EAAGO,aAAajb,EAAG0B,EAAGkZ,GACtBF,EAAGQ,aAAalb,EAAG0B,EAAGvC,EAAE,IACxB0b,EAAqBpb,KAAKib,IARhB,mCAWb,CACD,IAAIS,EAAoB,GAEpBA,EADiB,UAAjBze,KAAKoN,SACe,CAAC,EAAE,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAG/B,CAAC,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAACpI,EAAI,EAAI,GAAK,EAAG,GAAI,CAAC,GAAI,GAAI,CAACA,EAAI,EAAI,GAAK,GAAI,IAElG,cAAqByZ,EAArB,eAAwC,CAAnC,gBAAKC,EAAL,KAASC,EAAT,KACD,GAAI3Z,EAAI2Z,GAAM,GAAK3Z,EAAI2Z,EAAK3e,KAAKuL,cAActI,QAAUK,EAAIob,GAAM,GAAKpb,EAAIob,EAAK1e,KAAKuL,cAAcvG,EAAI2Z,GAAI1b,OAAQ,CAChH,GAAI6a,EAAOrY,IAAI,CAACnC,EAAIob,EAAI1Z,EAAI2Z,IACxB,SACJ,IAHgH,EAG5GC,EAAa5e,KAAKuL,cAAcvG,EAAI2Z,GAAIrb,EAAIob,GAC5Cnc,EAAI4E,EAAKhE,QAAQ+a,EAAcU,GAJ6E,IAKhGrc,GALgG,IAKhH,2BAAmB,KAARE,EAAQ,QACXgB,EAAIzD,KAAK0L,SAAWb,KAAKwT,IAAI,EAAIre,KAAK8X,OAAOwG,SAAWnX,EAAKxC,KAE7DqZ,EAAK,IAAItC,EAAmBza,QAAQjB,KAAK0L,SAAUjI,GACvDua,EAAGO,aAAajb,EAAG0B,EAAGkZ,GACtBF,EAAGO,aAAajb,EAAIob,EAAI1Z,EAAI2Z,EAAIC,GAChCZ,EAAGQ,aAAalb,EAAG0B,EAAGvC,EAAE,IACxBub,EAAGQ,aAAalb,EAAIob,EAAI1Z,EAAI2Z,EAAIlc,EAAE,IAClC0b,EAAqBpb,KAAKib,IAbkF,8BAehHzb,EAAI4E,EAAKhE,QAAQyb,EAAYV,GAfmF,UAgBhG3b,GAhBgG,IAgBhH,2BAAmB,KAARE,EAAQ,QACXgB,EAAIzD,KAAK0L,SAAWb,KAAKwT,IAAI,EAAIre,KAAK8X,OAAOwG,SAAWnX,EAAKxC,KAE7DqZ,EAAK,IAAItC,EAAmBza,QAAQjB,KAAK0L,SAAUjI,GACvDua,EAAGO,aAAajb,EAAG0B,EAAGkZ,GACtBF,EAAGO,aAAajb,EAAIob,EAAI1Z,EAAI2Z,EAAIC,GAChCZ,EAAGQ,aAAalb,EAAG0B,EAAGvC,EAAE,IACxBub,EAAGQ,aAAalb,EAAIob,EAAI1Z,EAAI2Z,EAAIlc,EAAE,IAClC0b,EAAqBpb,KAAKib,IAxBkF,mCA1CpF,8BAwE5C,OAAOG,I,yBAEX,WACI,OAA0B,OAAnBne,KAAKgc,Y,2BAEhB,WACQhc,KAAKuW,gBAAkB,EACvBvW,KAAKuW,gBAAkB,GAAK,EAAIvW,KAAKuW,gBAAkB,GAGvDvW,KAAKuW,iBAAmB,I,2BAGhC,WACQvW,KAAKuW,iBAAmB,EACxBvW,KAAKuW,gBAAkB,GAAK,EAAIvW,KAAKuW,gBAAkB,GAGvDvW,KAAKuW,iBAAmB,M,KAIpClW,EAAQY,QAAUiV,EAClBA,EAAYqC,OAAS,CAAE3R,mBAAoB+U,EAAS/U,mBAAoBC,WAAY8U,EAAS9U,c","file":"static/js/main.929c2408.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Custom_Regex_Decomposer_1 = __importDefault(require(\"./Custom_Regex_Decomposer\"));\nclass Species_Matcher {\n    constructor(init) {\n        this.original_string = \"\";\n        this.matched = [];\n        this.update_matched(init);\n    }\n    includes(s) {\n        return this.matched.includes(s);\n    }\n    is_pure() {\n        return this.original_string.match(/^\\w+$/) === null;\n    }\n    toString() {\n        return this.original_string;\n    }\n    update_matched(s) {\n        this.original_string = s;\n        this.matched = Custom_Regex_Decomposer_1.default.decompose(s);\n    }\n}\nexports.default = Species_Matcher;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nclass Colour {\n    constructor(init) {\n        this.red = 0;\n        this.green = 0;\n        this.blue = 0;\n        this.species = new Set();\n        this.name = \"\";\n        this.hexString = \"\";\n        if (typeof (init) === 'string') {\n            init = Colour.hex2rgb(init);\n        }\n        this.update_colour(init);\n    }\n    static white() { return new Colour({ red: 256, green: 256, blue: 256 }); }\n    rgb() {\n        return [this.red, this.green, this.blue];\n    }\n    hex() {\n        return this.hexString;\n    }\n    update_colour(c) {\n        Object.assign(this, c);\n        this.hexString = '#' + this.rgb().map(a => (\"0\" + a.toString(16)).slice(-2)).join('');\n    }\n    add_matcher(s) { this.species.add(new Species_Matcher_1.default(s)); }\n    delete_matcher(m) { this.species.delete(m); }\n    static hex2rgb(s) {\n        s = s.replace(/^#/, '');\n        let r = s.match(/^([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})$/);\n        if (r) {\n            return { red: parseInt(r[1], 16), green: parseInt(r[2], 16), blue: parseInt(r[3], 16) };\n        }\n        else {\n            // TODO: setup fail state\n            return { red: 256, green: 256, blue: 256 };\n        }\n    }\n}\nexports.default = Colour;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xregexp_1 = __importDefault(require(\"xregexp\"));\nclass Custom_Regex_Decomposer {\n    static decompose(init) {\n        // Validate brackets are all balanced\n        var brackets = [];\n        for (var c of init) {\n            if (\"([{\".includes(c)) {\n                brackets.push(c);\n            }\n            else if (\")]}\".includes(c)) {\n                if (!\"() {} []\".includes(brackets.pop() + c)) {\n                    throw \"Unbalanced brackets\";\n                }\n            }\n        }\n        if (brackets.length !== 0)\n            throw \"Unbalanced brackets\";\n        return this.parse(init);\n    }\n    static parse(s, matches = 1, curly_group = NaN) {\n        var r;\n        if (s === \"\") {\n            return [\"\"];\n        }\n        else if (r = s.match(/^((?:\\w|\\\\\\d+|\\\\<\\d+>))\\?(.*)$/)) {\n            return this.parse(r[2], matches, curly_group).map(x => [r[1] + x, x]).flat();\n        }\n        else if (r = s.match(/^((?:\\w|\\\\\\d+|\\\\<\\d+>| \\+ | \\-> )+)(?!\\?)(.*)$/)) {\n            return this.parse(r[2], matches, curly_group).map(x => r[1] + x);\n        }\n        else if (s[0] === \"{\") {\n            var t = xregexp_1.default.matchRecursive(s, \"\\\\{\", \"\\\\}\\\\??\", 'g', { valueNames: ['between', 'left', 'match', 'right'] });\n            var rest = t.slice(3).map(x => x.value).join('');\n            if (isNaN(curly_group)) {\n                var i = 0;\n                var b = t[1].value.match(/^\\w+$/) ? t[1].value.split('').map(r => [r]) : t[1].value.split('|').map(x => this.parse(x, matches, i++));\n                i = 0;\n                return b.map(c => {\n                    var posts = this.parse(rest, matches, i++);\n                    var result = posts.map(x => c.map(r => r + x)).flat();\n                    if (t[2]['value'] === \"}?\")\n                        result = result.concat(posts);\n                    return result;\n                }).flat();\n            }\n            else {\n                var branches = t[1].value.match(/^\\w+$/) ? t[1].value.split('') : t[1].value.split('|').map(x => this.parse(x, matches, curly_group)).flat();\n                if (curly_group > branches.length)\n                    throw \"Uneven_Curly_Groups\";\n                var posts = this.parse(rest, matches, curly_group);\n                var result = posts.map(x => this.parse(branches[curly_group], matches, curly_group) + x);\n                if (t[2]['value'] === \"}?\")\n                    result = result.concat(posts);\n                return result;\n            }\n        }\n        else if (s[0] === \"[\") {\n            var t = xregexp_1.default.matchRecursive(s, \"\\\\[\", \"\\\\]\\\\??\", 'g', { valueNames: ['between', 'left', 'match', 'right'] });\n            var branches = t[1].value.match(/^\\w+$/) ? t[1].value.split('') : t[1].value.split('|').map(x => this.parse(x, matches, curly_group)).flat();\n            if (t[2]['value'] === \"]?\")\n                branches.push(\"\");\n            return this.parse(t.slice(3).map(x => x.value).join(''), matches, curly_group).map(x => branches.map(z => z + x)).flat();\n        }\n        else if (s[0] === \"(\") {\n            // TODO: Handle nested brackets properly\n            var t = xregexp_1.default.matchRecursive(s, \"\\\\(\", \"\\\\)\\\\??\", 'g', { valueNames: ['between', 'left', 'match', 'right'] });\n            var branches = t[1].value.match(/^\\w+$/) ? t[1].value.split('') : t[1].value.split('|').map(x => this.parse(x, matches, curly_group)).flat();\n            if (t[2]['value'] === \")?\")\n                branches.push(\"\");\n            return this.parse(t.slice(3).map(x => x.value).join(''), matches + 1, curly_group).map(x => branches.map(z => z + x.replace(new RegExp(\"\\\\\\\\\" + matches + \"|\\\\\\\\<\" + matches + \">\", 'g'), z))).flat();\n        }\n        else {\n            throw \"Unknown Character \" + s[0];\n        }\n    }\n}\nexports.default = Custom_Regex_Decomposer;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Custom_Regex_Decomposer_1 = __importDefault(require(\"./Custom_Regex_Decomposer\"));\nclass Transition_Rule {\n    constructor(init) {\n        this.is_mono = true;\n        this.reactants = [];\n        this.products = [];\n        this.decomposed = [];\n        this.rate = 1;\n        this.update(init);\n    }\n    toString() {\n        return '(' + this.rate.toString() + ') ' + [this.reactants, this.products].map(x => x.map(a => a.toString()).join(' + ')).join(' -> ');\n    }\n    update(p) {\n        // TODO: add error checking\n        Object.assign(this, p);\n        if (this.reactants.length !== this.products.length)\n            throw \"Reactants and products are not equal length\";\n        this.is_mono = this.reactants.length < 2 && this.products.length < 2;\n        this.decomposed = Custom_Regex_Decomposer_1.default.decompose(this.reactants.join(' + ') + \" -> \" + this.products.join(' + ')).map(a => a.split(/ \\+ | \\-> /)).filter(a => a.every(x => x !== \"\"));\n    }\n    static blankRule() {\n        return new Transition_Rule({ is_mono: true, reactants: [''], products: [''] });\n    }\n    matches(x, y) {\n        if (this.is_mono === (y !== undefined))\n            return [];\n        if (this.is_mono) {\n            return this.decomposed.filter(a => a[0] === x).map(a => [a[1]]);\n        }\n        else {\n            return this.decomposed.filter(a => a[0] === x && a[1] === y).map(a => [a[2], a[3]]);\n        }\n    }\n}\nexports.default = Transition_Rule;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nclass Colour_Map {\n    constructor(init) {\n        this.colours = new Set();\n        this.cache = new Map();\n        this.example_colours = ['#ffffff', '#000000', '#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#a9a9a9'].map(c => new Colour_1.default(c));\n        this.temp_colours = new Map();\n        if (init)\n            this.colours = init;\n    }\n    equals(c) {\n        return !!([...c.colours].filter(a => !this.colours.has(a)) || [...this.colours].filter(a => !c.colours.has(a)));\n    }\n    find_colour(s) {\n        let r = this.cache.get(s);\n        if (r === undefined) {\n            for (let c of this.colours) {\n                if ([...c.species.values()].some((s1) => s1.includes(s))) {\n                    r = c;\n                    break;\n                }\n            }\n            if (r === undefined) {\n                r = this.temp_colours.get(s);\n                if (r === undefined) {\n                    r = this.new_colour();\n                    if (r === undefined)\n                        r = new Colour_1.default(\"#FFFFFF\");\n                    this.add_temp(s, r);\n                    this.cache.set(s, r);\n                }\n            }\n        }\n        return r;\n    }\n    export() {\n        return [...this.colours.values()].map(c => '{' + c.name + '} ' + [...c.species.values()].map(s => s.toString()).join(' ') + ' : (' + c.rgb().join(',') + ')');\n    }\n    new_colour() {\n        this.cache.clear();\n        let c = this.example_colours.find((a) => {\n            if ([...this.temp_colours.values(), ...this.colours.values()].find((c) => c.hex() === a.hex()) !== undefined)\n                return false;\n            return true;\n        });\n        if (c === undefined) {\n            return new Colour_1.default(\"#000000\");\n        }\n        else {\n            return c;\n        }\n    }\n    add(c) {\n        this.cache.clear();\n        this.colours.add(c);\n    }\n    delete(c) {\n        this.cache.clear();\n        this.colours.delete(c);\n    }\n    add_temp(s, c) {\n        this.cache.clear();\n        this.temp_colours.set(s, c);\n    }\n    clear_temp() {\n        this.cache.clear();\n        this.temp_colours.clear();\n    }\n}\nexports.default = Colour_Map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Transition_State {\n    constructor(update_time, execution_time) {\n        this.old_cells = [];\n        this.new_cells = [];\n        this.new_transitions = null;\n        this.update_time = update_time;\n        this.execution_time = execution_time;\n    }\n    add_old_cell(x, y, old_val) {\n        this.old_cells.push([x, y, old_val]);\n    }\n    add_new_cell(x, y, new_val) {\n        this.new_cells.push([x, y, new_val]);\n    }\n    add_future_transitions(t) {\n        this.new_transitions = t;\n    }\n}\nexports.default = Transition_State;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse_import_files = exports.parse_code = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nconst Surface_CRN_1 = __importDefault(require(\"./Surface_CRN\"));\nfunction parse_rule(line) {\n    if ((line.match(/->/g) || []).length != 1)\n        return false;\n    let rate = 1;\n    line = line.replace(/\\((\\d*(?:\\.\\d+)?)\\)/, (_, x) => { rate = +x; return ''; });\n    let [start, end] = line.split('->').map(a => a.split('+').map(b => b.trim())); // Note change how transition rules are formed\n    //TODO: add more conditions (and error messages?)\n    if (start.length != end.length || start.length > 2 || start.length == 0)\n        return false;\n    return new Transition_Rule_1.default({ reactants: start, products: end, rate: rate, is_mono: start.length == 1 });\n}\nfunction parse_option(line) {\n    if ((line.match(/=/g) || []).length != 1)\n        return false;\n    return line.split('=').map(a => a.trim());\n}\nfunction parse_colour(line) {\n    let vars = line.match(/^(?:\\{([^}]+)\\})? *((?: *[^,: ]+,? *?)+) *: *\\((\\d+) *, *(\\d+) *, *(\\d+)\\)$/);\n    if (vars == null)\n        return false;\n    var sp = vars[2].split(/,\\s*|\\s+/).map(a => new Species_Matcher_1.default(a.trim()));\n    return new Colour_1.default({ name: vars[1] || vars[2], species: new Set(sp), red: +vars[3], green: +vars[4], blue: +vars[5] });\n}\nfunction parse_line(line, program) {\n    var rule = parse_rule(line);\n    if (rule !== false) {\n        program.rules.push(rule);\n        return true;\n    }\n    var name_colour = parse_colour(line);\n    if (name_colour !== false) {\n        program.colour_map.add(name_colour);\n        return true;\n    }\n    var option = parse_option(line);\n    if (option !== false) {\n        let [key, val] = option;\n        program.set_option(key, val);\n        return true;\n    }\n    return false;\n}\nfunction parse_init_state(line) {\n    // TODO: add more error checking\n    return line.split(/\\s+|,/);\n}\nfunction parse_code(data) {\n    let init_state_section = false;\n    let program = new Surface_CRN_1.default();\n    for (let line of data) {\n        line = line.trim().replace(/#.*/, \"\");\n        if (line == \"\")\n            continue;\n        if (!init_state_section) {\n            if (line == \"!START_INIT_STATE\") {\n                init_state_section = true;\n                continue;\n            }\n            parse_line(line, program);\n        }\n        else {\n            if (line == \"!END_INIT_STATE\") {\n                init_state_section = false;\n                continue;\n            }\n            let val = parse_init_state(line);\n            program.initial_state.push(val);\n        }\n    }\n    return program;\n}\nexports.parse_code = parse_code;\n// Import project as a list of files\n// TODO: change false to list of warnings\nasync function parse_import_files(input_files) {\n    if (!input_files) {\n        //TODO: show error\n        return false;\n    }\n    class Manifest_File {\n        constructor() {\n            this.data = [];\n            this.imported = false;\n        }\n    }\n    let manifest_maps = new Map();\n    ;\n    for (let file of input_files) {\n        var m = new Manifest_File();\n        m.data = (await file.text()).split(\"\\n\").map(a => a.trim().replace(/#.*/, ''));\n        manifest_maps.set(file.name, m);\n    }\n    for (let [key, m] of manifest_maps) {\n        for (let s of m.data) {\n            if (s.match(/^!INCLUDE /)) {\n                //TODO: replace includes\n            }\n        }\n    }\n    let lines = [];\n    for (let [_, m] of manifest_maps) {\n        if (!m.imported)\n            lines.push(...m.data);\n    }\n    return parse_code(lines);\n}\nexports.parse_import_files = parse_import_files;\n","import React from 'react';\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport FastForwardIcon from \"@mui/icons-material/FastForward\";\r\nimport FastRewindIcon from \"@mui/icons-material/FastRewind\";\r\nimport ForwardIcon from \"@mui/icons-material/Forward10\";\r\nimport ReplayIcon from \"@mui/icons-material/Replay10\";\r\nimport StopIcon from \"@mui/icons-material/Stop\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\ninterface HeaderProps {\r\n\tplayPressed : (_ : any) => void\r\n\tstepBackPressed : (_ : any) => void\r\n\tstepForwardPressed : (_ : any) => void\r\n\tfastBackwardPressed : (_ : any) => void\r\n\tfastForwardPressed : (_ : any) => void\r\n\tstopPressed : (_ : any) => void\r\n\tsimPlaying : boolean\r\n}\r\n\r\nexport default class HeaderComponent extends React.Component<HeaderProps, {}> {\r\n\tstopButton : Element | null = null;\r\n\tfastBackward : Element | null = null;\r\n\tstepBackward : Element | null = null;\r\n\tplayButton : Element | null = null;\r\n\tstepForward : Element | null = null;\r\n\tfastForward : Element | null = null;\r\n\r\n\trender() {\r\n\t\treturn <Grid item container xs={12}>\r\n\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t<Typography variant=\"h3\" className=\"grid title\">\r\n\t\t\t\t\tSurface CRN Simulator\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t<IconButton onClick={this.props.stopPressed}> <StopIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.fastBackwardPressed}> <ReplayIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.stepBackPressed}> <FastRewindIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.playPressed}>\r\n\t\t\t\t\t{this.props.simPlaying\r\n\t\t\t\t\t\t? <PauseIcon sx={{fontSize : 40}} />\r\n\t\t\t\t\t\t: <PlayArrowIcon sx={{fontSize : 40}} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.stepForwardPressed}> <FastForwardIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t\t<IconButton onClick={this.props.fastForwardPressed}> <ForwardIcon sx={{fontSize : 40}} /> </IconButton>\r\n\t\t\t</Grid>\r\n\t\t</Grid>;\r\n\t}\r\n}\r\n","\r\nclass Point {\r\n\tx: number;\r\n\ty: number;\r\n\r\n\tstatic origin : Point = new Point(0,0);\r\n\r\n\tconstructor(x : number = 0, y : number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tadd(p : Point) { return new Point(this.x + p.x, this.y + p.y) };\r\n\tsubtract(p : Point) { return new Point(this.x - p.x, this.y - p.y) };\r\n\tmultiply(p : Point) { return new Point(this.x * p.x, this.y * p.y) };\r\n\tscale(s : number) { return new Point(this.x * s, this.y * s) };\r\n\tequals(p : Point) { return this.x === p.x && this.y === p.y };\r\n\r\n\tmagnitude() { return Math.sqrt(this.x**2 + this.y**2)}\r\n};\r\n\r\nexport default Point;\r\n","import React from 'react';\r\nimport Surface_CRN, {Colour} from 'surface_crn';\r\nimport Point from './PointClass';\r\n\r\ninterface GridDisplayProps {\r\n\tcurrent_state : string[][]\r\n\tmodel : Surface_CRN\r\n\tgeometry : 'square'|'hex'\r\n\tsize : number\r\n\tzoom : (b : boolean) => number\r\n\tselectedCells : (s : Point[], val : string) => void\r\n\tsimulation? : boolean\r\n}\r\n\r\ninterface GridDisplayState extends React.ComponentState {\r\n\tdata: [string, Colour][][]\r\n\toffset : Point\r\n\tselected_cells : Point[]\r\n\tsim_time : number | null\r\n}\r\n\r\nclass GridDisplayComponent extends React.Component<GridDisplayProps, GridDisplayState> {\r\n\r\n\tcanvas : HTMLCanvasElement | null = null;\r\n\tmouseDown : boolean = false;\r\n\tmousePosition : Point | null = null;\r\n\tmouseMoved : boolean = false;\r\n\r\n\tconstructor(props : GridDisplayProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata : this.createData(props.current_state),\r\n\t\t\toffset : Point.origin,\r\n\t\t\tselected_cells : [],\r\n\t\t\tsim_time : props.simulation ? 0 : null\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <canvas ref={elem => this.canvas = elem} />\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// render all elements\r\n\t\tthis.canvas!.addEventListener('wheel', this.scrollZoom.bind(this), {passive : false});\r\n\t\tthis.canvas!.addEventListener('mousedown', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mouseup', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mousemove', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('dblclick', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mouseenter', this.mouseEvents.bind(this));\r\n\t\tthis.canvas!.addEventListener('mouseleave', this.mouseEvents.bind(this));\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\thexCoord(xcoord : number, ycoord : number) {\r\n\t\tlet gridHeight = (0.75+0.375)*this.props.size;\r\n\t\tlet gridWidth = this.props.size * Math.sin(2 * Math.PI/6)*2*0.75;\r\n\t\tlet c = (0.75-0.375)*this.props.size;\r\n\t\tlet m = c/(gridWidth/2);\r\n\r\n\t\t// Find the row and column of the box that the point falls in.\r\n\t\tlet row = Math.floor((ycoord+c/2) / gridHeight);\r\n\t\tlet column;\r\n\r\n\t\tlet rowIsOdd = (row & 1) === 1;\r\n\t\tcolumn = Math.floor(xcoord / gridWidth - (rowIsOdd ? 0.5 : 0));\r\n\r\n\t\t// Work out the position of the point relative to the box it is in\r\n\t\tlet relY = (ycoord + c/2) - (row * gridHeight);\r\n\t\tlet relX = xcoord - (column * gridWidth) - (rowIsOdd ? gridWidth/2 : 0);\r\n\r\n\t\t// Work out if the point is above either of the hexagon's top edges\r\n\t\tif (relY < (-m * relX) + c) {\r\n\t\t\trow--;\r\n\t\t\tif (!rowIsOdd) column--;\r\n\t\t} else if (relY < (m * relX) - c) {\r\n\t\t\trow--;\r\n\t\t\tif (rowIsOdd) column++;\r\n\t\t}\r\n\t\treturn [column, row];\r\n\t}\r\n\r\n\tmouseEvents(m : MouseEvent) {\r\n\t\tswitch (m.type) {\r\n\t\t\tcase \"mousedown\":\r\n\t\t\t\tthis.mouseDown = true;\r\n\t\t\t\tthis.mousePosition = new Point(m.x, m.y);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mouseenter\":\r\n\t\t\tcase \"mouseleave\":\r\n\t\t\tcase \"mouseup\":\r\n\t\t\t\tif (this.mouseDown && !this.mouseMoved) {\r\n\t\t\t\t\tconst rect = this.canvas!.getBoundingClientRect();\r\n\t\t\t\t\tconst xcoord = m.x - this.state.offset.x - rect.x;\r\n\t\t\t\t\tconst ycoord = m.y - this.state.offset.y - rect.y;\r\n\t\t\t\t\tif (this.props.geometry === \"square\") {\r\n\t\t\t\t\t\tthis.setState({selected_cells : [new Point(Math.floor(xcoord/this.props.size), Math.floor(ycoord/this.props.size))]});\r\n\t\t\t\t\t} else if (this.props.geometry === \"hex\") {\r\n\t\t\t\t\t\tlet [column, row] = this.hexCoord(xcoord, ycoord);\r\n\t\t\t\t\t\tthis.setState({selected_cells : [new Point(Math.floor(column), Math.floor(row))]});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.mouseDown = false;\r\n\t\t\t\tthis.mouseMoved = false;\r\n\t\t\t\tthis.mousePosition = null;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mousemove\":\r\n\t\t\t\tif (this.mouseDown) {\r\n\t\t\t\t\tlet offset = this.mousePosition!.subtract(new Point(m.x, m.y));\r\n\t\t\t\t\t// Add a bit of give before registering a pan\r\n\t\t\t\t\tif (this.mouseMoved || offset.magnitude() > 5) {\r\n\t\t\t\t\t\tthis.mousePosition = new Point(m.x, m.y);\r\n\t\t\t\t\t\tthis.mouseMoved = true;\r\n\t\t\t\t\t\tthis.setState({offset : this.state.offset.subtract(offset)});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"dblclick\":\r\n\t\t\t\t/*\r\n\t\t\t\tconst rect = this.canvas!.getBoundingClientRect();\r\n\t\t\t\tconst xcoord = m.x - this.state.offset.x - rect.x;\r\n\t\t\t\tconst ycoord = m.y - this.state.offset.y - rect.y;\r\n\t\t\t\tif (this.props.geometry === \"square\") {\r\n\t\t\t\t\tthis.setState({selected_cells : [new Point(Math.floor(xcoord/this.props.size), Math.floor(ycoord/this.props.size))]});\r\n\t\t\t\t} else if (this.props.geometry === \"hex\") {\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Edit current cell\r\n\t\t\t\t*/\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tm.preventDefault();\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps : GridDisplayProps, prevState : GridDisplayState) {\r\n\t\tif (prevProps.model !== this.props.model\r\n\t\t|| prevProps.geometry !== this.props.geometry\r\n\t\t|| !prevState.offset.equals(this.state.offset)\r\n\t\t|| prevProps.size !== this.props.size\r\n\t\t|| (prevState.sim_time !== null && prevState.sim_time > 0 && this.state.sim_time === 0)) {\r\n\t\t\tthis.draw();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (prevProps.current_state !== this.props.current_state) {\r\n\t\t\tthis.setState({data : this.createData(this.props.current_state)});\r\n\t\t}\r\n\r\n\t\tif (prevState !== this.state) {\r\n\t\t\tif (prevState.selected_cells !== this.state.selected_cells) {\r\n\t\t\t\tlet val : string | null = this.state.selected_cells.length < 1 ? \"\" : null;\r\n\t\t\t\tfor (let i of this.state.selected_cells) {\r\n\t\t\t\t\tlet r = (this.state.data?.[i.y]?.[i.x] || [\"\"])[0];\r\n\t\t\t\t\tif (val === null) val = r;\r\n\t\t\t\t\tif (val !== r) val = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.selectedCells(this.state.selected_cells, val!);\r\n\t\t\t}\r\n\r\n\t\t\tlet canvasRender = this.canvas!.getContext(\"2d\");\r\n\t\t\tif (canvasRender === null || !(canvasRender instanceof CanvasRenderingContext2D)) return;\r\n\t\t\tconst ctx : CanvasRenderingContext2D = canvasRender;\r\n\t\t\tif (prevState.data !== this.state.data) {\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tfor (let [y, row] of this.state.data.entries()) {\r\n\t\t\t\t\tfor (let [x, val] of row.entries()) {\r\n\t\t\t\t\t\tlet d = prevState.data?.[y]?.[x];\r\n\t\t\t\t\t\tif (d === undefined || d[0] !== val[0] || d[1].hex() !== val[1].hex()) {\r\n\t\t\t\t\t\t\tthis.drawCell(ctx, x, y, val) && count++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.addExtraDetail(ctx, prevState);\r\n\t\t}\r\n\t}\r\n\r\n\tscrollZoom(e : WheelEvent) {\r\n\t\t//TODO: zoom in on mouse location\r\n\t\tlet zoomRatio = 1;\r\n\t\tif (e.deltaY < 0) {\r\n\t\t\tzoomRatio = this.props.zoom(true);\r\n\t\t} else if (e.deltaY > 0) {\r\n\t\t\tzoomRatio = this.props.zoom(false);\r\n\t\t}\r\n\t\te.preventDefault();\r\n\t\tconst rect = this.canvas!.getBoundingClientRect();\r\n\t\tconst x = (this.state.offset.x - e.x + rect.x) / zoomRatio + e.x - rect.x;\r\n\t\tconst y = (this.state.offset.y - e.y + rect.y) / zoomRatio + e.y - rect.y;\r\n\t\tthis.setState({offset : new Point(x, y)});\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tif (this.canvas === null) return;\r\n\t\tconst rect = (this.canvas.parentNode! as Element).getBoundingClientRect();\r\n\t\tthis.canvas.width = Math.floor(rect.width * window.devicePixelRatio);\r\n\t\tthis.canvas.height = Math.floor(rect.height * window.devicePixelRatio);\r\n\t\tthis.canvas.style.width = Math.floor(rect.width) + 'px';\r\n\t\tthis.canvas.style.height = Math.floor(rect.height) + 'px';\r\n\t\tconst canvasRender = this.canvas.getContext(\"2d\");\r\n\t\tif (canvasRender === null || !(canvasRender instanceof CanvasRenderingContext2D)) return;\r\n\t\tconst ctx : CanvasRenderingContext2D = canvasRender;\r\n\t\tctx.clearRect(0,0, ctx.canvas.width, ctx.canvas.height);\r\n\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\r\n\t\tctx.translate(this.state.offset.x, this.state.offset.y);\r\n\r\n\t\tlet data = this.createData(this.props.current_state);\r\n\t\tfor (let [y, row] of data.entries()) {\r\n\t\t\tfor (let [x, val] of row.entries()) {\r\n\t\t\t\tthis.drawCell(ctx, x, y, val);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.addExtraDetail(ctx);\r\n\t}\r\n\r\n\taddExtraDetail(ctx : CanvasRenderingContext2D, prevState? : GridDisplayState) {\r\n\r\n\t\tif (this.state.sim_time !== null) {\r\n\t\t\tctx.fillStyle = \"#FFFFFF\";\r\n\t\t\tlet xcoord = ctx.canvas.width/window.devicePixelRatio - 80 - this.state.offset.x;\r\n\t\t\tlet ycoord = ctx.canvas.height/window.devicePixelRatio - 30 - this.state.offset.y;\r\n\t\t\tctx.fillRect(xcoord, ycoord, 80, 30);\r\n\r\n\t\t\tctx.fillStyle = \"#000000\";\r\n\t\t\tctx.textAlign = 'left';\r\n\t\t\tctx.textBaseline = 'middle';\r\n\t\t\tctx.font = \"15px Arial\";\r\n\t\t\tctx.fillText(\"T: \"+this.state.sim_time.toFixed(2), xcoord + 4, ycoord + 15, 80);\r\n\t\t}\r\n\t\tfor (let z of [prevState, this.state]) {\r\n\t\t\tif (z !== undefined) {\r\n\t\t\t\tfor (let p of z.selected_cells) {\r\n\t\t\t\t\tctx.lineWidth = 1;\r\n\t\t\t\t\tctx.strokeStyle = \"rgba(0,204,256,0.3)\";\r\n\t\t\t\t\tctx.fillStyle = ctx.strokeStyle;\r\n\t\t\t\t\tif (this.props.geometry === \"square\") {\r\n\t\t\t\t\t\tif (z === prevState) {\r\n\t\t\t\t\t\t\tthis.drawCell(ctx, p.x, p.y, this.state.data?.[p.y]?.[p.x]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.fillRect(p.x*this.props.size, p.y*this.props.size, this.props.size, this.props.size);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (this.props.geometry === \"hex\") {\r\n\t\t\t\t\t\tif (z === prevState) {\r\n\t\t\t\t\t\t\tthis.drawCell(ctx, p.x, p.y, this.state.data?.[p.y]?.[p.x]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet xcoord = (p.x + (p.y&1)/2 + 0.5)*this.props.size*Math.sin(2 * Math.PI/6)*2*0.75;\r\n\t\t\t\t\t\t\tlet ycoord = (p.y + 0.5)*this.props.size*0.75*2*0.75;\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tfor (var i = 0; i < 6; i++) {\r\n\t\t\t\t\t\t\t\tctx.lineTo(xcoord + this.props.size * Math.sin(2 * Math.PI / 6 * i)*0.75, ycoord + this.props.size * Math.cos(2 * Math.PI / 6 * i)*0.75);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateData(current_state : string[][]) {\r\n\t\tthis.props.model.colour_map.clear_temp();\r\n\t\tvar data : [string, Colour][][] = [];\r\n\t\tfor (var [y, row] of current_state.entries()) {\r\n\t\t\tdata[y] = [];\r\n\t\t\tfor (var [x, elem] of row.entries()) {\r\n\t\t\t\tlet colour = this.props.model.colour_map.find_colour(elem);\r\n\t\t\t\tif (colour == null) {\r\n\t\t\t\t\tcolour = this.props.model.colour_map.new_colour();\r\n\t\t\t\t\tthis.props.model.colour_map.add_temp(elem, colour);\r\n\t\t\t\t}\r\n\t\t\t\tdata[y][x] = [elem, colour];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\tupdateData(current_state : string[][]) {\r\n\t\tvar data = this.createData(current_state);\r\n\t\tthis.setState({data : data});\r\n\t}\r\n\r\n\tdrawCell(ctx : CanvasRenderingContext2D, x : number, y : number, val : [string, Colour] | undefined) {\r\n\t\tlet coord : Point;\r\n\t\tif (this.props.geometry === \"square\") {\r\n\t\t\tcoord = new Point((x+0.5)*this.props.size, (y+0.5)*this.props.size);\r\n\t\t} else {\r\n\t\t\tcoord = new Point(\r\n\t\t\t\t(x + (y&1)/2 + 0.5)*this.props.size*Math.sin(2 * Math.PI/6)*2*0.75,\r\n\t\t\t\t(y + 0.5)*this.props.size*0.75*2*0.75\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (coord.x - this.props.size + this.state.offset.x > this.canvas!.width/window.devicePixelRatio || coord.y - this.props.size + this.state.offset.y > this.canvas!.height/window.devicePixelRatio) return false;\r\n\t\tif (coord.x + this.props.size + this.state.offset.x < 0 || coord.y + this.props.size + this.state.offset.y < 0) return false;\r\n\t\t// if (this.props.size < 1 && (this.props.size*coord.x % 1 < this.props.size || this.props.size*coord.y % 1 < this.props.size)) return false\r\n\r\n\t\tif (val === undefined) {\r\n\t\t\tctx.fillStyle = 'rgba(0,0,0,0)';\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(' + val[1].rgb().join(',') + ')';\r\n\t\t\tctx.strokeStyle = ctx.fillStyle;\r\n\t\t}\r\n\r\n\t\tif (this.props.geometry === \"square\") {\r\n\t\t\tif (val === undefined) {\r\n\t\t\t\tctx.clearRect(coord.x - this.props.size/2, coord.y - this.props.size/2, this.props.size, this.props.size);\r\n\t\t\t} else {\r\n\t\t\t\tctx.fillRect(coord.x - this.props.size/2, coord.y - this.props.size/2, this.props.size, this.props.size);\r\n\t\t\t}\r\n\t\t} else if (this.props.geometry === \"hex\") {\r\n\t\t\tctx.beginPath();\r\n\t\t\tfor (var i = 0; i < 6; i++) {\r\n\t\t\t\tctx.lineTo(coord.x + this.props.size * [0,0.645,0.645,0,-0.645,-0.645][i], coord.y + this.props.size * [0.75,0.375,-0.375,-0.75,-0.375,0.375][i]);\r\n\t\t\t}\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.strokeStyle = ctx.fillStyle;\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\r\n\t\tif (this.props.size >= 12) {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\tlet [r,g,b] = val[1].rgb();\r\n\t\t\t\tctx.fillStyle = (r * 0.299 + g * 0.587 + b * 0.114) > 186 ? 'black' : 'white';\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.font = \"11px Arial\";\r\n\t\t\t\tctx.fillText(val[0], coord.x, coord.y, this.props.size);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport default GridDisplayComponent\r\n","import React from 'react';\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport SurfaceCRN, {Transition_Rule} from 'surface_crn';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\ninterface TransitionRulesProps {\r\n\tmodel : SurfaceCRN\r\n\trules : Transition_Rule[]\r\n\taddRule : () => void\r\n\tdeleteRule : (r : Transition_Rule) => void\r\n}\r\n\r\nexport default class TransitionRulesComponent extends React.Component<TransitionRulesProps, {}> {\r\n\r\n\trender() {\r\n\t\t// TODO: figure out better way of unique indexing\r\n\r\n\t\treturn <Grid item xs={12} sm={8}>\r\n\t\t\t<Card sx={{height : \"100%\"}}>\r\n\t\t\t\t<CardHeader title=\"Transition Rules\" />\r\n\r\n\t\t\t\t<Grid container item id=\"colour_container\" sx={{\"overflow-y\" : \"auto\", \"max-height\" : \"20rem\"}}>\r\n\t\t\t\t\t<Table size=\"small\">\r\n\t\t\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t\t\t{this.props.rules.map((r : Transition_Rule, i : number) =>\r\n\t\t\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t\t\t<RuleRowComponent key={r.toString() + i.toString()} rule={r} deleteRule={() => this.props.deleteRule(r)} />\r\n\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button variant=\"outlined\" onClick={this.props.addRule}> Add Rule </Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\r\n\t\t</Grid>;\r\n\t}\r\n}\r\n\r\ninterface RuleRowState {\r\n\treactant0 : string,\r\n\treactant1 : string,\r\n\tproduct0 : string,\r\n\tproduct1 : string,\r\n\trate : number,\r\n}\r\n// TODO: Handle mono transitions properly\r\nclass RuleRowComponent extends React.Component<{rule: Transition_Rule, deleteRule : React.MouseEventHandler<Element>}, RuleRowState> {\r\n\trule : Transition_Rule;\r\n\tdeleteRule : React.MouseEventHandler<Element>;\r\n\r\n\tconstructor(props : {rule : Transition_Rule, deleteRule : React.MouseEventHandler<Element>}) {\r\n\t\tsuper(props);\r\n\t\tthis.rule = props.rule;\r\n\t\tthis.state = {\r\n\t\t\treactant0 : props.rule.reactants[0],\r\n\t\t\treactant1 : !props.rule.is_mono && props.rule.reactants.length > 1 ? props.rule.reactants[1] : '',\r\n\t\t\tproduct0 : props.rule.products[0],\r\n\t\t\tproduct1 : !props.rule.is_mono && props.rule.products.length > 1 ? props.rule.products[1] : '',\r\n\t\t\trate : props.rule.rate,\r\n\t\t}\r\n\t\tthis.deleteRule = props.deleteRule;\r\n\t}\r\n\r\n\trender() {\r\n\t\t// TODO: gray out mono'd rules\r\n\t\t// TODO: make invalid rules red\r\n\r\n\t\treturn <TableRow hover>\r\n\t\t\t<TableCell> <TextField variant=\"filled\" type=\"number\" value={this.state.rate} onChange={this.updateRule.bind(this)} style={{width : \"5rem\"}}inputProps={{ inputMode: 'numeric', step : 0.1, pattern: '[0-9]+(\\\\.[0-9]+)?', className : \"rulesRate\", min : 0, style: {\"padding\" : \"5px\"}}} /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\"> <TextField variant=\"filled\" value={this.state.reactant0} onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesReactant0\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <AddIcon /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <TextField variant=\"filled\" value={this.state.reactant1} className=\"rulesReactant1\" onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesReactant1\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <ArrowForwardIcon /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <TextField variant=\"filled\" value={this.state.product0} className=\"rulesProduct0\" onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesProduct0\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <AddIcon /> </TableCell>\r\n\t\t\t<TableCell padding=\"none\" align=\"center\"> <TextField variant=\"filled\" value={this.state.product1} className=\"rulesProduct1\" onChange={this.updateRule.bind(this)} inputProps={{className:\"rulesProduct1\", style: {\"padding\" : \"5px\"}}}/> </TableCell>\r\n\t\t\t<TableCell> <IconButton onClick={this.deleteRule}> <DeleteIcon/> </ IconButton> </TableCell>\r\n\t\t</TableRow>;\r\n\t}\r\n\r\n\tupdateRule(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet reactants = [this.state.reactant0, this.state.reactant1];\r\n\t\tlet products = [this.state.product0, this.state.product1];\r\n\t\tlet newVal : string = e.currentTarget.value;\r\n\t\tif (e.target.classList.contains(\"rulesReactant0\")) {\r\n\t\t\treactants[0] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({reactants : reactants.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({reactant0 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesReactant1\")) {\r\n\t\t\treactants[1] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({reactants : reactants.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({reactant1 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesProduct0\")) {\r\n\t\t\tproducts[0] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({products : products.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({product0 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesProduct1\")) {\r\n\t\t\tproducts[1] = newVal;\r\n\t\t\ttry {\r\n\t\t\t\tthis.rule.update({products : products.filter(a => a !== \"\")});\r\n\t\t\t} catch {\r\n\t\t\t\t// set to red\r\n\t\t\t}\r\n\t\t\tthis.setState({product1 : newVal});\r\n\t\t} else if (e.target.classList.contains(\"rulesRate\")) {\r\n\t\t\tproducts[1] = newVal;\r\n\t\t\tthis.rule.update({rate : +newVal});\r\n\t\t\tthis.setState({rate : +newVal});\r\n\t\t}\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport SurfaceCRN, {Colour, Species_Matcher, Colour_Map} from 'surface_crn';\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport ArrowDropDownCircleTwoToneIcon from '@mui/icons-material/ArrowDropDownCircleTwoTone';\r\nimport ArrowDropDownCircleOutlinedIcon from '@mui/icons-material/ArrowDropDownCircleOutlined';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport TextField from '@mui/material/TextField';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\ninterface ColourMappingProps {\r\n\tmodel : SurfaceCRN\r\n\tcolour_map : Colour_Map\r\n\trefreshColour : () => void\r\n\taddColour : () => void\r\n\tdeleteColour : (c : Colour) => void\r\n}\r\n\r\nexport default class ColourMappingComponent extends React.Component<ColourMappingProps, {}> {\r\n\r\n\trender() {\r\n\t\treturn <Grid item xs={12} sm={4}>\r\n\t\t\t<Card sx={{height : \"100%\"}}>\r\n\t\t\t\t<CardHeader title=\"Colour Mapping\" />\r\n\t\t\t\t<Grid container item sx={{\"overflow-y\" : \"auto\", \"max-height\" : \"28rem\", height : \"100%\"}}>\r\n\t\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t\t{[...this.props.colour_map.colours.values()].map((v, i) =>\r\n\t\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t\t<ColourRowComponent colour={v} onChange={this.props.refreshColour} deleteColour={this.props.deleteColour}/>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button variant=\"outlined\" onClick={this.props.addColour.bind(this)}> Add Colour </Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>;\r\n\t}\r\n}\r\n\r\ninterface ColourRowState {\r\n\tcolour : string\r\n\tisOpen : boolean\r\n\tspecies : Set<Species_Matcher>\r\n\tname : string\r\n\tshowList : boolean\r\n}\r\n\r\ninterface ColourRowProps {\r\n\tcolour : Colour\r\n\tonChange : () => void\r\n\tdeleteColour : (c : Colour) => void\r\n}\r\n\r\nclass ColourRowComponent extends React.Component<ColourRowProps,ColourRowState> {\r\n\tpickerRef : HTMLDivElement | null = null;\r\n\tmouseDownInElement : boolean = false;\r\n\r\n\tconstructor(p : ColourRowProps) {\r\n\t\tsuper(p);\r\n\t\tthis.state = {colour : p.colour.hex(), isOpen : false, species : p.colour.species, name: p.colour.name, showList : false};\r\n\r\n\t\tthis.handleClickOutside = this.handleClickOutside.bind(this);\r\n\t}\r\n\r\n\thandleClickOutside(event : MouseEvent) {\r\n\t\t// TODO:  fix click on swatch to close picker\r\n\t\tif (!this.mouseDownInElement && this.pickerRef && !this.pickerRef.contains(event.target as Node)) {\r\n\t\t\tthis.setState({isOpen : false});\r\n\t\t}\r\n\t}\r\n\r\n\thandleDownClick(event : MouseEvent) {\r\n\t\tthis.mouseDownInElement = (!this.pickerRef || this.pickerRef.contains(event.target as Node));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('mousedown', this.handleDownClick.bind(this));\r\n\t\tdocument.addEventListener('mouseup', this.handleClickOutside.bind(this));\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('mousedown', this.handleDownClick);\r\n\t\tdocument.removeEventListener('mouseup', this.handleClickOutside);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// TODO: disallow invalid chars in name\r\n\t\t// TODO: make swatch more integrated (background colour of text? left tab thing)\r\n\t\treturn <Grid item xs={12}>\r\n\t\t\t<div className=\"picker\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"swatch\"\r\n\t\t\t\t\tstyle={{ backgroundColor: this.props.colour.hex() }}\r\n\t\t\t\t\tonClick={() => !this.state.isOpen && this.setState({isOpen : !this.state.isOpen})}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField variant=\"filled\" fullWidth margin=\"none\" label=\"Name\" value={this.state.name} onChange={(e) => {let s = e.currentTarget.value; this.setState({name : s}); this.props.colour.name = s}} />\r\n\t\t\t\t<IconButton onClick={_ => this.setState({showList : !this.state.showList})}>\r\n\t\t\t\t\t{this.state.showList ? <ArrowDropDownCircleTwoToneIcon /> : <ArrowDropDownCircleOutlinedIcon />}\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton onClick={_ => this.props.deleteColour(this.props.colour)}>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t{this.state.isOpen && (\r\n\t\t\t\t<div className=\"popover\" ref={(elem) => this.pickerRef = elem} >\r\n\t\t\t\t\t<HexColorPicker color={this.props.colour.hex()} onChange={(s) => {this.setState({colour : s}); this.updateColour(s)}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<TransitionGroup>\r\n\t\t\t\t{this.state.showList &&\r\n\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t\t\t{[...this.state.species.values()].map((a : Species_Matcher) =>\r\n\t\t\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t\t\t<TextField value={a.original_string} onChange={this.updateSpecies(a).bind(this)} inputProps={{style: {\"padding\" : \"5px\"}}}/>\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={() => this.deleteMatcher(a)}> <DeleteIcon /> </IconButton>\r\n\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick = {this.addMatcher.bind(this)}> Add Species </Button>\r\n\t\t\t\t\t</Collapse>\r\n\t\t\t\t}\r\n\t\t\t</TransitionGroup>\r\n\t\t</Grid>;\r\n\t}\r\n\r\n\tupdateColour(s : string) {\r\n\t\tthis.props.colour.update_colour(Colour.hex2rgb(s));\r\n\t\tthis.props.onChange();\r\n\t}\r\n\r\n\tupdateSpecies(a : Species_Matcher) {\r\n\t\treturn (e : React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\ta.update_matched(e.target.value);\r\n\t\t\tthis.setState({species : this.props.colour.species});\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\taddMatcher() {\r\n\t\tthis.props.colour.add_matcher(\"\");\r\n\t\tthis.setState({species : this.props.colour.species});\r\n\t}\r\n\tdeleteMatcher(m : Species_Matcher) {\r\n\t\tthis.props.colour.delete_matcher(m);\r\n\t\tthis.setState({species : this.props.colour.species});\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from '@mui/material/Button';\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select, {SelectChangeEvent} from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n\r\ninterface ImportProps {\r\n\timport_code : () => Promise<void>\r\n\texport_code : () => void\r\n\timport_example : (s : string) => void\r\n}\r\n\r\ninterface ImportState {\r\n\texample_selected : string\r\n}\r\n\r\nexport class ImportExportComponent extends React.Component<ImportProps, ImportState> {\r\n\r\n\tpublic constructor(props: ImportProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {example_selected : \"\"}\r\n\t}\r\n\r\n\r\n\trender () {\r\n\t\tconst example_files = [\r\n\t\t\t{ value: './examples/two-bit-adder.txt', label: 'Two Bit Adder' },\r\n\t\t\t{ value: './examples/two-bit-adder_new.txt', label: 'Two Bit Adder New' },\r\n\t\t\t{ value: './examples/alternate_line_builder.txt', label: 'Line Builder' },\r\n\t\t\t{ value: './examples/Brusselator.txt', label: 'Brusselator' },\r\n\t\t\t{ value: './examples/busy_beaver.txt', label: 'Busy Beaver' },\r\n\t\t\t{ value: './examples/ertl.txt', label: 'Ertl Oscillator' },\r\n\t\t\t{ value: './examples/game_of_life_5x5_circuit.txt', label: 'GoL Five by Five' },\r\n\t\t\t{ value: './examples/game_of_life_one_to_one.txt', label: 'GoL One to One' },\r\n\t\t\t{ value: './examples/GH_big_spiral.txt', label: 'Greenberg-Hastings Big spiral' },\r\n\t\t\t{ value: './examples/majority_asynchronous.txt', label: 'Majority Asynchronous' },\r\n\t\t\t{ value: './examples/molecular_walker.txt', label: 'Molecular Walker' },\r\n\t\t\t{ value: './examples/parens_matcher.txt', label: 'Parens Matcher' },\r\n\t\t\t{ value: './examples/sierpinski_1D_synch.txt', label: '1D Sierpinski' },\r\n\t\t\t{ value: './examples/smarter_scout_ant.txt', label: 'Smarter Scout Ant' }\r\n\t\t]\r\n\r\n\t\treturn <Grid item xs={12} sm={4}>\r\n\t\t\t\t<Card sx={{height : \"100%\"}}>\r\n\t\t\t\t\t<CardHeader title=\"Import/Export\" />\r\n\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t<InputLabel id=\"example-label\">Example</InputLabel>\r\n\t\t\t\t\t\t\t\t<Select label=\"example-label\" value={this.state.example_selected} onChange={ (e : SelectChangeEvent<string>) => this.setState({example_selected : e.target.value})} autoWidth>\r\n\t\t\t\t\t\t\t\t\t{example_files.map(a => <MenuItem value={a.value}> {a.label} </MenuItem>)}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" disabled={this.state.example_selected === \"\"} type=\"submit\" id=\"import_example\" onClick={() => this.props.import_example(this.state.example_selected)}> Import </Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button variant=\"contained\" component=\"label\">\r\n\t\t\t\t\t\t\tImport File(s)\r\n\t\t\t\t\t\t\t<input type=\"file\" id=\"import_input\" multiple hidden onChange={this.props.import_code}/>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"contained\" id=\"export\" onClick={this.props.export_code}> Export File </Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>;\r\n\t}\r\n}\r\n\r\nexport default ImportExportComponent;\r\n","import React from 'react';\r\nimport Surface_CRN, {Transition_Rule, Colour, Colour_Map} from 'surface_crn';\r\nimport './index.css';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport GridDisplayComponent from './components/GridDisplayComponent';\r\nimport TransitionRulesComponent from './components/TransitionRulesComponent';\r\nimport ColourMappingComponent from './components/ColourMappingComponent';\r\nimport ImportExportComponent from './components/ImportExportComponent';\r\nimport Point from './components/PointClass';\r\n\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Card from \"@mui/material/Card\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport HexagonIcon from '@mui/icons-material/Hexagon';\r\nimport SquareIcon from '@mui/icons-material/Square';\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nconst theme = createTheme({\r\n\tpalette: {\r\n\t\tmode: 'dark',\r\n\t\tprimary: {\r\n\t\t\tmain: '#2e7d32',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#f50057',\r\n\t\t},\r\n\t},\r\n});\r\n\r\n\r\ninterface SurfaceCRNappState {\r\n\tshown_tab : number\r\n\r\n\tmodel : Surface_CRN\r\n\tsim_size : number\r\n\tgeometry : \"hex\" | \"square\"\r\n\tcolour_map : Colour_Map\r\n\trules : Transition_Rule[]\r\n\r\n\tplaying_simulation : boolean\r\n\r\n\teditValue : string\r\n\tselectedCells : Point[]\r\n\trngSeed : string\r\n\tfps : number\r\n\tspeedup_factor : number\r\n}\r\n\r\nexport default class SurfaceCRNapp extends React.Component<{}, SurfaceCRNappState> {\r\n\r\n\tinitial_state_component : GridDisplayComponent | null = null;\r\n\ttransition_state_component : TransitionRulesComponent | null = null;\r\n\tsimulator_component : GridDisplayComponent | null = null;\r\n\theader_component : HeaderComponent | null = null;\r\n\r\n\tmodel_tabs : HTMLButtonElement | null = null;\r\n\ttoolbarInput : HTMLInputElement | null = null;\r\n\r\n\tconstructor(_ : {}) {\r\n\t\tsuper(_);\r\n\t\tlet model = new Surface_CRN({geometry : \"square\", initial_state : Array.from({length:20}, () => (Array.from({length:20}, () => 'I')))});\r\n\t\tthis.state = {\r\n\t\t\tshown_tab : 0,\r\n\r\n\t\t\tmodel : model,\r\n\t\t\tsim_size : model.pixels_per_node,\r\n\t\t\tgeometry : model.geometry,\r\n\t\t\tcolour_map : model.colour_map,\r\n\t\t\trules : model.rules,\r\n\r\n\t\t\tplaying_simulation : false,\r\n\r\n\t\t\teditValue : \"\",\r\n\t\t\tselectedCells : [],\r\n\t\t\trngSeed : (model.rng_seed || \"\").toString(),\r\n\t\t\tfps : model.fps,\r\n\t\t\tspeedup_factor : model.speedup_factor\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <ThemeProvider theme={theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid container spacing={1} sx={{\"margin\" : \"auto\", \"width\":\"98%\", \"height\": \"98%\"}}>\r\n\t\t\t\t\t<HeaderComponent playPressed={this.playPressed.bind(this)} stepBackPressed={this.stepBackwardPressed.bind(this)} stepForwardPressed={this.stepForwardPressed.bind(this)} fastBackwardPressed={this.fastBackwardPressed.bind(this)} fastForwardPressed={this.fastForwardPressed.bind(this)} stopPressed={this.stopPressed.bind(this)} simPlaying={this.state.playing_simulation} ref={elem => this.header_component = elem}/>\r\n\t\t\t\t\t<Grid item xs={12} sm={8}>\r\n\t\t\t\t\t\t<Card sx={{\"height\" : \"35rem\"}}>\r\n\t\t\t\t\t\t\t<Grid container sx={{height : \"100%\"}}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sx={{height : \"20%\"}}>\r\n\t\t\t\t\t\t\t\t\t<Tabs value={this.state.shown_tab} onChange={this.onTabSelect.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"Initial State\"></Tab>\r\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"Simulator\"></Tab>\r\n\t\t\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t\t\t\t<Box style={{display:\"inline\"}}>\r\n\t\t\t\t\t\t\t\t\t{ this.state.shown_tab === 0 &&\r\n\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" sx={{\"font-size\": 20, \"margin\" : \"5px\"}}> Editing Options </Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"\" size=\"small\" variant=\"filled\" value={this.state.editValue} onChange={this.updateSelectedCells.bind(this)} inputRef={e => this.toolbarInput = e}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"Type\" onClick={this.changeGeometry.bind(this)}>{this.state.model.geometry === \"hex\" ?  <HexagonIcon /> : <SquareIcon /> }</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"Random Seed\" value={this.state.rngSeed} onChange={this.setRNGseed.bind(this)} size=\"small\"/>\r\n\t\t\t\t\t\t\t\t\t\t</ Box>\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t{ this.state.shown_tab === 1 &&\r\n\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" sx={{\"font-size\": 20, \"margin\" : \"5px\"}}> Playback Options </Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"Speed\" size=\"small\" variant=\"filled\" value={this.state.speedup_factor} onChange={this.updateSpeedUp.bind(this)} InputProps={{type : \"number\"}} style={{width : \"10%\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"FPS\" size=\"small\" variant=\"filled\" value={this.state.fps} onChange={this.updateFPS.bind(this)} InputProps={{type : \"number\"}} style={{width : \"10%\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField label=\"Random Seed\" value={this.state.shown_tab === 1 ? this.state.model.random?.seed.toString() : this.state.rngSeed} onChange={this.setRNGseed.bind(this)} disabled={this.state.shown_tab === 1} InputProps={{endAdornment:this.state.shown_tab === 1 ? <InputAdornment position=\"end\"><Button onClick={this.copyRNGseed.bind(this)} >Set</Button></InputAdornment> : null}} size=\"small\"/>\r\n\t\t\t\t\t\t\t\t\t\t</ Box>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} sx={{height : \"80%\"}}>\r\n\t\t\t\t\t\t\t\t\t{this.state.shown_tab === 0 &&\r\n\t\t\t\t\t\t\t\t\t\t<GridDisplayComponent current_state={this.state.model.initial_state} model={this.state.model} geometry={this.state.geometry} ref={elem => this.initial_state_component = elem} size={this.state.sim_size} zoom={this.zoom.bind(this)} selectedCells={this.selectedCells.bind(this)}/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{this.state.shown_tab === 1 &&\r\n\t\t\t\t\t\t\t\t\t\t<GridDisplayComponent current_state={this.state.model.sim_started() ? this.state.model.current_state : this.state.model.initial_state} model={this.state.model} geometry={this.state.geometry} ref={elem => this.simulator_component = elem} size={this.state.sim_size} zoom={this.zoom.bind(this)} selectedCells={this.selectedCells.bind(this)} simulation/>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<ColourMappingComponent model={this.state.model} refreshColour={this.refreshColour.bind(this)} addColour={this.addColour.bind(this)} deleteColour={this.deleteColour.bind(this)} colour_map={this.state.colour_map}/>\r\n\t\t\t\t\t<TransitionRulesComponent ref={elem => this.transition_state_component = elem} model={this.state.model} addRule={this.addRule.bind(this)} deleteRule={this.deleteRule.bind(this)} rules={this.state.rules}/>\r\n\t\t\t\t\t<ImportExportComponent export_code={this.export_code.bind(this)} import_code={this.import_code.bind(this)} import_example={this.import_example.bind(this)}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</ThemeProvider>\r\n\t}\r\n\r\n\tasync import_code() {\r\n\t\tconst files = (document.getElementById(\"import_input\") as HTMLInputElement).files;\r\n\t\tif (files === null) return;\r\n\r\n\t\tlet new_model : Surface_CRN|false = await Surface_CRN.parser.parse_import_files([...files]);\r\n\r\n\t\tif (new_model === false) {\r\n\t\t\t//show errors\r\n\t\t} else {\r\n\t\t\tthis.update_page(new_model);\r\n\t\t}\r\n\t}\r\n\r\n\texport_code() {\r\n\t\tlet r = this.state.model.export(),\r\n\t\t\tblob = new Blob([r], { type: 'text/plain' }),\r\n\t\t\tanchor = document.createElement('a');\r\n\t\tanchor.download = \"surface_crn_export.txt\";\r\n\t\tanchor.href = (window.webkitURL || window.URL).createObjectURL(blob);\r\n\t\tanchor.dataset.downloadurl = ['text/plain', anchor.download, anchor.href].join(':');\r\n\t\tanchor.click();\r\n\t}\r\n\r\n\timport_example(file : string) {\r\n\t\tif (file === \"\") return;\r\n\r\n\t\tlet r = this;\r\n\t\tfetch(file,\r\n\t\t\t{headers : {\r\n\t\t\t\t'Content-Type': 'application/text',\r\n\t\t\t\t'Accept': 'application/text'\r\n\t\t\t}}\r\n\t\t).then(function(response : Response){\r\n\t\t\treturn response.text();\r\n\t\t}).then(function(s : string) {\r\n\t\t\tlet new_model = Surface_CRN.parser.parse_code(s.split(\"\\n\"));\r\n\r\n\t\t\tr.update_page(new_model);\r\n\t\t});\r\n\t}\r\n\r\n\tsetPlaying(sim_playing : boolean) {\r\n\t\tthis.setState({playing_simulation : sim_playing});\r\n\t}\r\n\r\n\tupdate_page(new_model : Surface_CRN) {\r\n\t\tthis.setState({shown_tab : 0, playing_simulation : false, model : new_model, geometry : new_model.geometry, sim_size : new_model.pixels_per_node, colour_map : new_model.colour_map, rules : [...new_model.rules], editValue : \"\", selectedCells : [], rngSeed : (new_model.rng_seed || \"\").toString(), fps : new_model.fps, speedup_factor : new_model.speedup_factor});\r\n\t}\r\n\r\n\tchangeGeometry() {\r\n\t\tif (this.state.model.geometry === \"hex\") {\r\n\t\t\tthis.state.model.geometry = \"square\";\r\n\t\t} else if (this.state.model.geometry === \"square\") {\r\n\t\t\tthis.state.model.geometry = \"hex\";\r\n\t\t}\r\n\t\tthis.setState({geometry : this.state.model.geometry});\r\n\t\tthis.refreshSimState();\r\n\t\tthis.refreshInitState();\r\n\t}\r\n\r\n\trefreshInitState() {\r\n\t\tif (this.initial_state_component !== null) {\r\n\t\t\t//this.state.model.colour_map.clear_temp();\r\n\t\t\tthis.initial_state_component!.setState({\r\n\t\t\t\tcolour_map: this.state.model.colour_map,\r\n\t\t\t\tgeometry: this.state.model.geometry,\r\n\t\t\t\tsize: this.state.model.pixels_per_node,\r\n\t\t\t\tdata : this.initial_state_component.createData(this.state.model.initial_state)\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSimState() {\r\n\t\tconst sim = this.simulator_component;\r\n\t\tconst model = this.state.model;\r\n\t\tif (sim !== null) {\r\n\t\t\tsim.setState({colour_map: model.colour_map, size: model.pixels_per_node, data : sim.createData(model.sim_started() ? model.current_state : model.initial_state), sim_time : model.sim_time});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshColour() {\r\n\t\tthis.refreshInitState();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tstartSimulation() {\r\n\t\tthis.state.model.start_sim();\r\n\t\tthis.refreshSimState();\r\n\t\tthis.setState({rngSeed : this.state.model.random!.seed.toString()});\r\n\t}\r\n\r\n\tshowSimulation() {\r\n\t\tif (this.state.shown_tab !== 1) this.setState({shown_tab : 1})\r\n\t\tif (!this.state.model.sim_started()) {\r\n\t\t\tthis.startSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\tonTabSelect(e : React.SyntheticEvent, value : number) {\r\n\t\tthis.setState({shown_tab : value});\r\n\t\tif (value === 1) {\r\n\t\t\tthis.startSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\tplayPressed(e : MouseEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tif (this.state.playing_simulation) {\r\n\t\t\tthis.setPlaying(false);\r\n\t\t} else {\r\n\t\t\tthis.setPlaying(true);\r\n\t\t\tthis.playSimulation(true);\r\n\t\t}\r\n\t}\r\n\r\n\tplaySimulation(started? : boolean) {\r\n\t\tif (!started && !this.state.playing_simulation) return;\r\n\t\tlet b = this.state.model.next_frame();\r\n\t\tthis.refreshSimState();\r\n\t\tif (!b) {\r\n\t\t\tthis.setPlaying(false);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(this.playSimulation.bind(this), 1/this.state.model.fps)\r\n\t\t}\r\n\t}\r\n\r\n\tstepForwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.step_forward()\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tstepBackwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.step_backward();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tfastForwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.next_frame();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tfastBackwardPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.showSimulation();\r\n\t\tthis.state.model.prev_frame();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\tstopPressed(e : PointerEvent) {\r\n\t\te.preventDefault();\r\n\t\tthis.setPlaying(false);\r\n\t\tthis.state.model.stop_sim();\r\n\t\tthis.refreshSimState();\r\n\t}\r\n\r\n\taddColour() {\r\n\t\tlet c : Colour = this.state.model.colour_map.new_colour();\r\n\t\tthis.state.model.colour_map.add(Object.assign(c, {\"name\" : \"New\"}));\r\n\r\n\t\tthis.setState({colour_map : this.state.model.colour_map});\r\n\t}\r\n\r\n\tdeleteColour(c : Colour) {\r\n\t\tthis.state.model.colour_map.delete(c);\r\n\t\tthis.setState({colour_map : this.state.model.colour_map});\r\n\t}\r\n\r\n\tdeleteRule(r : Transition_Rule) {\r\n\t\tthis.state.model.remove_rule(r);\r\n\t\tthis.setState({rules : [...this.state.model.rules]});\r\n\t}\r\n\r\n\taddRule() {\r\n\t\tthis.state.model.add_rule();\r\n\t\tthis.setState({rules : [...this.state.model.rules]});\r\n\t}\r\n\r\n\tzoom(out : boolean) {\r\n\t\tconst oldZoom = this.state.model.pixels_per_node;\r\n\t\tif (out) this.state.model.increase_size();\r\n\t\telse this.state.model.decrease_size();\r\n\t\tthis.setState({sim_size : this.state.model.pixels_per_node});\r\n\t\treturn oldZoom/this.state.model.pixels_per_node;\r\n\t}\r\n\r\n\tselectedCells(selected : Point[], value : string) {\r\n\t\tthis.setState({selectedCells : selected, editValue : value});\r\n\t\tthis.toolbarInput && this.toolbarInput.focus();\r\n\t}\r\n\r\n\tupdateSelectedCells(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tif (e.target.value.match(/^\\w*$/)) {\r\n\t\t\tthis.setState({editValue : e.target.value});\r\n\t\t\tthis.state.model.set_cells(this.state.selectedCells.map(p => [p.x, p.y]), e.target.value);\r\n\t\t\tthis.refreshInitState();\r\n\t\t}\r\n\t}\r\n\r\n\tsetRNGseed(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet n = e.target.value;\r\n\t\tif (n === '') {\r\n\t\t\tthis.setState({rngSeed : n});\r\n\t\t\tthis.state.model.rng_seed = null;\r\n\t\t} else {\r\n\t\t\tlet x = parseInt(n);\r\n\t\t\tthis.setState({rngSeed : n});\r\n\t\t\tthis.state.model.rng_seed = x;\r\n\t\t}\r\n\t}\r\n\r\n\tcopyRNGseed() {\r\n\t\tthis.state.model.rng_seed = this.state.model.random!.seed;\r\n\t\tthis.setState({rngSeed : this.state.model.rng_seed.toString()});\r\n\t}\r\n\r\n\tupdateFPS(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet n = e.target.value;\r\n\t\tlet x = parseFloat(n);\r\n\t\tthis.setState({fps : x});\r\n\t\tthis.state.model.fps = x;\r\n\t}\r\n\r\n\tupdateSpeedUp(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet n = e.target.value;\r\n\t\tlet x = parseFloat(n);\r\n\t\tthis.setState({speedup_factor : x});\r\n\t\tthis.state.model.speedup_factor = x;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SurfaceCRNapp from './SurfaceCRNapp';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<title> Surface CRN Simulator </title>\r\n\t\t<SurfaceCRNapp />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Colour = exports.Colour_Map = exports.Transition_Rule = exports.Species_Matcher = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nexports.Species_Matcher = Species_Matcher_1.default;\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nexports.Transition_Rule = Transition_Rule_1.default;\nconst Colour_Map_1 = __importDefault(require(\"./Colour_Map\"));\nexports.Colour_Map = Colour_Map_1.default;\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nexports.Colour = Colour_1.default;\nconst Transition_State_1 = __importDefault(require(\"./Transition_State\"));\nconst Parser_1 = require(\"./Parser\");\nconst ts_priority_queue_1 = __importDefault(require(\"ts-priority-queue\"));\nconst random_seedable_1 = require(\"random-seedable\");\nclass Surface_CRN {\n    constructor(p = {}) {\n        this.initial_state = [];\n        this.rules = [];\n        this.colour_map = new Colour_Map_1.default();\n        this.options = new Map();\n        this.geometry = 'square';\n        this.rng_seed = null;\n        this.pixels_per_node = 20;\n        this.speedup_factor = 1;\n        this.fps = 30;\n        this.random = null;\n        this.current_state = [];\n        this.last_updated = [];\n        this.sim_time = 0;\n        this.sim_queue = null;\n        this.sim_history = [];\n        this.rule_check_cache = {};\n        Object.assign(this, p);\n    }\n    remove_rule(r) {\n        this.rules.splice(this.rules.indexOf(r), 1);\n    }\n    add_rule() {\n        this.rules.push(Transition_Rule_1.default.blankRule());\n    }\n    set_cells(coords, val) {\n        if (coords.length === 0)\n            return;\n        let xS = coords.map(x => x[0]).sort();\n        let minX = xS[0];\n        let maxX = xS[xS.length - 1];\n        if (minX < 0) {\n            for (let i of this.initial_state) {\n                i.unshift(...Array(-minX).fill(''));\n            }\n            maxX -= minX;\n        }\n        let width = this.initial_state[0].length;\n        if (maxX >= width) {\n            for (let i of this.initial_state) {\n                i.push(...Array(maxX - width + 1).fill(''));\n            }\n        }\n        let yS = coords.map(x => x[1]).sort();\n        let minY = yS[0];\n        let maxY = yS[yS.length - 1];\n        if (minY < 0) {\n            this.initial_state.unshift(...Array(-minY).map(_ => Array(this.initial_state[0].length).fill('')));\n            maxY -= minY;\n        }\n        if (maxY >= this.initial_state.length) {\n            this.initial_state.push(...Array(maxY - this.initial_state.length + 1).fill('').map(_ => Array(this.initial_state[0].length).fill('')));\n        }\n        for (let [x, y] of coords) {\n            this.initial_state[y][x] = val;\n        }\n    }\n    set_option(key, value) {\n        switch (key) {\n            case \"geometry\":\n                if (value === \"square\" || value === \"hex\") {\n                    this.geometry = value;\n                }\n                else {\n                    throw \"Invalid option: Geometry\";\n                }\n                break;\n            case \"rng_seed\":\n                var i = parseInt(value);\n                this.rng_seed = i;\n                break;\n            case \"pixels_per_node\":\n                var i = parseFloat(value);\n                this.pixels_per_node = i;\n                break;\n            case \"speedup_factor\":\n                var i = parseFloat(value);\n                this.speedup_factor = i;\n                break;\n            case \"fps\":\n                var i = parseFloat(value);\n                this.fps = i;\n                break;\n        }\n        this.options.set(key, value);\n    }\n    export() {\n        let output = [];\n        // Options here\n        for (let [k, v] of this.options) {\n            output.push(k + \" = \" + v);\n        }\n        // Transition rules here\n        output.push(\"!START_TRANSITION_RULES\");\n        output.push(...this.rules.map(a => a.toString()));\n        output.push(\"!END_TRANSITION_RULES\\n\");\n        // Colour mapping\n        output.push([\"!START_COLORMAP\"]);\n        output.push(...this.colour_map.export());\n        output.push([\"!END_COLORMAP\\n\"]);\n        // Initial State\n        output.push([\"!START_INIT_STATE\"]);\n        output.push(...this.initial_state.map(a => a.join(' ')));\n        output.push([\"!END_INIT_STATE\\n\"]);\n        return output.join(\"\\n\");\n    }\n    stop_sim() {\n        this.current_state = [];\n        this.last_updated = [];\n        this.sim_time = 0;\n        this.sim_queue = null;\n        this.sim_history = [];\n        this.rule_check_cache = {};\n        this.colour_map.clear_temp();\n    }\n    start_sim() {\n        if (this.sim_started()) {\n            //this.stop_sim();\n            return;\n        }\n        if (this.rng_seed !== null) {\n            this.random = new random_seedable_1.MersenneTwister(this.rng_seed);\n        }\n        else {\n            this.random = new random_seedable_1.MersenneTwister();\n            this.random = new random_seedable_1.MersenneTwister(this.random.int());\n        }\n        this.sim_queue = new ts_priority_queue_1.default({ comparator: (a, b) => a.execution_time - b.execution_time });\n        let initial_changes = [];\n        this.initial_state.forEach((s, y) => {\n            this.last_updated.push(Array(s.length).fill(0));\n            this.current_state.push([]);\n            s.forEach((_, x) => {\n                this.current_state[this.current_state.length - 1].push(this.initial_state[y][x]);\n                let r = this.find_next_transitions(x, y);\n                for (let t of r) {\n                    initial_changes.push(t);\n                }\n            });\n        });\n        this.sim_queue = new ts_priority_queue_1.default({ comparator: (a, b) => a.execution_time - b.execution_time, initialValues: initial_changes });\n    }\n    get_next_transition() {\n        if (this.sim_started()) {\n            while (this.sim_queue.length != 0) {\n                let t = this.sim_queue.peek();\n                let b = t.new_cells.every(([x, y, _]) => {\n                    return this.last_updated[y][x] <= t.update_time;\n                });\n                if (b)\n                    break;\n                this.sim_queue.dequeue();\n            }\n            if (this.sim_queue.length == 0)\n                return false;\n            return this.sim_queue.peek();\n        }\n        return false;\n    }\n    run_upto(time) {\n        while (this.sim_time < time) {\n            let t = this.get_next_transition();\n            if (t === false)\n                return false;\n            if (t.execution_time > time)\n                break;\n            this.step_forward();\n        }\n        this.sim_time = time;\n        return true;\n    }\n    run_backto(time) {\n        while (this.sim_time > time) {\n            let t = this.step_backward();\n            if (t === false)\n                return false;\n        }\n        this.sim_time = time;\n        return true;\n    }\n    next_frame() {\n        return this.run_upto(this.sim_time + this.speedup_factor * 1 / this.fps);\n    }\n    prev_frame() {\n        return this.run_backto(this.sim_time - this.speedup_factor * 1 / this.fps);\n    }\n    step_forward() {\n        if (this.sim_started()) {\n            let t = this.get_next_transition();\n            if (t === false)\n                return false;\n            this.sim_queue.dequeue();\n            this.sim_time = t.execution_time;\n            t.new_cells.forEach(([x, y, s]) => {\n                this.current_state[y][x] = s;\n                this.last_updated[y][x] = this.sim_time;\n            });\n            if (t.new_transitions === null) {\n                t.new_transitions = [];\n                let ignore = new Set();\n                t.new_cells.forEach(([x, y, _]) => {\n                    let newT = this.find_next_transitions(x, y, ignore);\n                    for (var tr of newT) {\n                        this.sim_queue.queue(tr);\n                        t && t.new_transitions.push(tr);\n                    }\n                    ignore.add([x, y]);\n                });\n            }\n            else {\n                t.new_transitions.forEach((newT) => {\n                    this.sim_queue.queue(newT);\n                });\n            }\n            this.sim_history.push(t);\n            return this.sim_queue.length != 0;\n        }\n        else {\n            return false;\n        }\n    }\n    step_backward() {\n        if (this.sim_started()) {\n            let t = this.sim_history.pop();\n            if (t === undefined)\n                return false;\n            this.sim_time = t.execution_time;\n            t.old_cells.forEach(([x, y, s]) => {\n                this.current_state[y][x] = s;\n                this.last_updated[y][x] = 0;\n            });\n            this.sim_queue.queue(t);\n            return true;\n        }\n        return false;\n    }\n    find_next_transitions(x, y, ignore = new Set()) {\n        let current_cell = this.current_state[y][x];\n        let possible_transitions = [];\n        let rs = [];\n        let z = this.rule_check_cache[current_cell];\n        if (z === undefined) {\n            /*\n            for (let rule of this.rules) {\n                if (rule.is_mono && rule.matches(current_cell)) {\n                    rs.push(rule);\n                } else if (!rule.is_mono && rule.m) {\n\n                }\n            }\n            this.rule_check_cache[current_cell] = rs;\n            */\n            rs = this.rules;\n        }\n        else {\n            rs = z;\n        }\n        for (let rule of rs) {\n            if (rule.is_mono) {\n                let m = rule.matches(current_cell);\n                for (const r of m) {\n                    let t = this.sim_time + Math.log(1 / this.random.float()) / rule.rate;\n                    // if (best_mono_transition !== null && best_mono_transition.execution_time > t) continue;\n                    let tr = new Transition_State_1.default(this.sim_time, t);\n                    tr.add_old_cell(x, y, current_cell);\n                    tr.add_new_cell(x, y, r[0]);\n                    possible_transitions.push(tr);\n                }\n            }\n            else {\n                let neighbour_offsets = [];\n                if (this.geometry == 'square') {\n                    neighbour_offsets = [[-1, 0], [0, -1], [1, 0], [0, 1]];\n                }\n                else {\n                    neighbour_offsets = [[1, 0], [-1, 0], [0, 1], [y % 2 ? 1 : -1, 1], [0, -1], [y % 2 ? 1 : -1, -1]];\n                }\n                for (let [xd, yd] of neighbour_offsets) {\n                    if (y + yd >= 0 && y + yd < this.current_state.length && x + xd >= 0 && x + xd < this.current_state[y + yd].length) {\n                        if (ignore.has([x + xd, y + yd]))\n                            continue;\n                        let other_cell = this.current_state[y + yd][x + xd];\n                        let m = rule.matches(current_cell, other_cell);\n                        for (const r of m) {\n                            let t = this.sim_time + Math.log(1 / this.random.float()) / rule.rate;\n                            //if (best_transition && best_transition.execution_time > t) continue;\n                            let tr = new Transition_State_1.default(this.sim_time, t);\n                            tr.add_old_cell(x, y, current_cell);\n                            tr.add_old_cell(x + xd, y + yd, other_cell);\n                            tr.add_new_cell(x, y, r[0]);\n                            tr.add_new_cell(x + xd, y + yd, r[1]);\n                            possible_transitions.push(tr);\n                        }\n                        m = rule.matches(other_cell, current_cell);\n                        for (const r of m) {\n                            let t = this.sim_time + Math.log(1 / this.random.float()) / rule.rate;\n                            //if (best_transition && best_transition.execution_time > t) continue;\n                            let tr = new Transition_State_1.default(this.sim_time, t);\n                            tr.add_old_cell(x, y, current_cell);\n                            tr.add_old_cell(x + xd, y + yd, other_cell);\n                            tr.add_new_cell(x, y, r[1]);\n                            tr.add_new_cell(x + xd, y + yd, r[0]);\n                            possible_transitions.push(tr);\n                        }\n                    }\n                }\n            }\n        }\n        return possible_transitions;\n    }\n    sim_started() {\n        return this.sim_queue !== null;\n    }\n    increase_size() {\n        if (this.pixels_per_node < 1) {\n            this.pixels_per_node = 1 / (1 / this.pixels_per_node - 1);\n        }\n        else {\n            this.pixels_per_node += 1;\n        }\n    }\n    decrease_size() {\n        if (this.pixels_per_node <= 1) {\n            this.pixels_per_node = 1 / (1 / this.pixels_per_node + 1);\n        }\n        else {\n            this.pixels_per_node -= 1;\n        }\n    }\n}\nexports.default = Surface_CRN;\nSurface_CRN.parser = { parse_import_files: Parser_1.parse_import_files, parse_code: Parser_1.parse_code };\n"],"sourceRoot":""}