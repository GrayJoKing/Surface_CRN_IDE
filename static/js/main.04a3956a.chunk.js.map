{"version":3,"sources":["components/HeaderComponent.tsx","components/PointClass.tsx","components/Grid_StateComponent.tsx","components/TransitionRulesComponent.tsx","components/ColourMappingComponent.tsx","components/ImportExportComponent.tsx","SurfaceCRNapp.tsx","index.tsx","../../surface_crn/Species_Matcher.js","../../surface_crn/Surface_CRN.js","../../surface_crn/Transition_Rule.js","../../surface_crn/Colour.js","../../surface_crn/Colour_Map.js","../../surface_crn/Parser.js"],"names":["HeaderComponent","className","React","Component","Point","x","y","this","p","s","origin","CRN_GridComponent","props","onCellDataChanged","event","setState","data","state","map","row","i","rowIndex","fieldName","newData","model","columns","createCols","current_state","createData","colour_map","grid_type","offset","console","log","rowHeight","colNum","length","push","width","toString","j","getText","renderBackground","context","cellBounds","cell","metadata","colour","find_colour","Colour","white","fillStyle","rgb","join","fillRect","left","top","height","renderText","text","cellHasTextFunction","r","g","b","fillText","editor","serialise","deserialise","prev","trim","match","TransitionRulesComponent","rules_list","rules","id","rule","deleteRule","bind","onClick","addRule","_","remove_rule","add_rule","RuleRowComponent","reactant0","reactants","original_string","reactant1","is_mono","product0","products","product1","rate","value","type","onChange","updateRule","min","step","e","newVal","currentTarget","target","Species_Matcher","update","ColourMappingComponent","refreshInitState","values","v","ColourRowComponent","pickerRef","mouseDownInElement","hex","isOpen","species","name","showList","handleClickOutside","contains","document","addEventListener","handleDownClick","removeEventListener","style","backgroundColor","size","cursor","ref","elem","color","updateColour","a","updateSpecies","update_colour","hex2rgb","update_matcher","ImportExportComponent","import_code","multiple","export_code","SurfaceCRNapp","initial_state_component","transition_state_component","colour_map_component","Surface_CRN","Array","fill","files","getElementById","parser","parse_import_files","new_model","update_page","export","blob","Blob","anchor","createElement","download","href","window","webkitURL","URL","createObjectURL","dataset","downloadurl","click","update_init_state","init_state","updateColsAndData","ReactDOM","render","StrictMode","Object","defineProperty","exports","init","matcher","RegExp","exec","Error","replace","default","__importDefault","mod","__esModule","Colour_Map","Transition_Rule","Species_Matcher_1","require","Transition_Rule_1","Colour_Map_1","Colour_1","Parser_1","options","Map","assign","splice","indexOf","blankRule","output","parse_code","red","green","blue","slice","c","parseInt","some","s1","includes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","next","rejected","result","done","then","apply","Surface_CRN_1","parse_line","line","program","split","start","end","parse_rule","name_colour","vars","sp","parse_colour","set","option","parse_option","val","key","parse_init_state","init_state_section","input_files","Manifest_File","imported","manifest_maps","file","m","f","lines"],"mappings":"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","file":"static/js/main.04a3956a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class HeaderComponent extends React.Component {\r\n\trender() {\r\n\t\treturn <header className=\"grid\">\r\n\t\t\t<nav className=\"grid\">\r\n\t\t\t\t<h2 className=\"grid title\">\r\n\t\t\t\t\tSurface CRN Simulator\r\n\t\t\t\t</h2>\r\n\t\t\t\t<h4 className=\"grid simulator_options\">\r\n\t\t\t\t\t(sim options)\r\n\t\t\t\t</h4>\r\n\t\t\t\t<h4 className=\"grid simulator_controls\">\r\n\t\t\t\t\t(sim controls)\r\n\t\t\t\t</h4>\r\n\t\t\t</nav>\r\n\t\t</header>;\r\n\t}\r\n}","\r\nclass Point {\r\n\tx: number;\r\n\ty: number;\r\n\t\r\n\tstatic origin : Point = new Point(0,0);\r\n\t\r\n\tconstructor(x : number,y : number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\t\r\n\tadd(p : Point) { return new Point(this.x + p.x, this.y + p.y) };\r\n\tsubtract(p : Point) { return new Point(this.x - p.x, this.y - p.y) };\r\n\tscale(s : number) { return new Point(this.x * s, this.y * s) };\r\n};\r\n\r\nexport default Point;","import React from 'react';\r\nimport Surface_CRN, {Species_Matcher, Transition_Rule, Colour_Map, Colour} from 'surface_crn';\r\nimport Point from './PointClass';\r\n\r\nimport {ReactCanvasGrid, ColumnDef, DataRow, CellDef, CustomDrawCallbackMetadata, CellDataChangeEvent, cellHasTextFunction} from 'react-canvas-grid';\r\n\r\ninterface CRN_GridProps {\r\n\tmodel : Surface_CRN\r\n}\r\n\r\ninterface CRN_GridState extends React.ComponentState {\r\n\tcolumns : ColumnDef[],\r\n\tdata: Array<DataRow<string | null>>,\r\n\tcolour_map : Colour_Map,\r\n\tgrid_type : 'square'|'hex',\r\n\toffset : Point,\r\n}\r\n\r\nclass CRN_GridComponent extends React.Component<CRN_GridProps, CRN_GridState> {\r\n\t\r\n\tconstructor(props : CRN_GridProps) {\r\n\t\tsuper(props);\r\n\t\tlet {model} = props;\r\n\t\tthis.state = {\r\n\t\t\tcolumns : this.createCols(model.current_state),\r\n\t\t\tdata : this.createData(model.current_state),\r\n\t\t\tcolour_map : model.colour_map,\r\n\t\t\tgrid_type : model.grid_type,\r\n\t\t\toffset : Point.origin\r\n\t\t};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconsole.log('rendAll');\r\n\t\t// TODO: render \"Initial State\" over canvas?\r\n\t\treturn <div className=\"panel state_panel\">\r\n\t\t\t\t\t<h3> Initial State </h3>\r\n\t\t\t\t\t<ReactCanvasGrid<string | null>\r\n\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\trowHeight={20}\r\n\t\t\t\t\t\tonCellDataChanged={this.onCellDataChanged}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t}\r\n\t\r\n\tpublic updateColsAndData(current_state : string[][]) {\r\n\t\tthis.setState({columns: this.createCols(current_state), data: this.createData(current_state)});\r\n\t}\r\n\t\r\n\tprivate createCols(current_state : string[][]) {\r\n\t\tlet columns = [];\r\n\t\tlet colNum = 0;\r\n\t\tif (current_state.length !== 0) {\r\n\t\t\tcolNum = current_state[0].length;\r\n\t\t}\r\n\t\tcolumns.push({fieldName : 'addLeftCol', width: 20});\r\n\t\tfor (let i = 0; i < colNum; i++) columns.push({fieldName : i.toString(), width: 20});\r\n\t\tcolumns.push({fieldName : 'addRightCol', width: 20});\r\n\t\t\r\n\t\treturn columns;\r\n\t}\r\n\t\r\n\tprivate createData(current_state : string[][]) {\r\n\t\tlet data : Array<DataRow<string | null>> = [];\r\n\t\tfor (let i = -1; i <= current_state.length; i++) {\r\n\t\t\tlet row : DataRow<string | null> = {};\r\n\t\t\tif (i !== -1 && i !== current_state.length) {\r\n\t\t\t\tfor (let j = 0; j < current_state[0].length; j++) {\r\n\t\t\t\t\trow[j.toString()] = {\r\n\t\t\t\t\t\tdata: current_state[i][j],\r\n\t\t\t\t\t\tgetText: (x : string|null) => x ? x : '',\r\n\t\t\t\t\t\trenderBackground: (context : CanvasRenderingContext2D, cellBounds : ClientRect, cell : CellDef<string | null>, metadata : CustomDrawCallbackMetadata) => {\r\n\t\t\t\t\t\t\tif (cell.data !== null) {\r\n\t\t\t\t\t\t\t\tlet colour = this.state.colour_map.find_colour(cell.data);\r\n\t\t\t\t\t\t\t\tif (colour == null) {\r\n\t\t\t\t\t\t\t\t\tcolour = Colour.white();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcontext.fillStyle = 'rgb(' + colour.rgb().join(',') + ')';\r\n\t\t\t\t\t\t\t\tcontext.fillRect(cellBounds.left, cellBounds.top, cellBounds.width, cellBounds.height);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\trenderText : (context: CanvasRenderingContext2D, cellBounds: ClientRect, cell: CellDef<string | null>) => {\r\n\t\t\t\t\t\t\tconst text = cellHasTextFunction(cell) ? cell.getText(cell.data) : cell.text;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (text) {\r\n\t\t\t\t\t\t\t\tlet colour = this.state.colour_map.find_colour(cell.data!);\r\n\t\t\t\t\t\t\t\tif (colour == null) {\r\n\t\t\t\t\t\t\t\t\tcolour = Colour.white();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet [r,g,b] = colour.rgb();\r\n\t\t\t\t\t\t\t\tcontext.fillStyle = (r * 0.299 + g * 0.587 + b * 0.114) > 186 ? 'black' : 'white';\r\n\t\t\t\t\t\t\t\tcontext.fillText(text,cellBounds.left + 2,cellBounds.top + 10, cellBounds.width - 4);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\teditor: {\r\n\t\t\t\t\t\t\tserialise: (x : string|null) => x ? x : '',\r\n\t\t\t\t\t\t\tdeserialise: (text: string, prev : string|null) => {\r\n\t\t\t\t\t\t\t\ttext = text.trim();\r\n\t\t\t\t\t\t\t\tif (text.match(/^\\w+$/)) {\r\n\t\t\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn prev;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (current_state.length != 0) {\r\n\t\t\t\t\tfor (let j = 0; j < current_state[0].length; j++) {\r\n\t\t\t\t\t\trow[j.toString()] = {data: null, text : '', renderBackground : () => 1};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trow['addLeftCol'] = {data: null, text : '', renderBackground : () => 1};\r\n\t\t\trow['addRightCol'] = {data: null, text : '', renderBackground : () => 1};\r\n\t\t\tdata.push(row);\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\t\r\n\tprivate onCellDataChanged = (event: CellDataChangeEvent<string | null>) => {\r\n\t\tthis.setState({\r\n\t\t\tdata: this.state.data.map((row, i) => {\r\n\t\t\t\tif (i === event.rowIndex) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t[event.fieldName]: {\r\n\t\t\t\t\t\t\t...row[event.fieldName],\r\n\t\t\t\t\t\t\tdata: event.newData,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn row;\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default CRN_GridComponent","import React from 'react';\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nimport SurfaceCRN, {Species_Matcher, Transition_Rule, Colour_Map, Colour} from 'surface_crn';\r\n\r\ninterface TransitionRulesProps {\r\n\trules_list : Transition_Rule[]\r\n}\r\n\r\nexport default class TransitionRulesComponent extends React.Component<{model : SurfaceCRN}, TransitionRulesProps> {\r\n\tmodel : SurfaceCRN;\r\n\r\n\tconstructor(props : {model : SurfaceCRN}) {\r\n\t\tsuper(props);\r\n\t\tthis.model = props.model;\r\n\t\tthis.state = {\r\n\t\t\trules_list : props.model.rules,\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\t// TODO: figure out better way of unique indexing\r\n\t\t\r\n\t\treturn <div className=\"grid panel rules_panel\">\r\n\t\t\t<h3 className=\"panel_header\"> Transition Rules </h3>\r\n\t\t\t\r\n\t\t\t<div id=\"rule_container\">\r\n\t\t\t\t{this.state.rules_list.map((r : Transition_Rule, i : number) => <RuleRowComponent key={r.toString() + i.toString()} rule={r} deleteRule={this.deleteRule(r).bind(this)} />)}\r\n\t\t\t\t<div onClick={this.addRule.bind(this)}> Add Rule </div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n\t\r\n\tdeleteRule(r : Transition_Rule) {\r\n\t\treturn (_ : any) => {\r\n\t\t\tthis.model.remove_rule(r);\r\n\t\t\tthis.setState({rules_list : this.model.rules});\r\n\t\t}\r\n\t}\r\n\t\r\n\taddRule() {\r\n\t\tthis.model.add_rule();\r\n\t\tthis.setState({rules_list : this.model.rules});\r\n\t}\r\n}\r\n\r\ninterface RuleRowState {\r\n\treactant0 : string,\r\n\treactant1 : string,\r\n\tproduct0 : string,\r\n\tproduct1 : string,\r\n\trate : number,\r\n}\r\n// TODO: Handle mono transitions properly (in here and in model)\r\nclass RuleRowComponent extends React.Component<{rule: Transition_Rule, deleteRule : React.MouseEventHandler<Element>}, RuleRowState> {\r\n\trule : Transition_Rule;\r\n\tdeleteRule : React.MouseEventHandler<Element>;\r\n\t\r\n\tconstructor(props : {rule : Transition_Rule, deleteRule : React.MouseEventHandler<Element>}) {\r\n\t\tsuper(props);\r\n\t\tthis.rule = props.rule;\r\n\t\tthis.state = {\r\n\t\t\treactant0 : props.rule.reactants[0].original_string,\r\n\t\t\treactant1 : !props.rule.is_mono ? props.rule.reactants[1].original_string : '',\r\n\t\t\tproduct0 : props.rule.products[0].original_string,\r\n\t\t\tproduct1 : !props.rule.is_mono ? props.rule.products[1].original_string : '',\r\n\t\t\trate : props.rule.rate,\r\n\t\t}\r\n\t\tthis.deleteRule = props.deleteRule;\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t// TODO: gray out mono'd rules\r\n\t\t\r\n\t\treturn <div className=\"rulesRow grid\">\r\n\t\t\t<div> <input value={this.state.rate} type=\"number\" className=\"rulesRate\" onChange={this.updateRule.bind(this)} min=\"0\" step=\"0.1\"/> </div>\r\n\t\t\t<div> <input value={this.state.reactant0} className=\"rulesReactant0\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<div> + </div>\r\n\t\t\t<div> <input value={this.state.reactant1} className=\"rulesReactant1\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<div> =&gt; </div>\r\n\t\t\t<div> <input value={this.state.product0} className=\"rulesProduct0\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<div> + </div>\r\n\t\t\t<div> <input value={this.state.product1} className=\"rulesProduct1\" onChange={this.updateRule.bind(this)}/> </div>\r\n\t\t\t<FaTrash onClick={this.deleteRule} />\r\n\t\t</div>;\r\n\t}\r\n\t\r\n\tupdateRule(e : React.ChangeEvent<HTMLInputElement>) {\r\n\t\tlet reactants = this.rule.reactants;\r\n\t\tlet products = this.rule.products;\r\n\t\tlet newVal : string = e.currentTarget.value;\r\n\t\tswitch (e.target.className) {\r\n\t\t\tcase \"rulesReactant0\":\r\n\t\t\t\treactants[0] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({reactants : reactants});\r\n\t\t\t\tthis.setState({reactant0 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesReactant1\":\r\n\t\t\t\treactants[1] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({reactants : reactants});\r\n\t\t\t\tthis.setState({reactant1 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesProduct0\":\r\n\t\t\t\tproducts[0] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({products : products});\r\n\t\t\t\tthis.setState({product0 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesProduct1\":\r\n\t\t\t\tproducts[1] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({products : products});\r\n\t\t\t\tthis.setState({product1 : newVal});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rulesRate\":\r\n\t\t\t\tproducts[1] = new Species_Matcher(newVal);\r\n\t\t\t\tthis.rule.update({rate : +newVal});\r\n\t\t\t\tthis.setState({rate : +newVal});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\nimport SurfaceCRN, {Colour_Map, Colour, Species_Matcher} from 'surface_crn';\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport { FaAngleRight } from \"react-icons/fa\";\r\n\r\nexport default class ColourMappingComponent extends React.Component<{model : SurfaceCRN, refreshInitState : () => void}, {colour_map : Colour_Map}> {\r\n\tmodel : SurfaceCRN;\r\n\trefreshInitState : () => void;\r\n\t\r\n\tconstructor(props : {model : SurfaceCRN, refreshInitState : () => void}) {\r\n\t\tsuper(props);\r\n\t\tthis.model = props.model;\r\n\t\tthis.refreshInitState = props.refreshInitState;\r\n\t\tthis.state = {colour_map : this.model.colour_map};\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn <div className=\"grid panel colour_panel\">\r\n\t\t\t<h3> Colour Mapping </h3>\r\n\t\t\t\r\n\t\t\t<div id=\"colour_container\">\r\n\t\t\t\t{[...this.state.colour_map.values()].map(v =>\r\n\t\t\t\t\t<ColourRowComponent colour={v} refreshInitState={this.refreshInitState}/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\ninterface ColourRowState {\r\n\tcolour : string\r\n\tisOpen : boolean\r\n\tspecies : Species_Matcher[]\r\n\tname : string\r\n\tshowList : boolean\r\n}\r\n\r\ninterface ColourRowProps {\r\n\tcolour : Colour\r\n\trefreshInitState : (() => void)\r\n}\r\n\r\nclass ColourRowComponent extends React.Component<ColourRowProps,ColourRowState> {\r\n\tcolour : Colour;\r\n\tpickerRef : HTMLDivElement | null = null;\r\n\trefreshInitState : (() => void);\r\n\tmouseDownInElement : boolean = false;\r\n\t\r\n\tconstructor(p : ColourRowProps) {\r\n\t\tsuper(p);\r\n\t\tthis.colour = p.colour;\r\n\t\tthis.refreshInitState = p.refreshInitState;\r\n\t\tthis.state = {colour : p.colour.hex(), isOpen : false, species : p.colour.species, name: p.colour.name, showList : false};\r\n\r\n\t\tthis.handleClickOutside = this.handleClickOutside.bind(this);\r\n\t}\r\n\t\r\n\thandleClickOutside(event : MouseEvent) {\r\n\t\t// TODO:  fix click on swatch to close picker\r\n\t\tif (!this.mouseDownInElement && this.pickerRef && !this.pickerRef.contains(event.target as Node)) {\r\n\t\t\tthis.setState({isOpen : false});\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleDownClick(event : MouseEvent) {\r\n\t\tthis.mouseDownInElement = (!this.pickerRef || this.pickerRef.contains(event.target as Node));\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('mousedown', this.handleDownClick.bind(this));\r\n\t\tdocument.addEventListener('mouseup', this.handleClickOutside.bind(this));\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('mousedown', this.handleDownClick);\r\n\t\tdocument.removeEventListener('mouseup', this.handleClickOutside);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t// TODO: disallow invalid chars in number\r\n\t\treturn <div>\r\n\t\t\t<div className=\"picker\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"swatch\"\r\n\t\t\t\t\tstyle={{ backgroundColor: this.colour.hex() }}\r\n\t\t\t\t\tonClick={() => !this.state.isOpen && this.setState({isOpen : !this.state.isOpen})}\r\n\t\t\t\t/>\r\n\t\t\t\t<input value={this.state.name} onChange={(e) => {let s = e.currentTarget.value; this.setState({name : s}); this.colour.name = s}} />\r\n\t\t\t\t<FaAngleRight size={25} style={{cursor : 'pointer'}} onClick={(e) => {this.setState({showList : !this.state.showList})}} />\r\n\t\t\t</div>\r\n\t\t\t{this.state.isOpen && (\r\n\t\t\t\t<div className=\"popover\" ref={(elem) => this.pickerRef = elem} >\r\n\t\t\t\t<HexColorPicker color={this.colour.hex()} onChange={(s) => {this.setState({colour : s}); this.updateColour(s)}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{this.state.showList && \r\n\t\t\t\t<div className=\"flexBox\">\r\n\t\t\t\t\t{this.colour.species.map((a : Species_Matcher) => <div> <input value={a.original_string} key={a.original_string} className=\"\" onChange={this.updateSpecies(a).bind(this)}/> </div>)}\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>;\r\n\t}\r\n\t\r\n\tupdateColour(s : string) {\r\n\t\tthis.colour.update_colour(Colour.hex2rgb(s));\r\n\t\tthis.refreshInitState();\r\n\t}\r\n\t\r\n\tupdateSpecies(a : Species_Matcher) {\r\n\t\treturn (e : React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\ta.update_matcher(e.target.value);\r\n\t\t\tthis.setState({species : this.colour.species});\r\n\t\t\tthis.refreshInitState();\r\n\t\t}\r\n\t}\r\n\t\r\n}","import React from 'react';\r\n\r\ninterface ImportProps {\r\n\timport_code : () => Promise<void>\r\n\texport_code : () => void\r\n}\r\n\r\nexport class ImportExportComponent extends React.Component<ImportProps> {\r\n\t\r\n\tpublic constructor(props: ImportProps) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\t\r\n\trender () {\r\n\t\tconst { import_code } = this.props;\r\n\t\treturn <div className=\"grid panel import_export_panel\">\r\n\t\t\t\t<h3> Import/Export </h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"file\" id=\"import_input\" multiple />\r\n\t\t\t\t\t<button type=\"submit\" id=\"import_submit\" onClick={import_code}> Import </button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button id=\"export\" onClick={this.props.export_code}> Export </button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>;\r\n\t}\r\n}\r\n\r\nexport default ImportExportComponent;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Surface_CRN, {Species_Matcher, Transition_Rule, Colour_Map, Colour} from 'surface_crn';\r\nimport './index.css';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport CRN_GridComponent from './components/Grid_StateComponent';\r\nimport TransitionRulesComponent from './components/TransitionRulesComponent';\r\nimport SimulatorOptionsComponent from './components/SimulatorOptionsComponent';\r\nimport ColourMappingComponent from './components/ColourMappingComponent';\r\nimport ImportExportComponent from './components/ImportExportComponent';\r\n\r\ninterface SurfaceCRNappState {\r\n\tmodel : Surface_CRN\r\n}\r\n\r\nexport default class SurfaceCRNapp extends React.Component<{}, SurfaceCRNappState> {\r\n\t\r\n\tinitial_state_component : CRN_GridComponent | null = null;\r\n\ttransition_state_component : TransitionRulesComponent | null = null;\r\n\tcolour_map_component : ColourMappingComponent | null = null;\r\n\r\n\tconstructor(p : {}) {\r\n\t\tsuper(p);\r\n\t\tthis.state = {model : new Surface_CRN({current_state : Array(5).fill(Array(5).fill('I'))})};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <div className=\"main_grid grid\">\r\n\t\t\t\t<HeaderComponent />\r\n\t\t\t\t<CRN_GridComponent model={this.state.model} ref={elem => this.initial_state_component = elem}/>\r\n\t\t\t\t<ColourMappingComponent ref={elem => this.colour_map_component = elem} model={this.state.model} refreshInitState={this.refreshInitState.bind(this)}/>\r\n\t\t\t\t<TransitionRulesComponent ref={elem => this.transition_state_component = elem} model={this.state.model}/>\r\n\t\t\t\t<ImportExportComponent export_code={this.export_code.bind(this)} import_code={this.import_code.bind(this)}/>\r\n\t\t\t</div>\r\n\t}\r\n\r\n\tasync import_code() {\r\n\t\tconst files = (document.getElementById(\"import_input\") as HTMLInputElement).files;\r\n\t\tif (files === null) return;\r\n\t\t\r\n\t\tlet new_model : Surface_CRN|false = await Surface_CRN.parser.parse_import_files([...files]);\r\n\t\t\r\n\t\tif (new_model === false) {\r\n\t\t\t//show errors\r\n\t\t} else {\r\n\t\t\tthis.setState({model : new_model});\r\n\t\t\tthis.update_page();\r\n\t\t}\r\n\t}\r\n\t\r\n\texport_code() {\r\n\t\tlet r = this.state.model.export(),\r\n\t\t\tblob = new Blob([r], { type: 'text/plain' }),\r\n\t\t\tanchor = document.createElement('a');\r\n\t\tanchor.download = \"surface_crn_export.txt\";\r\n\t\tanchor.href = (window.webkitURL || window.URL).createObjectURL(blob);\r\n\t\tanchor.dataset.downloadurl = ['text/plain', anchor.download, anchor.href].join(':');\r\n\t\tanchor.click();\r\n\t}\r\n\r\n\tupdate_page() {\r\n\t\t// TODO: move all these to component render sections\r\n\t\t//this.update_rules(this.state.model.rules);\r\n\t\tthis.transition_state_component!.model = this.state.model;\r\n\t\tthis.transition_state_component!.setState({rules_list : this.state.model.rules});\r\n\t\tthis.colour_map_component!.model = this.state.model;\r\n\t\tthis.colour_map_component!.setState({colour_map : this.state.model.colour_map});\r\n\r\n\t\t//this.update_colour_map(this.state.model.colour_map);\r\n\t\tthis.update_init_state(this.state.model.current_state, this.state.model.colour_map, this.state.model.grid_type);\r\n\t}\r\n\r\n\tupdate_init_state(init_state : string[][], colour_map : Colour_Map, grid_type : 'hex'|'square') {\r\n\t\tthis.initial_state_component!.setState({current_state: init_state, colour_map: colour_map, grid_type: grid_type});\r\n\t\tthis.initial_state_component!.updateColsAndData(init_state);\r\n\t}\r\n\t\r\n\trefreshInitState() {\r\n\t\t// TODO: redo this to avoid re-rendering the whole state\r\n\t\tthis.update_init_state(this.state.model.current_state, this.state.model.colour_map, this.state.model.grid_type);\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SurfaceCRNapp from './SurfaceCRNapp';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<title> Surface CRN Simulator </title>\n\t\t<SurfaceCRNapp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Species_Matcher {\n    constructor(init) {\n        this.original_string = \"\";\n        this.matcher = \"\";\n        this.update_matcher(init);\n    }\n    includes(s) {\n        return (new RegExp(this.matcher)).exec(s) !== null;\n    }\n    is_pure() {\n        return this.original_string.match(/^\\w+$/) === null;\n    }\n    toString() {\n        return this.original_string;\n    }\n    update_matcher(s) {\n        this.original_string = s;\n        if (s.match(/\\\\(\\d|\\(\\d+\\))/) !== null)\n            throw Error();\n        // Todo: handle {} []\n        s = s.replace(/\\\\\\((\\d+)\\)/g, \"(?:\\\\$1)\");\n        this.matcher = '^(?:' + s + ')$';\n    }\n}\nexports.default = Species_Matcher;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Colour = exports.Colour_Map = exports.Transition_Rule = exports.Species_Matcher = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nexports.Species_Matcher = Species_Matcher_1.default;\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nexports.Transition_Rule = Transition_Rule_1.default;\nconst Colour_Map_1 = __importDefault(require(\"./Colour_Map\"));\nexports.Colour_Map = Colour_Map_1.default;\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nexports.Colour = Colour_1.default;\nconst Parser_1 = require(\"./Parser\");\nclass Surface_CRN {\n    constructor(p = {}) {\n        this.current_state = [];\n        this.rules = [];\n        this.colour_map = new Colour_Map_1.default();\n        this.options = new Map();\n        this.grid_type = 'square';\n        Object.assign(this, p);\n    }\n    remove_rule(r) {\n        this.rules.splice(this.rules.indexOf(r), 1);\n    }\n    add_rule() {\n        this.rules.push(Transition_Rule_1.default.blankRule());\n    }\n    export() {\n        let output = [];\n        // Options here\n        // Transition rules here\n        output.push(\"!START_TRANSITION_RULES\");\n        output.push(...this.rules.map(a => a.toString()));\n        output.push(\"!END_TRANSITION_RULES\");\n        // Colour mapping\n        output.push([\"!START_COLORMAP\"]);\n        output.push(...this.colour_map.export());\n        output.push([\"!END_COLORMAP\"]);\n        // Initial State\n        output.push([\"!START_INIT_STATE\"]);\n        output.push(...this.current_state.map(a => a.join(' ')));\n        output.push([\"!END_INIT_STATE\"]);\n        return output.join(\"\\n\");\n    }\n}\nexports.default = Surface_CRN;\nSurface_CRN.parser = { parse_import_files: Parser_1.parse_import_files, parse_code: Parser_1.parse_code };\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nclass Transition_Rule {\n    constructor(init) {\n        this.is_mono = true;\n        this.reactants = [];\n        this.products = [];\n        this.rate = 1;\n        this.update(init);\n    }\n    toString() {\n        return '(' + this.rate.toString() + ') ' + [this.reactants, this.products].map(x => x.map(a => a.toString()).join(' + ')).join(' -> ');\n    }\n    update(p) {\n        // TODO: add error checking\n        Object.assign(this, p);\n        this.is_mono = this.reactants.length < 2 && this.products.length < 2;\n    }\n    static blankRule() {\n        return new Transition_Rule({ is_mono: true, reactants: [new Species_Matcher_1.default('')], products: [new Species_Matcher_1.default('')] });\n    }\n}\nexports.default = Transition_Rule;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Colour {\n    constructor(init) {\n        this.red = 0;\n        this.green = 0;\n        this.blue = 0;\n        this.species = [];\n        this.name = \"\";\n        this.update_colour(init);\n    }\n    static white() { return new Colour({ red: 256, green: 256, blue: 256 }); }\n    rgb() {\n        return [this.red, this.green, this.blue];\n    }\n    hex() {\n        return '#' + this.rgb().map(a => (\"0\" + a.toString(16)).slice(-2)).join('');\n    }\n    update_colour(c) {\n        Object.assign(this, c);\n    }\n    static hex2rgb(s) {\n        s = s.replace(/^#/, '');\n        let r = s.match(/^([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})$/);\n        if (r) {\n            return { red: parseInt(r[1], 16), green: parseInt(r[2], 16), blue: parseInt(r[3], 16) };\n        }\n        else {\n            // TODO: setup fail state\n            return { red: 256, green: 256, blue: 256 };\n        }\n    }\n}\nexports.default = Colour;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Colour_Map extends Map {\n    constructor(init) {\n        super();\n        Object.assign(this, init);\n    }\n    find_colour(s) {\n        for (let [_, c] of this) {\n            if (c.species.some((s1) => s1.includes(s))) {\n                return c;\n            }\n        }\n        return null;\n    }\n    export() {\n        return [...this.values()].map(c => '{' + c.name + '} ' + c.species.map(s => s.toString()).join(' ') + ' : (' + c.rgb().join(',') + ')');\n    }\n}\nexports.default = Colour_Map;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse_import_files = exports.parse_code = void 0;\nconst Species_Matcher_1 = __importDefault(require(\"./Species_Matcher\"));\nconst Transition_Rule_1 = __importDefault(require(\"./Transition_Rule\"));\nconst Colour_1 = __importDefault(require(\"./Colour\"));\nconst Surface_CRN_1 = __importDefault(require(\"./Surface_CRN\"));\nfunction parse_rule(line) {\n    if ((line.match(/->/g) || []).length != 1)\n        return false;\n    let rate = 1;\n    line = line.replace(/\\((\\d+)\\)/, (_, x) => { rate = +x; return ''; });\n    let [start, end] = line.split('->').map(a => a.split('+').map(b => new Species_Matcher_1.default(b.trim()))); // Note change how transition rules are formed\n    //TODO: add more conditions (and error messages?)\n    if (start.length != end.length || start.length > 2 || start.length == 0)\n        return false;\n    return new Transition_Rule_1.default({ reactants: start, products: end, rate: rate, is_mono: start.length == 1 });\n}\nfunction parse_option(line) {\n    if ((line.match(/=/g) || []).length != 1)\n        return false;\n    return line.split('=').map(a => a.trim());\n}\nfunction parse_colour(line) {\n    let vars = line.match(/^(?:\\{([^}]+)\\})? *((?: *[^,: ]+,? *)+) *: *\\((\\d+) *, *(\\d+) *, *(\\d+)\\)$/);\n    if (vars == null)\n        return false;\n    var sp = vars[2].split(/,\\s*|\\s+/).map(a => new Species_Matcher_1.default(a.trim()));\n    return [vars[1], new Colour_1.default({ name: vars[1], species: sp, red: +vars[3], green: +vars[4], blue: +vars[5] })];\n}\nfunction parse_line(line, program) {\n    var rule = parse_rule(line);\n    if (rule !== false) {\n        program.rules.push(rule);\n        return true;\n    }\n    var name_colour = parse_colour(line);\n    if (name_colour !== false) {\n        program.colour_map.set(...name_colour);\n        return true;\n    }\n    var option = parse_option(line);\n    if (option !== false) {\n        let [val, key] = option;\n        program.options.set(val, key);\n        return true;\n    }\n    return false;\n}\nfunction parse_init_state(line) {\n    // TODO: add more error checking\n    return line.split(/\\s+|,/);\n}\nfunction parse_code(data) {\n    let init_state_section = false;\n    let program = new Surface_CRN_1.default();\n    for (let line of data) {\n        line = line.trim().replace(/#.*/, \"\");\n        if (line == \"\")\n            continue;\n        if (!init_state_section) {\n            if (line == \"!START_INIT_STATE\") {\n                init_state_section = true;\n                continue;\n            }\n            parse_line(line, program);\n        }\n        else {\n            if (line == \"!END_INIT_STATE\") {\n                init_state_section = false;\n                continue;\n            }\n            let val = parse_init_state(line);\n            program.current_state.push(val);\n        }\n    }\n    return program;\n}\nexports.parse_code = parse_code;\n// Import project as a list of files\n// TODO: change false to list of warnings\nfunction parse_import_files(input_files) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!input_files) {\n            //show error\n            console.log(\"No input files\");\n            return false;\n        }\n        class Manifest_File {\n            constructor() {\n                this.data = [];\n                this.imported = false;\n            }\n        }\n        let manifest_maps = new Map();\n        ;\n        for (let file of input_files) {\n            var m = new Manifest_File();\n            m.data = (yield file.text()).split(\"\\n\").map(a => a.trim().replace(/#.*/, ''));\n            manifest_maps.set(file.name, m);\n        }\n        for (let [key, m] of manifest_maps) {\n            for (let s of m.data) {\n                if (s.match(/^!INCLUDE /)) {\n                    //TODO: replace includes\n                }\n            }\n        }\n        let lines = [];\n        for (let [_, m] of manifest_maps) {\n            if (!m.imported)\n                lines.push(...m.data);\n        }\n        return parse_code(lines);\n    });\n}\nexports.parse_import_files = parse_import_files;\n"],"sourceRoot":""}